(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsFlapping (BoundSet) Bool)
(declare-fun IsOnWater (BoundSet) Bool)
(declare-fun IsFlying (BoundSet) Bool)
(declare-fun IsOver (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsFlapping a) (IsOnWater b)))) (and (forall ((d BoundSet)) (=> (IsFlapping d) (IsFlying d))) (forall ((e BoundSet)) (=> (IsFlying e) (IsFlapping e))))) (exists ((c BoundSet)) (exists ((a BoundSet)) (and (IsFlying a) (IsOver c)))))))
(check-sat)
(get-model)