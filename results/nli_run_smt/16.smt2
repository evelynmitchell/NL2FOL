(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsPushing (BoundSet) Bool)
(declare-fun HasManyCartons (BoundSet) Bool)
(declare-fun IsOnStreet (BoundSet) Bool)
(declare-fun HasBread (BoundSet) Bool)
(declare-fun IsBaking (BoundSet) Bool)
(declare-fun IsInOven (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsPushing a) (and (HasManyCartons b) (IsOnStreet c)))))) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (HasManyCartons g) (HasBread h))))) (exists ((f BoundSet)) (exists ((e BoundSet)) (exists ((d BoundSet)) (and (IsBaking d) (and (HasBread e) (IsInOven f)))))))))
(check-sat)
(get-model)