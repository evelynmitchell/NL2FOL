(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsPerchedOn (BoundSet BoundSet) Bool)
(declare-fun IsOnBranch (BoundSet BoundSet) Bool)
(declare-fun IsPerching (BoundSet) Bool)
(declare-fun IsInTree (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsPerchedOn a b) (IsOnBranch a c))))) (forall ((e BoundSet)) (forall ((d BoundSet)) (=> (IsPerchedOn d e) (IsPerching d))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsPerching a) (IsInTree b)))))))
(check-sat)
(get-model)