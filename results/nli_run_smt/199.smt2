(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsBreakingThrough (BoundSet) Bool)
(declare-fun IsTrees (BoundSet) Bool)
(declare-fun IsDaytime (BoundSet) Bool)
(declare-fun IsRides (BoundSet) Bool)
(declare-fun IsSwing (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsBreakingThrough a) (IsTrees b)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsBreakingThrough f) (IsDaytime g)))) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsDaytime h) (IsBreakingThrough i)))))) (exists ((e BoundSet)) (exists ((c BoundSet)) (exists ((d BoundSet)) (and (IsRides c) (and (IsSwing d) (IsDaytime e)))))))))
(check-sat)
(get-model)