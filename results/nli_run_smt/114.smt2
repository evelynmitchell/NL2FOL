(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsSmall (BoundSet) Bool)
(declare-fun IsUsed (BoundSet) Bool)
(declare-fun IsHands (BoundSet) Bool)
(declare-fun IsTwo (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsSmall b) (and (IsUsed b) (IsHands a))))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsSmall e) (IsTwo f)))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsTwo g) (IsSmall h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsUsed i) (IsTwo j)))) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (IsTwo k) (IsUsed l)))))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (and (IsTwo d) (IsHands a)))))))
(check-sat)
(get-model)