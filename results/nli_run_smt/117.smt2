(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInCoats (BoundSet) Bool)
(declare-fun IsOnSideOfRoad (BoundSet) Bool)
(declare-fun IsKissed (BoundSet BoundSet) Bool)
(declare-fun IsShownAppreciationFor (BoundSet BoundSet) Bool)
(declare-fun IsAppreciated (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsInCoats a) (and (IsOnSideOfRoad b) (IsKissed a b))))) (and (forall ((f BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsInCoats f) (IsShownAppreciationFor g h))))) (forall ((l BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsKissed i j) (IsShownAppreciationFor k l)))))))) (exists ((e BoundSet)) (exists ((d BoundSet)) (and (IsShownAppreciationFor d e) (IsAppreciated d)))))))
(check-sat)
(get-model)