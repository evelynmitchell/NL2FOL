(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsObscuredInShadow (BoundSet) Bool)
(declare-fun IsInGymnasium (BoundSet) Bool)
(declare-fun AvoidsSun (BoundSet) Bool)
(declare-fun IsVampire (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsObscuredInShadow a) (IsInGymnasium b)))) (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (AvoidsSun f) (IsObscuredInShadow g))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (and (IsVampire a) (AvoidsSun d)))))))
(check-sat)
(get-model)