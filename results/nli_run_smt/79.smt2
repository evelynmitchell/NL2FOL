(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsBlond (BoundSet) Bool)
(declare-fun IsHeldBy (BoundSet) Bool)
(declare-fun IsAtMall (BoundSet) Bool)
(declare-fun IsBeingHeldBy (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (and (IsBlond c) (and (IsHeldBy d) (IsAtMall a)))))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsHeldBy g) (IsBeingHeldBy h)))) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsBeingHeldBy i) (IsHeldBy j)))))) (exists ((f BoundSet)) (exists ((a BoundSet)) (and (IsBeingHeldBy f) (IsAtMall a)))))))
(check-sat)
(get-model)