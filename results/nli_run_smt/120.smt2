(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsInFrontOf (BoundSet BoundSet) Bool)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun LooksAtCamera (BoundSet) Bool)
(declare-fun WearsBlueTShirt (BoundSet) Bool)
(declare-fun WearsSweatpants (BoundSet) Bool)
(declare-fun StandsOnStove (BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (IsInFrontOf b a))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsInFrontOf g h) (IsYoung i))))) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsInFrontOf j k) (LooksAtCamera k)))))) (exists ((f BoundSet)) (exists ((e BoundSet)) (exists ((c BoundSet)) (exists ((d BoundSet)) (and (exists ((a BoundSet)) (( (and (IsYoung c) (and (WearsBlueTShirt d) (and (WearsSweatpants e) (StandsOnStove f)))))) (LooksAtCamera a)))))))))
(check-sat)
(get-model)