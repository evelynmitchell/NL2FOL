(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInPolarIce (BoundSet) Bool)
(declare-fun IsInWorld (BoundSet) Bool)
(declare-fun IsSinceSatelliteRecords (BoundSet) Bool)
(declare-fun IsInPolarIceIncrease (BoundSet) Bool)
(declare-fun IsExperiencing (BoundSet) Bool)
(declare-fun IsIn1979 (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (and (IsInPolarIce b) (and (IsInWorld c) (IsSinceSatelliteRecords d)))))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsInPolarIce h) (IsInPolarIceIncrease i)))) (and (forall ((k BoundSet)) (forall ((j BoundSet)) (=> (IsInPolarIceIncrease j) (IsInPolarIce k)))) (and (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (IsInWorld l) (IsExperiencing m)))) (and (forall ((o BoundSet)) (forall ((n BoundSet)) (=> (IsExperiencing n) (IsInWorld o)))) (forall ((q BoundSet)) (forall ((p BoundSet)) (=> (IsIn1979 p) (IsExperiencing q))))))))) (exists ((f BoundSet)) (exists ((g BoundSet)) (and (IsExperiencing f) (IsInPolarIceIncrease g)))))))
(check-sat)
(get-model)