(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsJumpedFrom (BoundSet BoundSet) Bool)
(declare-fun IsJumpingFrom (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (IsJumpedFrom a b))) (and (forall ((e BoundSet)) (forall ((h BoundSet)) (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsJumpedFrom e f) (IsJumpingFrom g h)))))) (forall ((k BoundSet)) (forall ((j BoundSet)) (forall ((i BoundSet)) (forall ((l BoundSet)) (=> (IsJumpingFrom i j) (IsJumpedFrom k l)))))))) (exists ((c BoundSet)) (exists ((d BoundSet)) (IsJumpingFrom c d))))))
(check-sat)
(get-model)