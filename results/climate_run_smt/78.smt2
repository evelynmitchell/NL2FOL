(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSubsequent (BoundSet) Bool)
(declare-fun IsWarming (BoundSet) Bool)
(declare-fun IsFollowing (BoundSet) Bool)
(declare-fun IsRising (BoundSet) Bool)
(declare-fun IsAppeared (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((b BoundSet)) (and (IsSubsequent b) (and (IsWarming b) (IsFollowing c))))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsSubsequent g) (IsRising h)))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (=> (IsRising i) (IsSubsequent j)))) (and (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (IsWarming k) (IsRising l)))) (forall ((n BoundSet)) (forall ((m BoundSet)) (=> (IsRising m) (IsWarming n)))))))) (exists ((e BoundSet)) (exists ((f BoundSet)) (and (IsAppeared e) (IsRising f)))))))
(check-sat)
(get-model)