(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsOutdoors (BoundSet) Bool)
(declare-fun IsOnStoneBench (BoundSet BoundSet) Bool)
(declare-fun IsOnDustyTrail (BoundSet BoundSet) Bool)
(declare-fun IsSitOn (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsOutdoors a) (IsOutdoors b)))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (IsOnStoneBench e f) (IsOutdoors e)))) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsOnDustyTrail g h) (IsOutdoors g)))))) (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (and (IsSitOn a b) (and (IsOnStoneBench a c) (IsOnDustyTrail a d))))))))))
(check-sat)
(get-model)