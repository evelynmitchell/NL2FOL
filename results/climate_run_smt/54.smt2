(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Is80 (BoundSet) Bool)
(declare-fun IsGlobalWarming (BoundSet) Bool)
(declare-fun IsScare (BoundSet) Bool)
(declare-fun IsOverdone (BoundSet) Bool)
(declare-fun IsInGlobalWarming (BoundSet) Bool)
(declare-fun IsProblem (BoundSet) Bool)
(declare-fun IsUnusual (BoundSet) Bool)
(assert (not (=> (and (exists ((e BoundSet)) (exists ((c BoundSet)) (exists ((d BoundSet)) (exists ((a BoundSet)) (and (Is80 c) (and (and (IsGlobalWarming a) (IsScare d)) (IsOverdone e))))))) (and (forall ((i BoundSet)) (=> (IsGlobalWarming i) (IsInGlobalWarming i))) (and (forall ((j BoundSet)) (=> (IsInGlobalWarming j) (IsGlobalWarming j))) (forall ((k BoundSet)) (=> (IsGlobalWarming k) (IsProblem k)))))) (exists ((a BoundSet)) (exists ((g BoundSet)) (and (IsInGlobalWarming a) (and (not (IsUnusual g)) (not (IsProblem a)))))))))
(check-sat)
(get-model)