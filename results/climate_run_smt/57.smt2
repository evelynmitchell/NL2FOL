(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInPineIslandBay (BoundSet) Bool)
(declare-fun AreFastestMelting (BoundSet) Bool)
(declare-fun IsInAntarctica (BoundSet) Bool)
(declare-fun IsMelt (BoundSet) Bool)
(declare-fun AreSubmerged (BoundSet) Bool)
(declare-fun IsOnPlanet (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsInPineIslandBay a) (and (AreFastestMelting b) (IsInAntarctica c)))))) (forall ((f BoundSet)) (=> (AreFastestMelting f) (IsMelt f)))) (exists ((e BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (IsMelt b) (and (AreSubmerged d) (IsOnPlanet e)))))))))
(check-sat)
(get-model)