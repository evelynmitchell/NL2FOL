(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInFrontOf (BoundSet BoundSet) Bool)
(declare-fun IsMan (BoundSet) Bool)
(declare-fun IsWoman (BoundSet) Bool)
(declare-fun IsPreparing (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsInFrontOf a b) (IsMan c))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsInFrontOf f g) (IsWoman f)))) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsPreparing h i) (IsWoman h)))))) (exists ((e BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (and (IsPreparing a e) (and (IsInFrontOf b e) (and (IsMan d) (IsWoman a)))))))))))
(check-sat)
(get-model)