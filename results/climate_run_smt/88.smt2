(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsInTheSea (BoundSet) Bool)
(declare-fun IsAHighTide (BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(declare-fun IsABriskWind (BoundSet) Bool)
(declare-fun IsPouringWater (BoundSet) Bool)
(declare-fun IsFlooded (BoundSet) Bool)
(declare-fun IsInStreets (BoundSet) Bool)
(assert (not (=> (and (exists ((e BoundSet)) (exists ((c BoundSet)) (exists ((b BoundSet)) (and (exists ((d BoundSet)) (( (and (IsInTheSea b) (IsAHighTide c)))) (and (IsABriskWind d) (IsPouringWater e)))))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (=> (IsFlooded i) (IsPouringWater j)))) (and (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (IsFlooded k) (IsPouringWater l)))) (forall ((m BoundSet)) (=> (IsFlooded m) (IsInStreets m)))))) (exists ((a BoundSet)) (exists ((g BoundSet)) (or (IsFlooded a) (IsFlooded g)))))))
(check-sat)
(get-model)