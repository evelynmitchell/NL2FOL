(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInCarbonDioxide (BoundSet) Bool)
(declare-fun HasComplexLife (BoundSet) Bool)
(declare-fun IsOnEarth (BoundSet) Bool)
(declare-fun DependsOn (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsInCarbonDioxide a) (and (HasComplexLife c) (IsOnEarth b)))))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (IsInCarbonDioxide e) (DependsOn e f)))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (DependsOn g h) (IsInCarbonDioxide g)))) (forall ((j BoundSet)) (forall ((i BoundSet)) (=> (DependsOn i j) (IsOnEarth j))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (DependsOn a b))))))
(check-sat)
(get-model)