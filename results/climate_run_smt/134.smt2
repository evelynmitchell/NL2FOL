(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsWalkingOn (BoundSet BoundSet) Bool)
(declare-fun IsInFrontOf (BoundSet BoundSet) Bool)
(declare-fun IsWalkingInFrontOf (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsWalkingOn a b) (IsInFrontOf a c))))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsInFrontOf e f) (IsWalkingInFrontOf e g))))) (forall ((j BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsWalkingInFrontOf h i) (IsInFrontOf h j))))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (IsWalkingInFrontOf a d))))))
(check-sat)
(get-model)