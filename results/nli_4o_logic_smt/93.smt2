(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun SkippedClassOneDay (BoundSet BoundSet) Bool)
(declare-fun WillBeUnemployed (BoundSet) Bool)
(declare-fun WillLiveAtHome (BoundSet BoundSet) Bool)
(declare-fun WillBeForRestOfLife (BoundSet BoundSet) Bool)
(assert (not (=> (exists ((a BoundSet)) (exists ((c BoundSet)) (SkippedClassOneDay a c))) (exists ((a BoundSet)) (exists ((e BoundSet)) (exists ((d BoundSet)) (and (WillBeUnemployed a) (and (WillLiveAtHome a d) (WillBeForRestOfLife a e)))))))))
(check-sat)
(get-model)