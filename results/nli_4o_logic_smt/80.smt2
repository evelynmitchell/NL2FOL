(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsMemberOf (BoundSet BoundSet) Bool)
(declare-fun IsInJail (BoundSet) Bool)
(declare-fun IsTrueMember (BoundSet) Bool)
(declare-fun IsUpstandingCitizen (BoundSet) Bool)
(declare-fun IsInCommunity (BoundSet BoundSet) Bool)
(declare-fun DoesNotGoToJail (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((c BoundSet)) (and (IsMemberOf b c) (IsInJail b)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (forall ((f BoundSet)) (=> (IsTrueMember f) (IsMemberOf g h))))) (forall ((k BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsUpstandingCitizen i) (IsMemberOf j k))))))) (exists ((e BoundSet)) (exists ((d BoundSet)) (and (IsTrueMember d) (and (IsUpstandingCitizen d) (and (IsInCommunity d e) (DoesNotGoToJail d)))))))))
(check-sat)
(get-model)