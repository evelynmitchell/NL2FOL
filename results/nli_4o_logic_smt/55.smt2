(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun WasBurglarized (BoundSet) Bool)
(declare-fun IsNextDoor (BoundSet BoundSet) Bool)
(declare-fun MovedIn (BoundSet BoundSet) Bool)
(declare-fun InvolvedIn (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (WasBurglarized b) (and (IsNextDoor b c) (MovedIn a c)))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (forall ((f BoundSet)) (=> (MovedIn f g) (InvolvedIn f h))))) (forall ((k BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (InvolvedIn i j) (MovedIn i k))))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (InvolvedIn a d))))))
(check-sat)
(get-model)