(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsMale (BoundSet) Bool)
(declare-fun IsGuitarPlayer (BoundSet) Bool)
(declare-fun IsSinging (BoundSet) Bool)
(declare-fun IsNoteOfSong (BoundSet BoundSet) Bool)
(declare-fun IsInRoom (BoundSet BoundSet) Bool)
(declare-fun IsPoorlyLit (BoundSet) Bool)
(declare-fun IsIndoors (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (IsMale a) (and (IsGuitarPlayer a) (and (IsSinging a) (and (IsNoteOfSong b c) (and (IsInRoom a d) (IsPoorlyLit d)))))))))) (forall ((i BoundSet)) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsIndoors g h) (IsPoorlyLit i)))))) (exists ((e BoundSet)) (exists ((f BoundSet)) (and (IsSinging e) (IsIndoors e f)))))))
(check-sat)
(get-model)