(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun BuysStocks (BoundSet BoundSet) Bool)
(declare-fun RisksMoney (BoundSet BoundSet) Bool)
(declare-fun HasLittleChance (BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(declare-fun MakesBigProfit (BoundSet) Bool)
(declare-fun BetsOnHorseRacing (BoundSet BoundSet) Bool)
(declare-fun AreSimilar (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((e BoundSet)) (exists ((d BoundSet)) (exists ((g BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((f BoundSet)) (and (exists ((c BoundSet)) (( (and (BuysStocks a b) (and (RisksMoney a e) (HasLittleChance f))))) (and (not (MakesBigProfit g)) (and (and (BetsOnHorseRacing c d) (and (RisksMoney c e) (HasLittleChance f))) (not (MakesBigProfit g))))))))))) (forall ((k BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (BuysStocks i j) (AreSimilar i k)))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (BuysStocks a b) (and (BetsOnHorseRacing c d) (AreSimilar a c))))))))))
(check-sat)
(get-model)