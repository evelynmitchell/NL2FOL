(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun HasSignificantlyLessFatThan (BoundSet BoundSet) Bool)
(declare-fun IsHealthierChoiceThan (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (HasSignificantlyLessFatThan a c))) (forall ((g BoundSet)) (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (HasSignificantlyLessFatThan e f) (IsHealthierChoiceThan e g)))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (IsHealthierChoiceThan a d))))))
(check-sat)
(get-model)