(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsFlooded (BoundSet) Bool)
(declare-fun HasCarsInWater (BoundSet) Bool)
(declare-fun AreFlooded (BoundSet) Bool)
(declare-fun IsOutside (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsFlooded a) (HasCarsInWater a))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsFlooded f) (AreFlooded g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (AreFlooded h) (IsFlooded i)))) (and (forall ((k BoundSet)) (forall ((j BoundSet)) (=> (HasCarsInWater j) (AreFlooded k)))) (forall ((l BoundSet)) (forall ((m BoundSet)) (=> (AreFlooded l) (HasCarsInWater m)))))))) (exists ((e BoundSet)) (exists ((d BoundSet)) (and (AreFlooded e) (IsOutside d)))))))
(check-sat)
(get-model)