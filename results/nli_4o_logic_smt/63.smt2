(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun Failed (BoundSet BoundSet) Bool)
(declare-fun CannotGetJob (BoundSet) Bool)
(declare-fun IsSociety'sFault (BoundSet) Bool)
(declare-fun HasToStealToSurvive (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (Failed a b))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (CannotGetJob f) (Failed f g)))) (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((j BoundSet)) (=> (IsSociety'sFault h) (Failed i j))))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (and (CannotGetJob a) (and (HasToStealToSurvive a) (IsSociety'sFault d))))))))
(check-sat)
(get-model)