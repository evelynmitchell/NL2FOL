(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun IsInBlueTShirt (BoundSet) Bool)
(declare-fun IsInSweatpants (BoundSet) Bool)
(declare-fun StandsOverStove (BoundSet) Bool)
(declare-fun LooksAtCamera (BoundSet) Bool)
(declare-fun IsInFrontOfCamera (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (and (IsYoung b) (and (IsInBlueTShirt b) (and (IsInSweatpants b) (and (StandsOverStove b) (LooksAtCamera b)))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsInFrontOfCamera g) (IsYoung h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (LooksAtCamera i) (IsInFrontOfCamera j)))) (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (IsInFrontOfCamera k) (LooksAtCamera l))))))) (exists ((f BoundSet)) (IsInFrontOfCamera f)))))
(check-sat)
(get-model)