(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSnowboarding (BoundSet) Bool)
(declare-fun IsOnSmallPileOfSnow (BoundSet BoundSet) Bool)
(declare-fun IsSunnyColdDay (BoundSet) Bool)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun IsSizingUpNextJump (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (IsSnowboarding a) (and (IsOnSmallPileOfSnow a b) (IsSunnyColdDay c)))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsSnowboarding f) (IsYoung g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsYoung h) (IsSnowboarding i)))) (forall ((k BoundSet)) (forall ((l BoundSet)) (forall ((j BoundSet)) (=> (IsSizingUpNextJump j k) (IsSnowboarding l)))))))) (exists ((e BoundSet)) (exists ((d BoundSet)) (and (IsYoung d) (IsSizingUpNextJump d e)))))))
(check-sat)
(get-model)