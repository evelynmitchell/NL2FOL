(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Visits (BoundSet BoundSet) Bool)
(declare-fun IsInTheHospital (BoundSet) Bool)
(declare-fun ReceivesVisitingFriend (BoundSet) Bool)
(declare-fun IsInHospital (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (and (Visits a c) (IsInTheHospital c)))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (Visits f g) (ReceivesVisitingFriend f)))) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (ReceivesVisitingFriend h) (Visits h i)))))) (exists ((a BoundSet)) (and (IsInHospital a) (ReceivesVisitingFriend a))))))
(check-sat)
(get-model)