(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Smokes (BoundSet) Bool)
(declare-fun LeansAgainst (BoundSet BoundSet) Bool)
(declare-fun HasMissingPersonFlierPosted (BoundSet BoundSet) Bool)
(declare-fun IndifferentToMissingPersonFlyers (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (exists ((b BoundSet)) (and (Smokes a) (and (LeansAgainst a c) (HasMissingPersonFlierPosted b c)))))) (forall ((g BoundSet)) (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (IndifferentToMissingPersonFlyers e) (HasMissingPersonFlierPosted f g)))))) (exists ((a BoundSet)) (IndifferentToMissingPersonFlyers a)))))
(check-sat)
(get-model)