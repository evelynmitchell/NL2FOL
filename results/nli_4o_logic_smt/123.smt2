(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsAsian (BoundSet) Bool)
(declare-fun IsTeenager (BoundSet) Bool)
(declare-fun IsWearing (BoundSet BoundSet) Bool)
(declare-fun HasWhite (BoundSet) Bool)
(declare-fun HasBlackStripes (BoundSet) Bool)
(declare-fun IsSeated (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsAsian a) (and (IsTeenager a) (and (IsWearing a b) (and (HasWhite b) (HasBlackStripes b))))))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (IsSeated e) (IsAsian f)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsSeated g) (IsTeenager h)))) (forall ((k BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsSeated i) (IsWearing j k)))))))) (exists ((d BoundSet)) (IsSeated d)))))
(check-sat)
(get-model)