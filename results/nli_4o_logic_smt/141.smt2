(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInBlackTrunks (BoundSet) Bool)
(declare-fun IsBouncingOnTrampoline (BoundSet) Bool)
(declare-fun IsWet (BoundSet) Bool)
(declare-fun IsOutdoors (BoundSet) Bool)
(declare-fun IsPlayingOnTrampolines (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (and (IsInBlackTrunks a) (and (IsBouncingOnTrampoline a) (IsWet c))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsInBlackTrunks f) (IsOutdoors g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsBouncingOnTrampoline h) (IsPlayingOnTrampolines i)))) (forall ((k BoundSet)) (forall ((j BoundSet)) (=> (IsWet j) (IsPlayingOnTrampolines k))))))) (exists ((d BoundSet)) (and (IsPlayingOnTrampolines d) (IsOutdoors d))))))
(check-sat)
(get-model)