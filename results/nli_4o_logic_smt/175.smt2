(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun HasComputers (BoundSet) Bool)
(declare-fun HasProjectorScreen (BoundSet) Bool)
(declare-fun InOffice (BoundSet) Bool)
(declare-fun InRoom (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (and (HasComputers c) (and (HasProjectorScreen c) (InOffice c)))) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (HasProjectorScreen g) (InRoom h))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (InRoom a) (InRoom b)))))))
(check-sat)
(get-model)