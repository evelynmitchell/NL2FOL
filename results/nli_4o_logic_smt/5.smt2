(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun SeesShoeSale (BoundSet) Bool)
(declare-fun CrossedRoad (BoundSet) Bool)
(declare-fun IsAttractedByShoeSales (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (SeesShoeSale b) (CrossedRoad a)))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (SeesShoeSale f) (IsAttractedByShoeSales g)))) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsAttractedByShoeSales h) (SeesShoeSale i)))))) (exists ((d BoundSet)) (IsAttractedByShoeSales d)))))
(check-sat)
(get-model)