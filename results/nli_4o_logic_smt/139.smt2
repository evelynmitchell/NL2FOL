(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsInBlueTshirt (BoundSet) Bool)
(declare-fun IsTakingPicture (BoundSet BoundSet) Bool)
(declare-fun IsWithUmbrella (BoundSet) Bool)
(declare-fun WalksBehind (BoundSet BoundSet) Bool)
(declare-fun IsOutdoors (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (IsInBlueTshirt a) (and (IsTakingPicture a b) (and (IsWithUmbrella c) (WalksBehind c a))))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsInBlueTshirt g) (IsOutdoors h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsOutdoors i) (IsInBlueTshirt j)))) (forall ((k BoundSet)) (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (IsTakingPicture k l) (IsOutdoors m)))))))) (exists ((e BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (and (IsTakingPicture d b) (and (IsOutdoors d) (WalksBehind e d)))))))))
(check-sat)
(get-model)