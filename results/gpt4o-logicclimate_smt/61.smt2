(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsMarineScientist (BoundSet) Bool)
(declare-fun HasPublished (BoundSet BoundSet) Bool)
(declare-fun IsOnOceanAcidification (BoundSet) Bool)
(declare-fun IsInICESJournal (BoundSet) Bool)
(declare-fun AreFlawed (BoundSet) Bool)
(declare-fun AreBiased (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (and (IsMarineScientist a) (and (HasPublished a c) (and (IsOnOceanAcidification c) (IsInICESJournal c)))))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsOnOceanAcidification g) (AreFlawed h)))) (forall ((j BoundSet)) (forall ((i BoundSet)) (=> (IsOnOceanAcidification i) (AreBiased j)))))) (exists ((f BoundSet)) (and (AreFlawed f) (AreBiased f))))))
(check-sat)
(get-model)