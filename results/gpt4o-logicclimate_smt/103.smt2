(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsWearingBlackTop (BoundSet) Bool)
(declare-fun IsWearingGlasses (BoundSet) Bool)
(declare-fun IsSpeakingInto (BoundSet BoundSet) Bool)
(declare-fun IsBeside (BoundSet BoundSet) Bool)
(declare-fun IsWriting (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (IsWearingBlackTop a) (and (IsWearingGlasses a) (and (IsSpeakingInto a b) (and (IsBeside c a) (IsWriting c)))))))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((k BoundSet)) (=> (IsSpeakingInto h i) (IsBeside j k)))))) (and (forall ((m BoundSet)) (forall ((l BoundSet)) (forall ((n BoundSet)) (=> (IsWriting l) (IsSpeakingInto m n))))) (forall ((o BoundSet)) (forall ((p BoundSet)) (forall ((q BoundSet)) (=> (IsSpeakingInto o p) (IsWriting q)))))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (exists ((f BoundSet)) (exists ((g BoundSet)) (and (IsSpeakingInto d e) (and (IsWriting f) (IsBeside f g))))))))))
(check-sat)
(get-model)