(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Causes (BoundSet BoundSet) Bool)
(declare-fun Beyond (BoundSet BoundSet) Bool)
(declare-fun Within (BoundSet BoundSet) Bool)
(declare-fun OfLifetime (BoundSet BoundSet) Bool)
(declare-fun IsTeenager (BoundSet) Bool)
(declare-fun IsToday (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (Causes a b) (Beyond c b))))) (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (Causes g h) (Beyond i h)))))) (exists ((f BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (exists ((e BoundSet)) (exists ((a BoundSet)) (and (Causes a b) (and (Within b d) (and (OfLifetime e d) (and (IsTeenager e) (IsToday f)))))))))))))
(check-sat)
(get-model)