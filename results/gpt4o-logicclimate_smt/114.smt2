(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsSmall (BoundSet) Bool)
(declare-fun IsInBlueSoccerUniforms (BoundSet) Bool)
(declare-fun UsesSetOfSteps (BoundSet BoundSet) Bool)
(declare-fun IsWooden (BoundSet) Bool)
(declare-fun WashesHands (BoundSet BoundSet) Bool)
(declare-fun IsInAdultSizedBathroom (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((e BoundSet)) (exists ((d BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsSmall b) (and (IsInBlueSoccerUniforms b) (and (UsesSetOfSteps b d) (and (IsWooden d) (and (WashesHands b a) (IsInAdultSizedBathroom b e)))))))))) (forall ((j BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (UsesSetOfSteps g h) (WashesHands i j))))))) (exists ((a BoundSet)) (exists ((f BoundSet)) (WashesHands f a))))))
(check-sat)
(get-model)