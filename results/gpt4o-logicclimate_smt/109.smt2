(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun WearsKilt (BoundSet) Bool)
(declare-fun HasThrown (BoundSet BoundSet) Bool)
(declare-fun WearKilts (BoundSet) Bool)
(declare-fun Watch (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (WearsKilt a) (HasThrown a b)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (WearsKilt f) (WearKilts g)))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((k BoundSet)) (=> (HasThrown h i) (Watch j k)))))) (forall ((m BoundSet)) (forall ((l BoundSet)) (forall ((n BoundSet)) (=> (HasThrown l m) (WearKilts n)))))))) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (Watch c d) (WearKilts d)))))))
(check-sat)
(get-model)