(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun TalksWith (BoundSet BoundSet) Bool)
(declare-fun InFrontOf (BoundSet BoundSet) Bool)
(declare-fun InteractsWith (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((d BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (TalksWith a c) (InFrontOf d b)))))) (and (forall ((h BoundSet)) (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (InteractsWith f g) (TalksWith f h))))) (forall ((j BoundSet)) (forall ((i BoundSet)) (forall ((k BoundSet)) (=> (InFrontOf i j) (InteractsWith k j))))))) (exists ((e BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (InteractsWith a e) (InteractsWith a b))))))))
(check-sat)
(get-model)