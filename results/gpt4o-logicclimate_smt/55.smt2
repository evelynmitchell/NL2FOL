(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Experienced (BoundSet BoundSet) Bool)
(declare-fun IsDuring (BoundSet BoundSet) Bool)
(declare-fun IsLow (BoundSet) Bool)
(declare-fun Affects (BoundSet BoundSet) Bool)
(declare-fun IsOn (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((d BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((e BoundSet)) (and (Experienced b c) (and (Experienced b d) (and (Experienced b e) (and (IsDuring d a) (and (IsDuring e a) (IsLow a))))))))))) (and (forall ((l BoundSet)) (forall ((j BoundSet)) (forall ((i BoundSet)) (forall ((k BoundSet)) (=> (Experienced i j) (Affects k l)))))) (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (IsLow m) (Affects m n)))))) (exists ((a BoundSet)) (exists ((f BoundSet)) (exists ((g BoundSet)) (and (Affects a f) (IsOn f g))))))))
(check-sat)
(get-model)