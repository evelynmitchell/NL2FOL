(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun EndorsedScenarioAnalysis (BoundSet BoundSet) Bool)
(declare-fun MightCollapse (BoundSet) Bool)
(declare-fun DueToClimateChange (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((d BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((e BoundSet)) (and (EndorsedScenarioAnalysis c e) (and (EndorsedScenarioAnalysis d e) (and (MightCollapse a) (DueToClimateChange a b))))))))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (DueToClimateChange h i) (MightCollapse h)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (DueToClimateChange j k) (MightCollapse j)))) (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (MightCollapse l) (DueToClimateChange l m))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (MightCollapse a) (DueToClimateChange a b)))))))
(check-sat)
(get-model)