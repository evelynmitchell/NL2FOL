(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun SawClimateChangeAsDistantProspect (BoundSet BoundSet BoundSet) Bool)
(declare-fun ForDecades (BoundSet BoundSet) Bool)
(declare-fun IsDistantProspect (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((d BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (SawClimateChangeAsDistantProspect c a b) (ForDecades b d)))))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (SawClimateChangeAsDistantProspect f g h) (IsDistantProspect i h)))))) (forall ((m BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (IsDistantProspect j k) (SawClimateChangeAsDistantProspect l m k)))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (IsDistantProspect a b))))))
(check-sat)
(get-model)