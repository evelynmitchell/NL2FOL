(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun IsWearing (BoundSet BoundSet) Bool)
(declare-fun Kicks (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (IsYoung a) (and (IsWearing a c) (Kicks a b)))))) (and (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (IsYoung d) (Kicks d e)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (Kicks f g) (IsYoung f)))) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsYoung h) (Kicks h i))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsYoung a) (Kicks a b)))))))
(check-sat)
(get-model)