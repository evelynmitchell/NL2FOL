(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun AreMovingFrom (BoundSet BoundSet) Bool)
(declare-fun AreMovingTo (BoundSet BoundSet) Bool)
(declare-fun AreOnLand (BoundSet) Bool)
(declare-fun ExtendsUnhealthily (BoundSet) Bool)
(declare-fun StudiedBy (BoundSet BoundSet) Bool)
(declare-fun ShowSigns (BoundSet BoundSet) Bool)
(declare-fun AtEndOf (BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(declare-fun IsInWorseShape (BoundSet) Bool)
(assert (not (=> (and (exists ((g BoundSet)) (exists ((f BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((e BoundSet)) (exists ((a BoundSet)) (( (and (AreMovingFrom a b) (and (AreMovingTo a c) (and (AreOnLand a) (and (ExtendsUnhealthily d) (and (StudiedBy a e) (and (ShowSigns a f) (AtEndOf g))))))))))))))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (forall ((k BoundSet)) (=> (AreMovingFrom i j) (IsInWorseShape k))))) (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (IsInWorseShape l) (ExtendsUnhealthily m)))))) (exists ((h BoundSet)) (IsInWorseShape h)))))
(check-sat)
(get-model)