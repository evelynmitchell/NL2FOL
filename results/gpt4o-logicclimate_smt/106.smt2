(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsRed (BoundSet) Bool)
(declare-fun Jumps (BoundSet) Bool)
(declare-fun CatchesInMouth (BoundSet BoundSet) Bool)
(declare-fun Catches (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsRed a) (and (Jumps a) (CatchesInMouth a b))))) (forall ((h BoundSet)) (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (CatchesInMouth f g) (Catches f h)))))) (exists ((d BoundSet)) (exists ((a BoundSet)) (Catches a d))))))
(check-sat)
(get-model)