(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsInWhiteShirt (BoundSet) Bool)
(declare-fun SpeaksIntoMicrophone (BoundSet) Bool)
(declare-fun IsAtPublicEvent (BoundSet) Bool)
(declare-fun IsInFrontOfCrowd (BoundSet) Bool)
(declare-fun IsMakingSpeech (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsInWhiteShirt a) (and (SpeaksIntoMicrophone a) (IsAtPublicEvent a)))) (and (forall ((f BoundSet)) (=> (IsInWhiteShirt f) (IsInFrontOfCrowd f))) (and (forall ((g BoundSet)) (=> (SpeaksIntoMicrophone g) (IsMakingSpeech g))) (and (forall ((h BoundSet)) (=> (SpeaksIntoMicrophone h) (IsInFrontOfCrowd h))) (and (forall ((i BoundSet)) (=> (IsAtPublicEvent i) (IsMakingSpeech i))) (and (forall ((j BoundSet)) (=> (IsMakingSpeech j) (IsAtPublicEvent j))) (forall ((k BoundSet)) (=> (IsAtPublicEvent k) (IsInFrontOfCrowd k))))))))) (exists ((a BoundSet)) (and (IsInWhiteShirt a) (and (IsMakingSpeech a) (IsInFrontOfCrowd a)))))))
(check-sat)
(get-model)