(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsInRedShirt (BoundSet) Bool)
(declare-fun IsBeingFilmed (BoundSet) Bool)
(declare-fun IsFilming (BoundSet) Bool)
(declare-fun IsOnSportsField (BoundSet) Bool)
(declare-fun IsWatching (BoundSet) Bool)
(declare-fun IsCheering (BoundSet) Bool)
(assert (not (=> (and (exists ((d BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsInRedShirt b) (and (IsBeingFilmed b) (and (IsFilming a) (and (IsOnSportsField b) (and (IsOnSportsField a) (and (IsWatching d) (IsCheering d)))))))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsBeingFilmed f) (IsFilming g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsFilming h) (IsBeingFilmed i)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsFilming j) (IsBeingFilmed k)))) (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (IsBeingFilmed l) (IsFilming m)))))))) (exists ((a BoundSet)) (exists ((e BoundSet)) (and (IsBeingFilmed e) (IsFilming a)))))))
(check-sat)
(get-model)