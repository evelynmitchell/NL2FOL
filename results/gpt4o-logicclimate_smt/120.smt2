(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun IsInBlueTShirt (BoundSet) Bool)
(declare-fun IsInSweatpants (BoundSet) Bool)
(declare-fun StandsInFrontOf (BoundSet BoundSet) Bool)
(declare-fun IsInFrontOf (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsYoung b) (and (IsInBlueTShirt b) (and (IsInSweatpants b) (StandsInFrontOf b a)))))) (forall ((j BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsInFrontOf g h) (StandsInFrontOf i j))))))) (exists ((a BoundSet)) (exists ((e BoundSet)) (IsInFrontOf e a))))))
(check-sat)
(get-model)