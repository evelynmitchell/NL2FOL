(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInBeigeBlazer (BoundSet) Bool)
(declare-fun DiscussesImportantTopic (BoundSet) Bool)
(declare-fun IsReachingForSomething (BoundSet) Bool)
(declare-fun Talks (BoundSet) Bool)
(declare-fun ReachesForSomething (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (and (IsInBeigeBlazer c) (and (DiscussesImportantTopic c) (IsReachingForSomething a))))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (DiscussesImportantTopic g) (Talks h)))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (=> (IsReachingForSomething i) (Talks j)))) (and (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (Talks k) (IsReachingForSomething l)))) (and (forall ((m BoundSet)) (=> (IsReachingForSomething m) (ReachesForSomething m))) (forall ((n BoundSet)) (=> (ReachesForSomething n) (IsReachingForSomething n)))))))) (exists ((a BoundSet)) (exists ((e BoundSet)) (and (Talks e) (ReachesForSomething a)))))))
(check-sat)
(get-model)