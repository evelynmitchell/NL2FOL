(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun IsInGym (BoundSet) Bool)
(declare-fun TakesTurnsScoring (BoundSet BoundSet) Bool)
(declare-fun IsIndoors (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (and (IsYoung a) (and (IsInGym a) (TakesTurnsScoring a c))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsYoung f) (IsIndoors g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsInGym h) (IsIndoors i)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsIndoors j) (IsInGym k)))) (forall ((m BoundSet)) (forall ((l BoundSet)) (forall ((n BoundSet)) (=> (TakesTurnsScoring l m) (IsIndoors n))))))))) (exists ((d BoundSet)) (IsIndoors d)))))
(check-sat)
(get-model)