(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsOnEarth (BoundSet) Bool)
(declare-fun RequiresCarbonDioxide (BoundSet) Bool)
(declare-fun IsEssentialFor (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsOnEarth a) (RequiresCarbonDioxide a))) (and (forall ((h BoundSet)) (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (RequiresCarbonDioxide f) (IsEssentialFor g h))))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (forall ((k BoundSet)) (=> (IsEssentialFor i j) (RequiresCarbonDioxide k))))) (forall ((l BoundSet)) (=> (IsOnEarth l) (RequiresCarbonDioxide l)))))) (exists ((a BoundSet)) (exists ((c BoundSet)) (and (IsEssentialFor c a) (IsOnEarth a)))))))
(check-sat)
(get-model)