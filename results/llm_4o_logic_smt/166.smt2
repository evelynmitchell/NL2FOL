(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsWearingBlackCap (BoundSet) Bool)
(declare-fun IsSuspendedInAir (BoundSet) Bool)
(declare-fun IsOnSwing (BoundSet) Bool)
(declare-fun IsSwinging (BoundSet) Bool)
(declare-fun IsOnSwingSet (BoundSet) Bool)
(declare-fun IsInBlackHat (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (and (IsWearingBlackCap b) (and (IsSuspendedInAir b) (and (IsOnSwing b) (and (IsSwinging a) (IsOnSwingSet a))))))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsOnSwing g) (IsSwinging h)))) (and (forall ((i BoundSet)) (=> (IsOnSwingSet i) (IsSwinging i))) (forall ((j BoundSet)) (=> (IsSwinging j) (IsOnSwingSet j)))))) (exists ((f BoundSet)) (exists ((a BoundSet)) (and (IsInBlackHat f) (and (IsSwinging f) (IsSwinging a))))))))
(check-sat)
(get-model)