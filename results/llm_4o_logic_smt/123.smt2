(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsAsian (BoundSet) Bool)
(declare-fun IsWearing (BoundSet BoundSet) Bool)
(declare-fun IsSittingOn (BoundSet BoundSet) Bool)
(declare-fun IsResting (BoundSet BoundSet) Bool)
(declare-fun IsSeated (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((e BoundSet)) (exists ((d BoundSet)) (and (IsAsian a) (and (IsWearing a b) (and (IsSittingOn a c) (IsResting d e))))))))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsWearing g h) (IsSeated g)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsSittingOn i j) (IsSeated i)))) (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (IsSeated k) (IsSittingOn k l))))))) (exists ((a BoundSet)) (IsSeated a)))))
(check-sat)
(get-model)