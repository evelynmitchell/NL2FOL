(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsMean (BoundSet) Bool)
(declare-fun IsTeacher (BoundSet) Bool)
(declare-fun IsPerson (BoundSet) Bool)
(declare-fun DidNotRaiseGrade (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsMean a) (and (IsTeacher a) (IsPerson a)))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsMean e) (DidNotRaiseGrade e f)))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (DidNotRaiseGrade g h) (IsMean g)))) (and (forall ((i BoundSet)) (=> (IsTeacher i) (IsMean i))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsPerson j) (DidNotRaiseGrade j k)))) (and (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (DidNotRaiseGrade l m) (IsPerson l)))) (forall ((n BoundSet)) (=> (IsMean n) (IsPerson n))))))))) (exists ((d BoundSet)) (exists ((a BoundSet)) (and (DidNotRaiseGrade a d) (IsMean a)))))))
(check-sat)
(get-model)