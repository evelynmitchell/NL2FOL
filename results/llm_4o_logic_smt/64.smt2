(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun AreFloodingIn (BoundSet) Bool)
(declare-fun AreConvictedOfCrimes (BoundSet) Bool)
(declare-fun AreStaying (BoundSet) Bool)
(declare-fun IsElected (BoundSet) Bool)
(declare-fun IsDark (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (and (AreFloodingIn a) (and (AreConvictedOfCrimes b) (AreStaying b))))) (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsElected f) (AreFloodingIn g))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (IsElected e) (IsDark d)))))))
(check-sat)
(get-model)