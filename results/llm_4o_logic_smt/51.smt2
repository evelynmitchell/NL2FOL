(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun WillRaise (BoundSet BoundSet) Bool)
(declare-fun IsAtLeast (BoundSet) Bool)
(declare-fun InFirstHundredDays (BoundSet BoundSet) Bool)
(declare-fun WillIncrease (BoundSet) Bool)
(declare-fun IsBy (BoundSet) Bool)
(declare-fun InKerryFirstHundredDays (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (WillRaise c a) (and (IsAtLeast b) (InFirstHundredDays c d))))))) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsAtLeast g) (WillIncrease h))))) (exists ((b BoundSet)) (exists ((e BoundSet)) (exists ((a BoundSet)) (and (WillIncrease a) (and (IsBy b) (InKerryFirstHundredDays a e)))))))))
(check-sat)
(get-model)