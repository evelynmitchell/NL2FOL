(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun IsInBlueTShirt (BoundSet) Bool)
(declare-fun IsInSweatpants (BoundSet) Bool)
(declare-fun StandsOver (BoundSet BoundSet) Bool)
(declare-fun LooksAt (BoundSet BoundSet) Bool)
(declare-fun StandsBehind (BoundSet BoundSet) Bool)
(declare-fun IsInFrontOf (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (and (IsYoung b) (and (IsInBlueTShirt b) (and (IsInSweatpants b) (and (StandsOver b e) (and (LooksAt b a) (and (IsYoung f) (StandsBehind f b))))))))))) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (LooksAt i j) (IsInFrontOf k j)))))) (exists ((g BoundSet)) (exists ((a BoundSet)) (IsInFrontOf g a))))))
(check-sat)
(get-model)