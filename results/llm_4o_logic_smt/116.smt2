(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsPlaying (BoundSet BoundSet) Bool)
(declare-fun AreTogether (BoundSet) Bool)
(declare-fun IsIndoors (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (and (IsPlaying a b) (AreTogether a)))) (and (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (IsPlaying d e) (IsIndoors d)))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsIndoors f) (IsPlaying f g)))) (and (forall ((h BoundSet)) (=> (IsIndoors h) (AreTogether h))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (AreTogether i) (IsPlaying i j)))) (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (IsPlaying k l) (AreTogether k))))))))) (exists ((b BoundSet)) (exists ((a BoundSet)) (and (IsIndoors a) (IsPlaying a b)))))))
(check-sat)
(get-model)