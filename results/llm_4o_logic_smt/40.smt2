(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun WalkedUnder (BoundSet) Bool)
(declare-fun HasOpenUmbrella (BoundSet) Bool)
(declare-fun SpilledSaltInFrontOf (BoundSet BoundSet) Bool)
(declare-fun ForgotToKnockOnWood (BoundSet) Bool)
(declare-fun HasLuckyDice (BoundSet) Bool)
(declare-fun HasBadDay (BoundSet BoundSet) Bool)
(declare-fun HasBadLuck (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((f BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((e BoundSet)) (exists ((d BoundSet)) (and (WalkedUnder a) (and (HasOpenUmbrella b) (and (SpilledSaltInFrontOf c d) (and (ForgotToKnockOnWood e) (HasLuckyDice f))))))))))) (forall ((m BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (SpilledSaltInFrontOf j k) (HasBadDay l m))))))) (exists ((i BoundSet)) (exists ((h BoundSet)) (exists ((g BoundSet)) (and (HasBadDay g h) (HasBadLuck g i))))))))
(check-sat)
(get-model)