(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsRidingDown (BoundSet BoundSet) Bool)
(declare-fun IsBetween (BoundSet BoundSet) Bool)
(declare-fun Exists (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((a BoundSet)) (and (IsRidingDown a c) (IsBetween a b))))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsRidingDown e f) (Exists e)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsRidingDown g h) (Exists i))))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (IsRidingDown j k) (Exists l))))) (and (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (IsBetween m n) (Exists m)))) (forall ((q BoundSet)) (forall ((o BoundSet)) (forall ((p BoundSet)) (=> (IsBetween o p) (Exists q)))))))))) (exists ((b BoundSet)) (exists ((d BoundSet)) (exists ((a BoundSet)) (and (Exists a) (and (Exists d) (Exists b)))))))))
(check-sat)
(get-model)