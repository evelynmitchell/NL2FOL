(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSmall (BoundSet) Bool)
(declare-fun IsInPinkDress (BoundSet) Bool)
(declare-fun IsPlayingDrumPads (BoundSet) Bool)
(declare-fun IsPlayedWith (BoundSet BoundSet) Bool)
(declare-fun IsPlayingElectronicDrums (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((d BoundSet)) (exists ((a BoundSet)) (and (IsSmall a) (and (IsInPinkDress a) (and (IsPlayingDrumPads a) (IsPlayedWith c d))))))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsPlayingDrumPads g) (IsPlayingElectronicDrums h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsPlayedWith i j) (IsPlayingElectronicDrums k))))) (forall ((m BoundSet)) (forall ((l BoundSet)) (forall ((n BoundSet)) (=> (IsPlayingElectronicDrums l) (IsPlayedWith m n)))))))) (exists ((e BoundSet)) (IsPlayingElectronicDrums e)))))
(check-sat)
(get-model)