(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInexpensive (BoundSet) Bool)
(declare-fun RequiresNoMaintenance (BoundSet) Bool)
(declare-fun IsPretty (BoundSet) Bool)
(declare-fun IsSoothingToWatch (BoundSet) Bool)
(declare-fun IsTheEasiestToKeep (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsInexpensive a) (and (RequiresNoMaintenance a) (and (IsPretty a) (IsSoothingToWatch a))))) (and (forall ((c BoundSet)) (=> (IsTheEasiestToKeep c) (IsInexpensive c))) (forall ((d BoundSet)) (=> (IsTheEasiestToKeep d) (RequiresNoMaintenance d))))) (exists ((a BoundSet)) (IsTheEasiestToKeep a)))))
(check-sat)
(get-model)