(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun BuysStocks (BoundSet) Bool)
(declare-fun RisksMoney (BoundSet BoundSet) Bool)
(declare-fun HasLittleChanceOfMakingBigProfit (BoundSet BoundSet) Bool)
(declare-fun Buys (BoundSet) Bool)
(declare-fun BetsOn (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((a BoundSet)) (and (BuysStocks a) (and (RisksMoney a b) (HasLittleChanceOfMakingBigProfit a c)))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (Buys f) (BuysStocks g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((j BoundSet)) (=> (Buys h) (RisksMoney i j))))) (forall ((m BoundSet)) (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (Buys k) (HasLittleChanceOfMakingBigProfit l m)))))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (Buys d) (BetsOn e)))))))
(check-sat)
(get-model)