(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Skipped (BoundSet BoundSet) Bool)
(declare-fun WillDropOut (BoundSet) Bool)
(declare-fun WillNeverGraduate (BoundSet) Bool)
(declare-fun WillNotGetInto (BoundSet BoundSet) Bool)
(declare-fun WillEndUpUnemployed (BoundSet) Bool)
(declare-fun WillLiveAt (BoundSet BoundSet) Bool)
(declare-fun WillLiveFor (BoundSet BoundSet) Bool)
(assert (not (=> (exists ((b BoundSet)) (exists ((a BoundSet)) (Skipped a b))) (exists ((e BoundSet)) (exists ((c BoundSet)) (exists ((d BoundSet)) (exists ((a BoundSet)) (and (WillDropOut a) (and (WillNeverGraduate a) (and (WillNotGetInto a c) (and (WillEndUpUnemployed a) (and (WillLiveAt a d) (WillLiveFor a e)))))))))))))
(check-sat)
(get-model)