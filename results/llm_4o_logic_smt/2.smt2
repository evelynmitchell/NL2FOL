(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun WorkedHardOn (BoundSet BoundSet) Bool)
(declare-fun IsWearing (BoundSet BoundSet) Bool)
(declare-fun IsInFamilyHolidayPhoto (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (WorkedHardOn b a))) (forall ((g BoundSet)) (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsWearing e f) (WorkedHardOn g f)))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (IsWearing c a) (IsInFamilyHolidayPhoto a d))))))))
(check-sat)
(get-model)