(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsUsedAmbiguously (BoundSet) Bool)
(declare-fun IsInArgument (BoundSet BoundSet) Bool)
(declare-fun IsOccurring (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (and (IsUsedAmbiguously a) (IsInArgument a b)))) (and (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (IsUsedAmbiguously d) (IsOccurring e)))) (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsOccurring f) (IsUsedAmbiguously g)))))) (exists ((c BoundSet)) (IsOccurring c)))))
(check-sat)
(get-model)