(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Ruined (BoundSet BoundSet) Bool)
(declare-fun Left (BoundSet BoundSet) Bool)
(declare-fun ShowedUp (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (Ruined a b))) (and (forall ((f BoundSet)) (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (Left d e) (Ruined f e))))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (Ruined g h) (ShowedUp g)))) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (ShowedUp i) (Ruined i j))))))) (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((a BoundSet)) (and (ShowedUp a) (Left c b))))))))
(check-sat)
(get-model)