(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsDressedInKilt (BoundSet) Bool)
(declare-fun HasThrownPole (BoundSet) Bool)
(declare-fun IsInKilts (BoundSet) Bool)
(declare-fun Watches (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsDressedInKilt a) (HasThrownPole a))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsDressedInKilt g) (IsInKilts h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (HasThrownPole i) (Watches j k))))) (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (HasThrownPole l) (IsInKilts m))))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (Watches d e) (IsInKilts e)))))))
(check-sat)
(get-model)