(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInBeigeBlazer (BoundSet) Bool)
(declare-fun DiscussesTopic (BoundSet BoundSet) Bool)
(declare-fun ReachesFor (BoundSet BoundSet) Bool)
(declare-fun IsTalking (BoundSet) Bool)
(declare-fun IsReachingFor (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (IsInBeigeBlazer c) (and (DiscussesTopic c d) (ReachesFor a b))))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsInBeigeBlazer f) (IsTalking g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((j BoundSet)) (=> (DiscussesTopic h i) (IsTalking j))))) (and (forall ((m BoundSet)) (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (IsTalking k) (DiscussesTopic l m))))) (and (forall ((o BoundSet)) (forall ((p BoundSet)) (forall ((n BoundSet)) (=> (ReachesFor n o) (IsTalking p))))) (and (forall ((q BoundSet)) (forall ((r BoundSet)) (forall ((s BoundSet)) (=> (IsTalking q) (ReachesFor r s))))) (and (forall ((u BoundSet)) (forall ((t BoundSet)) (=> (ReachesFor t u) (IsReachingFor t u)))) (forall ((v BoundSet)) (forall ((w BoundSet)) (=> (IsReachingFor v w) (ReachesFor v w))))))))))) (exists ((b BoundSet)) (exists ((a BoundSet)) (exists ((e BoundSet)) (and (IsTalking e) (IsReachingFor a b))))))))
(check-sat)
(get-model)