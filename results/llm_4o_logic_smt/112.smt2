(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun IsWearing (BoundSet BoundSet) Bool)
(declare-fun IsKicking (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((a BoundSet)) (and (IsYoung a) (and (IsWearing a c) (IsKicking a b)))))) (and (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (IsKicking d e) (IsYoung d)))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsWearing f g) (IsYoung f)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsKicking h i) (IsYoung h)))) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsYoung j) (IsKicking j k)))))))) (exists ((b BoundSet)) (exists ((a BoundSet)) (and (IsYoung a) (IsKicking a b)))))))
(check-sat)
(get-model)