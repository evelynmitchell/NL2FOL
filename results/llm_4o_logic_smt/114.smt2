(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSmall (BoundSet) Bool)
(declare-fun IsInBlueSoccerUniforms (BoundSet) Bool)
(declare-fun UsesWoodenSetOfSteps (BoundSet) Bool)
(declare-fun IsInAdultSizedBathroom (BoundSet) Bool)
(declare-fun IsTwo (BoundSet) Bool)
(declare-fun IsWashingHands (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((e BoundSet)) (and (IsSmall b) (and (IsInBlueSoccerUniforms b) (and (UsesWoodenSetOfSteps b) (IsInAdultSizedBathroom e)))))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsSmall g) (IsTwo h)))) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsSmall i) (IsWashingHands j)))))) (exists ((f BoundSet)) (and (IsTwo f) (IsWashingHands f))))))
(check-sat)
(get-model)