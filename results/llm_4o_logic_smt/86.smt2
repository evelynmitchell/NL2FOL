(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsProtected (BoundSet) Bool)
(declare-fun IsNotDestroyed (BoundSet) Bool)
(declare-fun IsSparedPain (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsProtected a) (IsNotDestroyed a))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsProtected e) (IsSparedPain f g))))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((j BoundSet)) (=> (IsSparedPain h i) (IsProtected j))))) (forall ((m BoundSet)) (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (IsNotDestroyed k) (IsSparedPain l m)))))))) (exists ((b BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (IsSparedPain b c) (IsSparedPain b d))))))))
(check-sat)
(get-model)