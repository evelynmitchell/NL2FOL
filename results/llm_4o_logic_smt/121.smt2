(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun Sings (BoundSet BoundSet) Bool)
(declare-fun FromBook (BoundSet BoundSet) Bool)
(declare-fun AtChurch (BoundSet BoundSet) Bool)
(declare-fun IsFilledWithSong (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((d BoundSet)) (exists ((a BoundSet)) (and (Sings a b) (and (FromBook b c) (AtChurch a d))))))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (forall ((j BoundSet)) (=> (Sings g h) (IsFilledWithSong i j)))))) (and (forall ((m BoundSet)) (forall ((k BoundSet)) (forall ((l BoundSet)) (forall ((n BoundSet)) (=> (IsFilledWithSong k l) (Sings m n)))))) (forall ((q BoundSet)) (forall ((o BoundSet)) (forall ((r BoundSet)) (forall ((p BoundSet)) (=> (AtChurch o p) (IsFilledWithSong q r))))))))) (exists ((f BoundSet)) (exists ((e BoundSet)) (IsFilledWithSong e f))))))
(check-sat)
(get-model)