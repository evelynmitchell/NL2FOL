(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInRedShirt (BoundSet) Bool)
(declare-fun IsBeingFilmed (BoundSet) Bool)
(declare-fun IsOnSportsField (BoundSet) Bool)
(declare-fun IsWatching (BoundSet) Bool)
(declare-fun IsCheering (BoundSet) Bool)
(declare-fun IsFilming (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (and (IsInRedShirt a) (and (IsBeingFilmed a) (and (IsOnSportsField a) (and (IsWatching c) (IsCheering c))))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsFilming f) (IsBeingFilmed g)))) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsFilming h) (IsWatching i)))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (IsBeingFilmed d) (IsFilming e)))))))
(check-sat)
(get-model)