(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun stone () UnboundSet)
(declare-fun IsTendingTo (BoundSet BoundSet) Bool)
(declare-fun Includes (BoundSet BoundSet) Bool)
(declare-fun IsNear (BoundSet BoundSet) Bool)
(declare-fun IsMadeOf (BoundSet UnboundSet) Bool)
(declare-fun IsTakingCareOf (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((e BoundSet)) (exists ((d BoundSet)) (and (IsTendingTo a b) (and (Includes b c) (and (Includes b d) (and (IsNear a e) (IsMadeOf e stone)))))))))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((j BoundSet)) (=> (IsTendingTo h i) (IsTakingCareOf h j))))) (forall ((m BoundSet)) (forall ((k BoundSet)) (forall ((l BoundSet)) (forall ((n BoundSet)) (=> (Includes k l) (IsTakingCareOf m n)))))))) (exists ((f BoundSet)) (exists ((a BoundSet)) (IsTakingCareOf a f))))))
(check-sat)
(get-model)