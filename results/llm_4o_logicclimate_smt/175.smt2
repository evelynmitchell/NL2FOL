(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInOffice (BoundSet BoundSet) Bool)
(declare-fun HasComputers (BoundSet) Bool)
(declare-fun HasProjectorScreen (BoundSet) Bool)
(declare-fun IsInRoom (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((d BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (IsInOffice c d) (and (HasComputers a) (HasProjectorScreen b))))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (HasComputers g) (IsInRoom g h)))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (=> (IsInRoom i j) (HasComputers i)))) (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (=> (IsInRoom k l) (HasProjectorScreen m)))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((e BoundSet)) (and (IsInRoom a e) (IsInRoom b e))))))))
(check-sat)
(get-model)