(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun DisputesConclusion (BoundSet BoundSet) Bool)
(declare-fun IsAboutStoppingGlobalWarming (BoundSet) Bool)
(declare-fun RequiresEndingCoalUse (BoundSet) Bool)
(declare-fun DoesNotRequireEnding (BoundSet) Bool)
(declare-fun IsStopped (BoundSet) Bool)
(assert (not (=> (and (exists ((d BoundSet)) (exists ((c BoundSet)) (and (DisputesConclusion c d) (and (IsAboutStoppingGlobalWarming d) (RequiresEndingCoalUse d))))) (forall ((g BoundSet)) (forall ((f BoundSet)) (forall ((h BoundSet)) (=> (DoesNotRequireEnding f) (DisputesConclusion g h)))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsStopped a) (DoesNotRequireEnding b)))))))
(check-sat)
(get-model)