(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun HasPollutionRelatedDiseases (BoundSet) Bool)
(declare-fun DiedPrematurely (BoundSet) Bool)
(declare-fun OccurredIn (BoundSet) Bool)
(declare-fun IsSignificantCauseOf (BoundSet BoundSet) Bool)
(declare-fun IsWorldwide (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (and (HasPollutionRelatedDiseases a) (and (DiedPrematurely a) (OccurredIn c))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (HasPollutionRelatedDiseases g) (IsSignificantCauseOf h i))))) (and (forall ((j BoundSet)) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (DiedPrematurely j) (IsSignificantCauseOf k l))))) (forall ((o BoundSet)) (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (IsSignificantCauseOf m n) (DiedPrematurely o)))))))) (exists ((d BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (and (IsSignificantCauseOf d e) (IsWorldwide f))))))))
(check-sat)
(get-model)