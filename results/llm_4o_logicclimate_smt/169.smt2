(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsLarge (BoundSet) Bool)
(declare-fun IsWalking (BoundSet) Bool)
(declare-fun IsInBusyCity (BoundSet) Bool)
(declare-fun IsInCity (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsLarge a) (and (IsWalking a) (IsInBusyCity a)))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsLarge e) (IsWalking f)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsLarge g) (IsInCity h)))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (=> (IsWalking i) (IsInCity j)))) (and (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (IsInCity k) (IsWalking l)))) (and (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (IsInBusyCity m) (IsWalking n)))) (forall ((o BoundSet)) (forall ((p BoundSet)) (=> (IsInBusyCity o) (IsInCity p)))))))))) (exists ((c BoundSet)) (and (IsWalking c) (IsInCity c))))))
(check-sat)
(get-model)