(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsInOvercoat (BoundSet) Bool)
(declare-fun IsPuttingOnGloves (BoundSet) Bool)
(declare-fun IsAtSubwayStation (BoundSet) Bool)
(declare-fun IsInSubwayStation (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (and (IsInOvercoat b) (and (IsPuttingOnGloves b) (IsAtSubwayStation b)))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsInOvercoat f) (IsInSubwayStation g)))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsPuttingOnGloves h) (IsInSubwayStation i)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsAtSubwayStation j) (IsInSubwayStation k)))) (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (IsInSubwayStation l) (IsAtSubwayStation m)))))))) (exists ((d BoundSet)) (IsInSubwayStation d)))))
(check-sat)
(get-model)