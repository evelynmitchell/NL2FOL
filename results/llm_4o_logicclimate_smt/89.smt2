(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsAtSurface (BoundSet BoundSet) Bool)
(declare-fun IsVentingInto (BoundSet BoundSet) Bool)
(declare-fun IsInAtmosphere (BoundSet) Bool)
(declare-fun IsIncreasing (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (IsAtSurface b c) (IsVentingInto b a))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsAtSurface e f) (IsInAtmosphere g))))) (and (forall ((j BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsAtSurface h i) (IsIncreasing j))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (=> (IsVentingInto k l) (IsInAtmosphere m))))) (and (forall ((o BoundSet)) (forall ((p BoundSet)) (forall ((n BoundSet)) (=> (IsInAtmosphere n) (IsVentingInto o p))))) (forall ((r BoundSet)) (forall ((q BoundSet)) (forall ((s BoundSet)) (=> (IsVentingInto q r) (IsIncreasing s)))))))))) (exists ((d BoundSet)) (and (IsInAtmosphere d) (IsIncreasing d))))))
(check-sat)
(get-model)