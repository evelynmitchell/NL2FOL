(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsUnusual (BoundSet) Bool)
(declare-fun CanBeMadeSensational (BoundSet) Bool)
(declare-fun Ignores (BoundSet BoundSet) Bool)
(declare-fun IsSensational (BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (IsUnusual a) (and (CanBeMadeSensational a) (and (Ignores a b) (Ignores a c))))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (Ignores f g) (CanBeMadeSensational f)))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (Ignores h i) (CanBeMadeSensational h)))) (and (forall ((j BoundSet)) (=> (IsSensational j) (CanBeMadeSensational j))) (and (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (Ignores k l) (IsSensational k)))) (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (Ignores m n) (IsSensational m))))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (exists ((c BoundSet)) (( (and (Ignores a b) (and (Ignores a c) (IsUnusual a))))) (IsSensational a)))))))
(check-sat)
(get-model)