(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSignificantPortion (BoundSet) Bool)
(declare-fun IsNitrogen (BoundSet) Bool)
(declare-fun IsInWestCoastForests (BoundSet) Bool)
(declare-fun IsTracedBackToSalmon (BoundSet) Bool)
(declare-fun IsCrucialToEcosystem (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((c BoundSet)) (and (IsSignificantPortion b) (and (IsNitrogen c) (and (IsInWestCoastForests c) (IsTracedBackToSalmon b)))))) (forall ((g BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsTracedBackToSalmon g) (IsCrucialToEcosystem h i)))))) (exists ((a BoundSet)) (exists ((e BoundSet)) (IsCrucialToEcosystem a e))))))
(check-sat)
(get-model)