(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun Cries (BoundSet) Bool)
(declare-fun ShowedMaps (BoundSet BoundSet) Bool)
(declare-fun IsOfDamage (BoundSet) Bool)
(declare-fun IsEmotionallyImpactful (BoundSet) Bool)
(assert (not (=> (and (exists ((d BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (Cries b) (and (Cries c) (and (ShowedMaps b c) (IsOfDamage d))))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (Cries f) (IsEmotionallyImpactful g)))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsEmotionallyImpactful h) (Cries i)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (Cries j) (IsEmotionallyImpactful k)))) (and (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (IsEmotionallyImpactful l) (Cries m)))) (forall ((o BoundSet)) (forall ((p BoundSet)) (forall ((n BoundSet)) (=> (ShowedMaps n o) (IsEmotionallyImpactful p)))))))))) (exists ((a BoundSet)) (IsEmotionallyImpactful a)))))
(check-sat)
(get-model)