(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsMovingFrom (BoundSet BoundSet) Bool)
(declare-fun IsMovingTo (BoundSet BoundSet) Bool)
(declare-fun StaysOnLandLonger (BoundSet) Bool)
(declare-fun ExtendsFastingSeason (BoundSet) Bool)
(declare-fun IsStarving (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (IsMovingFrom a b) (and (IsMovingTo a c) (and (StaysOnLandLonger a) (ExtendsFastingSeason d)))))))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsMovingFrom e f) (IsStarving e)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsMovingTo g h) (IsStarving g)))) (and (forall ((i BoundSet)) (=> (StaysOnLandLonger i) (IsStarving i))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (ExtendsFastingSeason j) (IsStarving k)))) (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (IsStarving l) (ExtendsFastingSeason m))))))))) (exists ((a BoundSet)) (IsStarving a)))))
(check-sat)
(get-model)