(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsDirty (BoundSet) Bool)
(declare-fun IsInsectBorne (BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(declare-fun IsGreaterProblem (BoundSet BoundSet BoundSet BoundSet) Bool)
(declare-fun IsNot (BoundSet BoundSet) Bool)
(declare-fun IsTopEnvironmentalThreat (BoundSet) Bool)
(assert (not (=> (and (exists ((d BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (exists ((c BoundSet)) (( (and (IsDirty b) (and (IsDirty c) (IsInsectBorne d))))) (IsGreaterProblem b c d a))))) (forall ((h BoundSet)) (forall ((i BoundSet)) (forall ((g BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsNot g h) (IsGreaterProblem i j k g)))))))) (exists ((a BoundSet)) (exists ((e BoundSet)) (and (IsNot a e) (not (IsTopEnvironmentalThreat e))))))))
(check-sat)
(get-model)