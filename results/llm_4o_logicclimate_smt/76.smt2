(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun HasExperienced (BoundSet BoundSet) Bool)
(declare-fun Lasted (BoundSet BoundSet) Bool)
(declare-fun ExperiencesCyclicalSwings (BoundSet) Bool)
(declare-fun OccursAround (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (HasExperienced a b) (Lasted c b))))) (forall ((g BoundSet)) (forall ((f BoundSet)) (forall ((h BoundSet)) (=> (Lasted f g) (ExperiencesCyclicalSwings h)))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (OccursAround d e) (ExperiencesCyclicalSwings d)))))))
(check-sat)
(get-model)