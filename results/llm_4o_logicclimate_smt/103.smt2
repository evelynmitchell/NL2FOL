(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsWearing (BoundSet BoundSet) Bool)
(declare-fun IsSpeakingInto (BoundSet BoundSet) Bool)
(declare-fun IsWriting (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((e BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (IsWearing a b) (and (IsWearing a c) (and (IsSpeakingInto a d) (IsWriting e))))))))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (forall ((k BoundSet)) (=> (IsSpeakingInto i j) (IsWriting k))))) (and (forall ((m BoundSet)) (forall ((n BoundSet)) (forall ((l BoundSet)) (=> (IsWriting l) (IsSpeakingInto m n))))) (forall ((o BoundSet)) (forall ((p BoundSet)) (forall ((q BoundSet)) (=> (IsSpeakingInto o p) (IsWriting q)))))))) (exists ((a BoundSet)) (exists ((g BoundSet)) (exists ((f BoundSet)) (and (IsSpeakingInto a f) (IsWriting g))))))))
(check-sat)
(get-model)