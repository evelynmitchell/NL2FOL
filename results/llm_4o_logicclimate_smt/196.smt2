(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInBeigeBlazer (BoundSet) Bool)
(declare-fun IsDiscussing (BoundSet BoundSet) Bool)
(declare-fun IsReaching (BoundSet) Bool)
(declare-fun IsTalking (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (IsInBeigeBlazer a) (and (IsDiscussing a b) (IsReaching c)))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsInBeigeBlazer f) (IsTalking g)))) (and (forall ((j BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsDiscussing h i) (IsTalking j))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (=> (IsTalking k) (IsDiscussing l m))))) (and (forall ((o BoundSet)) (forall ((n BoundSet)) (=> (IsReaching n) (IsTalking o)))) (forall ((p BoundSet)) (forall ((q BoundSet)) (=> (IsTalking p) (IsReaching q))))))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (IsTalking d) (IsReaching e)))))))
(check-sat)
(get-model)