(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun PlaysTogether (BoundSet BoundSet) Bool)
(declare-fun IsOnPileOfRocks (BoundSet) Bool)
(declare-fun IsInResidentialArea (BoundSet) Bool)
(declare-fun IsOutside (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (PlaysTogether a b) (and (IsOnPileOfRocks a) (and (IsInResidentialArea a) (and (IsOnPileOfRocks b) (IsInResidentialArea b))))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (PlaysTogether f g) (IsOutside f)))) (and (forall ((h BoundSet)) (=> (IsOnPileOfRocks h) (IsOutside h))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (=> (IsInResidentialArea i) (IsOutside j)))) (and (forall ((k BoundSet)) (=> (IsInResidentialArea k) (IsOutside k))) (and (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (IsOnPileOfRocks l) (IsOutside m)))) (forall ((o BoundSet)) (forall ((n BoundSet)) (=> (IsInResidentialArea n) (IsOutside o)))))))))) (exists ((a BoundSet)) (exists ((e BoundSet)) (and (IsOutside e) (IsOutside a)))))))
(check-sat)
(get-model)