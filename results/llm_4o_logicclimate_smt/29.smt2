(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun HaveNotMaterialized (BoundSet) Bool)
(declare-fun IsIn (BoundSet BoundSet) Bool)
(declare-fun IsSevere (BoundSet) Bool)
(declare-fun OccurredIn (BoundSet BoundSet) Bool)
(declare-fun IsFrequent (BoundSet) Bool)
(declare-fun IsFrequentIn (BoundSet BoundSet) Bool)
(declare-fun OccurEveryYear (BoundSet) Bool)
(declare-fun OccurIn (BoundSet BoundSet) Bool)
(declare-fun DoNotHit (BoundSet BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(declare-fun AreNotUnusuallySevere (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((f BoundSet)) (exists ((j BoundSet)) (exists ((e BoundSet)) (exists ((h BoundSet)) (exists ((i BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((g BoundSet)) (exists ((b BoundSet)) (exists ((k BoundSet)) (( (and (HaveNotMaterialized a) (and (HaveNotMaterialized b) (and (IsIn d c) (and (not (IsSevere c)) (and (IsSevere e) (and (OccurredIn f e) (and (not (IsFrequent g)) (and (IsFrequentIn h g) (and (OccurredIn f g) (and (OccurEveryYear i) (and (OccurIn j i) (DoNotHit i k)))))))))))))))))))))))) (forall ((o BoundSet)) (forall ((p BoundSet)) (forall ((n BoundSet)) (=> (OccurredIn n o) (AreNotUnusuallySevere p)))))) (exists ((l BoundSet)) (AreNotUnusuallySevere l)))))
(check-sat)
(get-model)