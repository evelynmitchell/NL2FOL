(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInRedShirt (BoundSet) Bool)
(declare-fun IsBeingFilmed (BoundSet) Bool)
(declare-fun IsOnSportsField (BoundSet) Bool)
(declare-fun HasHugeAudience (BoundSet) Bool)
(declare-fun IsWatching (BoundSet) Bool)
(declare-fun IsCheering (BoundSet) Bool)
(declare-fun IsNoteworthy (BoundSet) Bool)
(declare-fun IsDoingSomethingSignificant (BoundSet) Bool)
(assert (not (=> (exists ((a BoundSet)) (exists ((e BoundSet)) (exists ((c BoundSet)) (and (IsInRedShirt a) (and (IsBeingFilmed a) (and (IsOnSportsField a) (and (HasHugeAudience c) (and (IsWatching e) (IsCheering e))))))))) (exists ((f BoundSet)) (or (IsNoteworthy f) (IsDoingSomethingSignificant f))))))
(check-sat)
(get-model)