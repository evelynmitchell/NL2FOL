(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsModest (BoundSet) Bool)
(declare-fun IsRecent (BoundSet) Bool)
(declare-fun Produces (BoundSet BoundSet) Bool)
(declare-fun Creates (BoundSet BoundSet) Bool)
(declare-fun IsInEconomicAndHumanWelfare (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (and (IsModest a) (and (IsRecent a) (Produces a c))))) (and (forall ((g BoundSet)) (=> (IsModest g) (IsRecent g))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (Creates h i) (IsModest h)))) (and (forall ((j BoundSet)) (=> (IsModest j) (IsRecent j))) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (IsModest k) (Produces k l)))))))) (exists ((a BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (and (IsModest a) (and (IsRecent a) (and (Creates a e) (IsInEconomicAndHumanWelfare f))))))))))
(check-sat)
(get-model)