(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsDirty (BoundSet) Bool)
(declare-fun IsInsectBorne (BoundSet) Bool)
(declare-fun IsGreaterProblemTodayFor (BoundSet BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(declare-fun WontMakeIt (BoundSet BoundSet) Bool)
(declare-fun AreImmediateConcern (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (exists ((h BoundSet)) (exists ((i BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((g BoundSet)) (and (exists ((b BoundSet)) (( (and (IsDirty a) (and (IsDirty b) (and (IsInsectBorne c) (IsGreaterProblemTodayFor c d)))))) (and (and (IsGreaterProblemTodayFor e g) (IsGreaterProblemTodayFor f g)) (WontMakeIt h i))))))))))) (forall ((q BoundSet)) (forall ((o BoundSet)) (forall ((p BoundSet)) (forall ((n BoundSet)) (=> (AreImmediateConcern n o) (IsGreaterProblemTodayFor p q))))))) (exists ((j BoundSet)) (exists ((m BoundSet)) (exists ((l BoundSet)) (and (AreImmediateConcern j l) (AreImmediateConcern j m))))))))
(check-sat)
(get-model)