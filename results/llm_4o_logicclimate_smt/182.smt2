(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Smokes (BoundSet) Bool)
(declare-fun IsLeaningAgainst (BoundSet BoundSet) Bool)
(declare-fun IsPostedOn (BoundSet BoundSet) Bool)
(declare-fun IsSmoking (BoundSet) Bool)
(declare-fun IsAgainst (BoundSet BoundSet) Bool)
(declare-fun IsOn (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (Smokes a) (and (IsLeaningAgainst a b) (IsPostedOn c b)))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (Smokes g) (IsSmoking h)))) (forall ((j BoundSet)) (forall ((i BoundSet)) (=> (IsSmoking i) (Smokes j)))))) (exists ((d BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (and (IsSmoking d) (and (IsAgainst d e) (IsOn f e)))))))))
(check-sat)
(get-model)