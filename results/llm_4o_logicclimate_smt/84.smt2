(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsResponsibleFor (BoundSet BoundSet) Bool)
(declare-fun OccurredIn (BoundSet BoundSet) Bool)
(declare-fun IsExtremelyHarmfulTo (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (IsResponsibleFor a b) (and (OccurredIn b c) (OccurredIn b d))))))) (forall ((g BoundSet)) (forall ((f BoundSet)) (forall ((h BoundSet)) (=> (IsExtremelyHarmfulTo f g) (IsResponsibleFor f h)))))) (exists ((a BoundSet)) (exists ((e BoundSet)) (IsExtremelyHarmfulTo a e))))))
(check-sat)
(get-model)