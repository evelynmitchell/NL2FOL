(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsWalking (BoundSet) Bool)
(declare-fun IsDownHill (BoundSet BoundSet) Bool)
(declare-fun IsInSnow (BoundSet BoundSet) Bool)
(declare-fun IsOnKnees (BoundSet) Bool)
(declare-fun IsOutside (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (IsWalking a) (and (IsDownHill a b) (and (IsInSnow a c) (IsOnKnees d)))))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsOutside g h) (IsWalking i))))) (and (forall ((j BoundSet)) (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (=> (IsInSnow j k) (IsOutside l m)))))) (forall ((o BoundSet)) (forall ((p BoundSet)) (forall ((n BoundSet)) (=> (IsOnKnees n) (IsOutside o p)))))))) (exists ((f BoundSet)) (exists ((e BoundSet)) (IsOutside e f))))))
(check-sat)
(get-model)