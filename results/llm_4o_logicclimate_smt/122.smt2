(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsStandingAtSide (BoundSet BoundSet) Bool)
(declare-fun IsSideOf (BoundSet BoundSet) Bool)
(declare-fun IsStanding (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (IsStandingAtSide a c) (and (IsStandingAtSide b c) (IsSideOf c d))))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsStandingAtSide f g) (IsStanding f)))) (and (forall ((j BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsStandingAtSide h i) (IsStanding j))))) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (IsStandingAtSide k l) (IsStanding k))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsStanding a) (IsStanding b)))))))
(check-sat)
(get-model)