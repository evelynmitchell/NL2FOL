(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun TalksWith (BoundSet BoundSet) Bool)
(declare-fun InFrontOf (BoundSet BoundSet) Bool)
(declare-fun InPublic (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (TalksWith a b) (and (InFrontOf a c) (InFrontOf a d))))))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (TalksWith h i) (InPublic h)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (InFrontOf j k) (InPublic j)))) (and (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (InPublic l) (InFrontOf l m)))) (and (forall ((o BoundSet)) (forall ((p BoundSet)) (forall ((n BoundSet)) (=> (TalksWith n o) (InFrontOf n p))))) (forall ((r BoundSet)) (forall ((q BoundSet)) (=> (InFrontOf q r) (InPublic q))))))))) (exists ((a BoundSet)) (exists ((e BoundSet)) (and (TalksWith a e) (InPublic a)))))))
(check-sat)
(get-model)