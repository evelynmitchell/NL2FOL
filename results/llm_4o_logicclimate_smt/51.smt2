(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun HasOpportunity (BoundSet BoundSet) Bool)
(declare-fun IsLivingReef (BoundSet) Bool)
(declare-fun IsAlive (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (HasOpportunity a b) (IsLivingReef c))))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsLivingReef e) (IsAlive f)))) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsAlive g) (IsLivingReef h)))))) (exists ((d BoundSet)) (IsAlive d)))))
(check-sat)
(get-model)