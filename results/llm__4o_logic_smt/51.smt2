(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun WillRaiseTaxes (BoundSet) Bool)
(declare-fun IsAtLeast (BoundSet) Bool)
(declare-fun InFirstHundredDays (BoundSet) Bool)
(declare-fun WillIncreaseSignificantly (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((c BoundSet)) (and (WillRaiseTaxes a) (and (IsAtLeast c) (InFirstHundredDays d)))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (WillRaiseTaxes f) (WillIncreaseSignificantly g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (WillIncreaseSignificantly h) (WillRaiseTaxes i)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (WillIncreaseSignificantly j) (IsAtLeast k)))) (forall ((l BoundSet)) (forall ((m BoundSet)) (=> (WillIncreaseSignificantly l) (InFirstHundredDays m)))))))) (exists ((b BoundSet)) (WillIncreaseSignificantly b)))))
(check-sat)
(get-model)