(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Sneezed (BoundSet) Bool)
(declare-fun PowerWentOff (BoundSet) Bool)
(declare-fun CausedPowerOutage (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (Sneezed a) (PowerWentOff b)))) (and (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (Sneezed d) (CausedPowerOutage d e)))) (forall ((f BoundSet)) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (PowerWentOff f) (CausedPowerOutage g h))))))) (exists ((a BoundSet)) (exists ((c BoundSet)) (CausedPowerOutage a c))))))
(check-sat)
(get-model)