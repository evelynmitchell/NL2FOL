(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsGoingToHaveLunchWith (BoundSet BoundSet) Bool)
(declare-fun IsDitching (BoundSet BoundSet) Bool)
(declare-fun IsFor (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (IsGoingToHaveLunchWith a c))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsGoingToHaveLunchWith f g) (IsDitching f h))))) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsDitching i j) (IsGoingToHaveLunchWith i k))))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (IsDitching a d) (IsFor e))))))))
(check-sat)
(get-model)