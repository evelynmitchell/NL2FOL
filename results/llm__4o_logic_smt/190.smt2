(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsSpeaking (BoundSet) Bool)
(declare-fun AreListening (BoundSet) Bool)
(declare-fun IsGivenRespect (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsSpeaking a) (AreListening b)))) (and (forall ((c BoundSet)) (=> (IsSpeaking c) (IsGivenRespect c))) (and (forall ((d BoundSet)) (=> (IsGivenRespect d) (IsSpeaking d))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (AreListening e) (IsGivenRespect f)))) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsGivenRespect g) (AreListening h)))))))) (exists ((a BoundSet)) (IsGivenRespect a)))))
(check-sat)
(get-model)