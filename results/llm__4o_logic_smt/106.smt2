(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsRed (BoundSet) Bool)
(declare-fun Jumps (BoundSet) Bool)
(declare-fun Catches (BoundSet BoundSet) Bool)
(declare-fun IsInMouth (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (IsRed a) (and (Jumps a) (and (Catches a b) (IsInMouth b c))))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (Catches f g) (IsRed h))))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (Jumps i) (Catches j k))))) (and (forall ((n BoundSet)) (forall ((l BoundSet)) (forall ((m BoundSet)) (=> (Catches l m) (Jumps n))))) (and (forall ((q BoundSet)) (forall ((o BoundSet)) (forall ((r BoundSet)) (forall ((p BoundSet)) (=> (IsInMouth o p) (Catches q r)))))) (forall ((s BoundSet)) (forall ((u BoundSet)) (forall ((v BoundSet)) (forall ((t BoundSet)) (=> (Catches s t) (IsInMouth u v))))))))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (Catches d e))))))
(check-sat)
(get-model)