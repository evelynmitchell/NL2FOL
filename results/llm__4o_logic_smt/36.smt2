(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun GetsBetterThanAverageGasMileage (BoundSet) Bool)
(declare-fun IsReliableAccordingToConsumerReports (BoundSet BoundSet) Bool)
(declare-fun WantsToSell (BoundSet BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (and (GetsBetterThanAverageGasMileage a) (IsReliableAccordingToConsumerReports a c)))) (forall ((g BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((h BoundSet)) (=> (WantsToSell g h i) (GetsBetterThanAverageGasMileage j))))))) (exists ((f BoundSet)) (exists ((d BoundSet)) (exists ((e BoundSet)) (WantsToSell d e f)))))))
(check-sat)
(get-model)