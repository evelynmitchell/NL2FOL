(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsInBlack (BoundSet) Bool)
(declare-fun ReviewsMessage (BoundSet) Bool)
(declare-fun WalksToWork (BoundSet) Bool)
(declare-fun HasJob (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsInBlack a) (and (ReviewsMessage a) (WalksToWork a)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsInBlack f) (HasJob g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (HasJob h) (IsInBlack i)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsInBlack j) (ReviewsMessage k)))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (=> (HasJob l) (ReviewsMessage m)))) (and (forall ((n BoundSet)) (forall ((o BoundSet)) (=> (WalksToWork n) (IsInBlack o)))) (and (forall ((q BoundSet)) (forall ((p BoundSet)) (=> (WalksToWork p) (HasJob q)))) (forall ((s BoundSet)) (forall ((r BoundSet)) (=> (HasJob r) (WalksToWork s))))))))))) (exists ((d BoundSet)) (and (IsInBlack d) (HasJob d))))))
(check-sat)
(get-model)