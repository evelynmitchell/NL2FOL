(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsWearing (BoundSet BoundSet) Bool)
(declare-fun StandsOver (BoundSet BoundSet) Bool)
(declare-fun LooksAt (BoundSet BoundSet) Bool)
(declare-fun IsInFrontOf (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (IsWearing a b) (and (IsWearing a c) (and (StandsOver a d) (LooksAt a e))))))))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (forall ((h BoundSet)) (=> (IsWearing h i) (IsInFrontOf j k)))))) (and (forall ((n BoundSet)) (forall ((l BoundSet)) (forall ((o BoundSet)) (forall ((m BoundSet)) (=> (IsInFrontOf l m) (StandsOver n o)))))) (forall ((q BoundSet)) (forall ((s BoundSet)) (forall ((r BoundSet)) (forall ((p BoundSet)) (=> (IsInFrontOf p q) (LooksAt r s))))))))) (exists ((f BoundSet)) (exists ((g BoundSet)) (IsInFrontOf f g))))))
(check-sat)
(get-model)