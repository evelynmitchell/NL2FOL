(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsImpressedWith (BoundSet BoundSet) Bool)
(declare-fun IsImpressive (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (IsImpressedWith a b))) (and (forall ((f BoundSet)) (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (IsImpressedWith d e) (IsImpressive f))))) (forall ((g BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsImpressive g) (IsImpressedWith h i))))))) (exists ((c BoundSet)) (IsImpressive c)))))
(check-sat)
(get-model)