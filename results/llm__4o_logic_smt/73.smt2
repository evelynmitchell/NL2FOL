(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsUsedAmbiguously (BoundSet) Bool)
(declare-fun IsIn (BoundSet) Bool)
(declare-fun UsesEquivocation (BoundSet) Bool)
(declare-fun IsFlawed (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsUsedAmbiguously a) (IsIn b)))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsUsedAmbiguously e) (UsesEquivocation f)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (UsesEquivocation g) (IsUsedAmbiguously h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsUsedAmbiguously i) (IsFlawed j)))) (and (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (IsFlawed k) (IsUsedAmbiguously l)))) (forall ((n BoundSet)) (forall ((m BoundSet)) (=> (UsesEquivocation m) (IsIn n))))))))) (exists ((c BoundSet)) (and (UsesEquivocation c) (IsFlawed c))))))
(check-sat)
(get-model)