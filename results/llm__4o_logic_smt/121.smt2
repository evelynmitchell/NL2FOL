(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun SingsJoyousSongs (BoundSet) Bool)
(declare-fun AreFromBook (BoundSet) Bool)
(declare-fun AtChurch (BoundSet) Bool)
(declare-fun IsFilledWithSong (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (SingsJoyousSongs a) (and (AreFromBook b) (AtChurch a))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (SingsJoyousSongs g) (IsFilledWithSong h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsFilledWithSong i) (SingsJoyousSongs j)))) (and (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (IsFilledWithSong k) (AreFromBook l)))) (and (forall ((n BoundSet)) (forall ((m BoundSet)) (=> (AtChurch m) (IsFilledWithSong n)))) (forall ((o BoundSet)) (forall ((p BoundSet)) (=> (IsFilledWithSong o) (AtChurch p))))))))) (exists ((e BoundSet)) (IsFilledWithSong e)))))
(check-sat)
(get-model)