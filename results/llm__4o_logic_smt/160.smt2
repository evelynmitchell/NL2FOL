(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun WearingHoodedTops (BoundSet) Bool)
(declare-fun LaughingWithEachOther (BoundSet) Bool)
(declare-fun Laugh (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (WearingHoodedTops a) (LaughingWithEachOther a))) (and (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (Laugh d) (WearingHoodedTops e)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (LaughingWithEachOther f) (Laugh g)))) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (Laugh h) (LaughingWithEachOther i))))))) (exists ((c BoundSet)) (Laugh c)))))
(check-sat)
(get-model)