(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun LeadsToFloodingIn (BoundSet) Bool)
(declare-fun LeadsToStaying (BoundSet) Bool)
(declare-fun WillHaveDarkFuture (BoundSet) Bool)
(declare-fun IsElected (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((c BoundSet)) (and (LeadsToFloodingIn b) (LeadsToStaying c)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (WillHaveDarkFuture g) (LeadsToFloodingIn h)))) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (WillHaveDarkFuture i) (LeadsToStaying j)))))) (exists ((f BoundSet)) (exists ((d BoundSet)) (and (IsElected f) (WillHaveDarkFuture d)))))))
(check-sat)
(get-model)