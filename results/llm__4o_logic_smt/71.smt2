(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun HasDropped (BoundSet) Bool)
(declare-fun IsThisMorning (BoundSet) Bool)
(declare-fun HaveHeadache (BoundSet) Bool)
(declare-fun CausesHeadache (BoundSet BoundSet) Bool)
(declare-fun IsColdWeather (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (HasDropped b) (and (IsThisMorning a) (HaveHeadache c)))))) (and (forall ((g BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (HasDropped g) (CausesHeadache h i))))) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (HaveHeadache j) (IsColdWeather k)))))) (exists ((a BoundSet)) (exists ((e BoundSet)) (and (IsColdWeather a) (CausesHeadache a e)))))))
(check-sat)
(get-model)