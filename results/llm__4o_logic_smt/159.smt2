(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsBearded (BoundSet) Bool)
(declare-fun SitsNearVan (BoundSet) Bool)
(declare-fun SitsOutside (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsBearded a) (SitsNearVan a))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (SitsOutside e) (IsBearded f)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (SitsNearVan g) (IsBearded h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (SitsNearVan i) (SitsOutside j)))) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (SitsOutside k) (SitsNearVan l)))))))) (exists ((c BoundSet)) (and (SitsOutside c) (SitsNearVan c))))))
(check-sat)
(get-model)