(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsBald (BoundSet) Bool)
(declare-fun IsGettingOutOfCar (BoundSet) Bool)
(declare-fun IsSmall (BoundSet) Bool)
(declare-fun IsBlue (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsBald a) (and (IsGettingOutOfCar a) (and (IsSmall b) (IsBlue b)))))) (and (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (IsGettingOutOfCar d) (IsBald e)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsBald f) (IsGettingOutOfCar g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsBald h) (IsSmall i)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsBlue j) (IsBald k)))) (forall ((l BoundSet)) (forall ((m BoundSet)) (=> (IsBald l) (IsBlue m))))))))) (exists ((c BoundSet)) (IsBald c)))))
(check-sat)
(get-model)