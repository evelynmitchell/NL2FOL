(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsSaved (BoundSet) Bool)
(declare-fun IsUsedToBuy (BoundSet BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(declare-fun TakesUber (BoundSet) Bool)
(declare-fun IsNotSaved (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((d BoundSet)) (or (exists ((b BoundSet)) (( (and (IsSaved a) (IsUsedToBuy a b)))) (TakesUber d)))) (and (forall ((g BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsUsedToBuy g h) (TakesUber i))))) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsUsedToBuy j k) (IsNotSaved j k)))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (IsNotSaved a b) (TakesUber d))))))))
(check-sat)
(get-model)