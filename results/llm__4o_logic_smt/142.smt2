(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun HasBackpacks (BoundSet) Bool)
(declare-fun AreAtTable (BoundSet BoundSet) Bool)
(declare-fun IsWoman (BoundSet) Bool)
(declare-fun IsInBeigeBlazer (BoundSet) Bool)
(declare-fun IsSittingBehind (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (HasBackpacks b) (and (AreAtTable b a) (and (IsWoman d) (and (IsInBeigeBlazer d) (IsSittingBehind d a)))))))) (and (forall ((g BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (AreAtTable g h) (HasBackpacks i))))) (and (forall ((j BoundSet)) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (AreAtTable j k) (IsInBeigeBlazer l))))) (forall ((n BoundSet)) (forall ((o BoundSet)) (forall ((m BoundSet)) (=> (AreAtTable m n) (IsSittingBehind o n)))))))) (exists ((f BoundSet)) (exists ((a BoundSet)) (AreAtTable f a))))))
(check-sat)
(get-model)