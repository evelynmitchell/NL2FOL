(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Studies (BoundSet BoundSet) Bool)
(declare-fun IsRelatedTo (BoundSet BoundSet) Bool)
(declare-fun WorksOn (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (Studies a b) (IsRelatedTo b c))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (forall ((e BoundSet)) (=> (Studies e f) (WorksOn e g))))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((h BoundSet)) (=> (WorksOn h i) (Studies h j))))) (and (forall ((n BoundSet)) (forall ((l BoundSet)) (forall ((k BoundSet)) (forall ((m BoundSet)) (=> (IsRelatedTo k l) (WorksOn m n)))))) (forall ((q BoundSet)) (forall ((o BoundSet)) (forall ((r BoundSet)) (forall ((p BoundSet)) (=> (WorksOn o p) (IsRelatedTo q r)))))))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (WorksOn a d))))))
(check-sat)
(get-model)