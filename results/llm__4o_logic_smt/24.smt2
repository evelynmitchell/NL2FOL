(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Ruined (BoundSet BoundSet) Bool)
(declare-fun Left (BoundSet BoundSet) Bool)
(declare-fun Arrived (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (Ruined a b))) (and (forall ((f BoundSet)) (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (Ruined d e) (Left f e))))) (and (forall ((g BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (Left g h) (Ruined i h))))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (Ruined j k) (Arrived j)))) (forall ((l BoundSet)) (forall ((m BoundSet)) (=> (Arrived l) (Ruined l m)))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (Arrived a) (Left c b))))))))
(check-sat)
(get-model)