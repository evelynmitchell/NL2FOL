(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Broke (BoundSet BoundSet) Bool)
(declare-fun ReceivedF (BoundSet BoundSet) Bool)
(declare-fun Caused (BoundSet BoundSet) Bool)
(assert (not (=> (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (Broke a b) (ReceivedF a c))))) (exists ((f BoundSet)) (exists ((x BoundSet)) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (Broke x d) (and (Caused x e) (ReceivedF x f))))))))))
(check-sat)
(get-model)