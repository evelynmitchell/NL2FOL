(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun AreUsedForEducation (BoundSet BoundSet) Bool)
(declare-fun AreUsedToHire (BoundSet BoundSet) Bool)
(declare-fun AreUsedToBuild (BoundSet BoundSet) Bool)
(declare-fun AreForEducation (BoundSet BoundSet) Bool)
(assert (not (=> (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (and (AreUsedForEducation a b) (and (AreUsedToHire a c) (AreUsedToBuild a d))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (not (AreForEducation a b)))))))
(check-sat)
(get-model)