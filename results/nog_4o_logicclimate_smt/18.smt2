(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSnowboarding (BoundSet) Bool)
(declare-fun IsOn (BoundSet BoundSet) Bool)
(declare-fun IsVerySmall (BoundSet) Bool)
(declare-fun IsSunny (BoundSet) Bool)
(declare-fun IsCold (BoundSet) Bool)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun IsSizingUp (BoundSet BoundSet) Bool)
(declare-fun IsNextJump (BoundSet) Bool)
(assert (not (=> (exists ((a BoundSet)) (exists ((c BoundSet)) (exists ((b BoundSet)) (and (IsSnowboarding a) (and (IsOn a b) (and (IsVerySmall b) (and (IsSunny c) (IsCold c)))))))) (exists ((e BoundSet)) (exists ((d BoundSet)) (and (IsYoung d) (and (IsSizingUp d e) (IsNextJump e))))))))
(check-sat)
(get-model)