(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun WalkedUnder (BoundSet BoundSet) Bool)
(declare-fun HasOpenUmbrella (BoundSet) Bool)
(declare-fun IsIndoors (BoundSet) Bool)
(declare-fun SpilledSalt (BoundSet BoundSet) Bool)
(declare-fun InFrontOfBlackCat (BoundSet BoundSet) Bool)
(declare-fun ForgotToKnockOn (BoundSet) Bool)
(declare-fun HasLuckyDice (BoundSet) Bool)
(declare-fun Causes (BoundSet BoundSet) Bool)
(assert (not (=> (exists ((a BoundSet)) (exists ((f BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((h BoundSet)) (exists ((g BoundSet)) (exists ((e BoundSet)) (and (WalkedUnder a b) (and (HasOpenUmbrella c) (and (IsIndoors d) (and (SpilledSalt a e) (and (InFrontOfBlackCat e f) (and (ForgotToKnockOn g) (HasLuckyDice h))))))))))))))) (exists ((i BoundSet)) (exists ((j BoundSet)) (Causes i j))))))
(check-sat)
(get-model)