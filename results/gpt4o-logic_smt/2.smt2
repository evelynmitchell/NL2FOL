(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Knitted (BoundSet BoundSet) Bool)
(declare-fun For (BoundSet BoundSet) Bool)
(declare-fun Wear (BoundSet BoundSet) Bool)
(declare-fun In (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (Knitted c a) (For a b))))) (forall ((f BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (Knitted f g) (Wear h g)))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (Wear b a) (In a d))))))))
(check-sat)
(get-model)