(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInWhite (BoundSet) Bool)
(declare-fun Kicks (BoundSet BoundSet) Bool)
(declare-fun LungesTowards (BoundSet BoundSet) Bool)
(declare-fun IsInRed (BoundSet) Bool)
(declare-fun FollowsCloseBy (BoundSet) Bool)
(declare-fun IsSoccerPlayer (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((e BoundSet)) (and (IsInWhite a) (and (Kicks a b) (and (LungesTowards c d) (and (IsInRed e) (FollowsCloseBy e)))))))))) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsSoccerPlayer g) (IsInRed h))))) (exists ((f BoundSet)) (IsSoccerPlayer f)))))
(check-sat)
(get-model)