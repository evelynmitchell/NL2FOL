(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsAsian (BoundSet) Bool)
(declare-fun IsWearing (BoundSet BoundSet) Bool)
(declare-fun HasBlackStripes (BoundSet) Bool)
(declare-fun IsSittingOn (BoundSet BoundSet) Bool)
(declare-fun IsRestingOn (BoundSet BoundSet) Bool)
(declare-fun IsSeated (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((f BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (exists ((e BoundSet)) (and (IsAsian a) (and (IsWearing a b) (and (HasBlackStripes b) (and (IsSittingOn a d) (IsRestingOn e f)))))))))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsSittingOn h i) (IsSeated j))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (=> (IsSeated k) (IsSittingOn l m))))) (forall ((n BoundSet)) (forall ((o BoundSet)) (forall ((p BoundSet)) (=> (IsRestingOn n o) (IsSeated p)))))))) (exists ((g BoundSet)) (IsSeated g)))))
(check-sat)
(get-model)