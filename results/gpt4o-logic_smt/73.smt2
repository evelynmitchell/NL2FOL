(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsUsedAmbiguously (BoundSet) Bool)
(declare-fun IsInArgument (BoundSet BoundSet) Bool)
(declare-fun IsFlawed (BoundSet) Bool)
(declare-fun HasEquivocation (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsUsedAmbiguously b) (IsInArgument b a)))) (and (forall ((e BoundSet)) (forall ((d BoundSet)) (=> (IsUsedAmbiguously d) (IsFlawed e)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsUsedAmbiguously f) (HasEquivocation g)))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (HasEquivocation h) (IsUsedAmbiguously i)))) (and (forall ((l BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsInArgument j k) (IsFlawed l))))) (forall ((n BoundSet)) (forall ((o BoundSet)) (forall ((m BoundSet)) (=> (IsInArgument m n) (HasEquivocation o)))))))))) (exists ((a BoundSet)) (and (IsFlawed a) (HasEquivocation a))))))
(check-sat)
(get-model)