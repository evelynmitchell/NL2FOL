(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSmallChild (BoundSet) Bool)
(declare-fun IsInRedJacket (BoundSet) Bool)
(declare-fun IsSittingOnMansShoulders (BoundSet BoundSet) Bool)
(declare-fun IsHoldingMansHead (BoundSet BoundSet) Bool)
(declare-fun AreOnMansHead (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (IsSmallChild b) (and (IsInRedJacket b) (and (IsSittingOnMansShoulders b d) (IsHoldingMansHead b a))))))) (and (forall ((f BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsHoldingMansHead f g) (AreOnMansHead h g))))) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (AreOnMansHead i j) (IsHoldingMansHead k j))))))) (exists ((e BoundSet)) (exists ((a BoundSet)) (AreOnMansHead e a))))))
(check-sat)
(get-model)