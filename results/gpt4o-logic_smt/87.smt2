(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun HasSignificantlyLessFatThan (BoundSet BoundSet) Bool)
(declare-fun IsNowhereNearAsHotAs (BoundSet BoundSet) Bool)
(declare-fun IsHealthierChoiceThan (BoundSet BoundSet) Bool)
(assert (not (=> (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (HasSignificantlyLessFatThan a b) (IsNowhereNearAsHotAs a c))))) (exists ((c BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (IsHealthierChoiceThan b c) (IsHealthierChoiceThan b d))))))))
(check-sat)
(get-model)