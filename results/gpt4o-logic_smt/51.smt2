(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun RaiseTaxes (BoundSet BoundSet) Bool)
(declare-fun Amount (BoundSet) Bool)
(declare-fun InFirstHundredDays (BoundSet BoundSet) Bool)
(declare-fun WillIncreaseSignificantly (BoundSet) Bool)
(declare-fun WithKerrysPlan (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (RaiseTaxes a b) (and (Amount c) (InFirstHundredDays a d))))))) (forall ((f BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (RaiseTaxes f g) (WillIncreaseSignificantly h)))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (WithKerrysPlan b a) (WillIncreaseSignificantly b)))))))
(check-sat)
(get-model)