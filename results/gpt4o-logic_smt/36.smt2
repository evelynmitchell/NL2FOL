(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun GetsBetterGasMileage (BoundSet) Bool)
(declare-fun IsReliable (BoundSet) Bool)
(declare-fun AccordingToConsumerReports (BoundSet) Bool)
(declare-fun WantsToSell (BoundSet BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (GetsBetterGasMileage a) (and (IsReliable a) (AccordingToConsumerReports a)))) (forall ((h BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((g BoundSet)) (=> (GetsBetterGasMileage g) (WantsToSell h i j))))))) (exists ((f BoundSet)) (exists ((e BoundSet)) (exists ((d BoundSet)) (WantsToSell d f e)))))))
(check-sat)
(get-model)