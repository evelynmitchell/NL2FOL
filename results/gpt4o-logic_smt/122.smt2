(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsStandingAtSide (BoundSet BoundSet) Bool)
(declare-fun IsAtStructure (BoundSet BoundSet) Bool)
(declare-fun IsStanding (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (IsStandingAtSide a c) (and (IsStandingAtSide b c) (IsAtStructure c d))))))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsStandingAtSide e f) (IsStanding e)))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (forall ((g BoundSet)) (=> (IsStandingAtSide g h) (IsStanding i))))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsStandingAtSide j k) (IsStanding j)))) (forall ((n BoundSet)) (forall ((m BoundSet)) (forall ((l BoundSet)) (=> (IsAtStructure l m) (IsStanding n))))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsStanding a) (IsStanding b)))))))
(check-sat)
(get-model)