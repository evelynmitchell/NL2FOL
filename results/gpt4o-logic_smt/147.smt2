(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun IsAsian (BoundSet) Bool)
(declare-fun IsSittingOn (BoundSet BoundSet) Bool)
(declare-fun IsInRubble (BoundSet BoundSet) Bool)
(declare-fun IsOutside (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsYoung a) (and (IsAsian a) (and (IsSittingOn a c) (IsInRubble c b))))))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsYoung e) (IsInRubble e f)))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (IsSittingOn g h) (IsOutside g)))) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsSittingOn i j) (IsInRubble i k)))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsYoung a) (and (IsAsian a) (and (IsOutside a) (IsInRubble a b)))))))))
(check-sat)
(get-model)