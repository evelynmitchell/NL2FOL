(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsProtected (BoundSet) Bool)
(declare-fun IsSparedPain (BoundSet) Bool)
(declare-fun IsSparedCancer (BoundSet) Bool)
(declare-fun IsSparedOtherIllnesses (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (IsProtected a)) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsProtected f) (IsSparedPain g)))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsProtected h) (IsSparedCancer i)))) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsProtected j) (IsSparedOtherIllnesses k))))))) (exists ((b BoundSet)) (and (IsSparedPain b) (and (IsSparedCancer b) (IsSparedOtherIllnesses b)))))))
(check-sat)
(get-model)