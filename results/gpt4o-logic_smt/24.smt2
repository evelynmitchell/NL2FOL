(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun RuinedParty (BoundSet BoundSet) Bool)
(declare-fun CausesToLeave (BoundSet BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (RuinedParty a b))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (RuinedParty e f) (CausesToLeave e g h)))))) (forall ((l BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (CausesToLeave i j k) (RuinedParty i l)))))))) (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (CausesToLeave a c d)))))))
(check-sat)
(get-model)