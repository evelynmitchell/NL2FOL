(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun SittingOnBench (BoundSet) Bool)
(declare-fun InFrontOfBuildings (BoundSet BoundSet) Bool)
(declare-fun SeatedOnBench (BoundSet) Bool)
(declare-fun IsOutside (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (SittingOnBench a) (InFrontOfBuildings b c))))) (and (forall ((e BoundSet)) (=> (SittingOnBench e) (SeatedOnBench e))) (and (forall ((f BoundSet)) (=> (SeatedOnBench f) (SittingOnBench f))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (SittingOnBench g) (IsOutside h)))) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (InFrontOfBuildings i j) (IsOutside i)))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (SeatedOnBench a) (IsOutside b)))))))
(check-sat)
(get-model)