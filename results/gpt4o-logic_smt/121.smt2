(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun SingsJoyousSongs (BoundSet) Bool)
(declare-fun FromBook (BoundSet) Bool)
(declare-fun AtChurch (BoundSet) Bool)
(declare-fun IsFilledWithSong (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (SingsJoyousSongs a) (and (FromBook b) (AtChurch a))))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (SingsJoyousSongs g) (IsFilledWithSong h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (FromBook i) (IsFilledWithSong j)))) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (AtChurch k) (IsFilledWithSong l))))))) (exists ((e BoundSet)) (IsFilledWithSong e)))))
(check-sat)
(get-model)