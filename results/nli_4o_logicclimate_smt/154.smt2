(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun AreFloodedWithCars (BoundSet) Bool)
(declare-fun AreInTheWater (BoundSet) Bool)
(declare-fun AreFlooded (BoundSet) Bool)
(declare-fun IsOutside (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (AreFloodedWithCars a) (AreInTheWater b)))) (and (forall ((f BoundSet)) (=> (AreFloodedWithCars f) (AreFlooded f))) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (AreInTheWater g) (AreFlooded h)))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (and (AreFlooded a) (IsOutside d)))))))
(check-sat)
(get-model)