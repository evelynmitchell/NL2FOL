(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsBearded (BoundSet) Bool)
(declare-fun SitsNearVan (BoundSet) Bool)
(declare-fun SitsOutside (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsBearded a) (SitsNearVan a))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (IsBearded e) (SitsOutside f)))) (and (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (SitsOutside g) (IsBearded h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsBearded i) (SitsNearVan j)))) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (SitsNearVan k) (IsBearded l)))))))) (exists ((c BoundSet)) (and (SitsOutside c) (SitsNearVan c))))))
(check-sat)
(get-model)