(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsLargestExporterOfRedMeat (BoundSet) Bool)
(declare-fun HoldsCattle (BoundSet BoundSet) Bool)
(declare-fun IsFrom (BoundSet BoundSet) Bool)
(declare-fun SuspendedImportsOfBeef (BoundSet BoundSet) Bool)
(declare-fun IsIn (BoundSet BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(declare-fun HasAbscesses (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (and (IsLargestExporterOfRedMeat a) (HoldsCattle a c)))) (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((j BoundSet)) (=> (IsLargestExporterOfRedMeat h) (IsFrom i j)))))) (exists ((e BoundSet)) (exists ((f BoundSet)) (exists ((g BoundSet)) (exists ((a BoundSet)) (and (exists ((d BoundSet)) (( (and (SuspendedImportsOfBeef d e) (and (IsFrom e a) (IsIn g f))))) (HasAbscesses g)))))))))
(check-sat)
(get-model)