(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsEasternVendor (BoundSet) Bool)
(declare-fun SitsByHisStall (BoundSet BoundSet) Bool)
(declare-fun HasRoosterNearby (BoundSet) Bool)
(declare-fun IsRoosterNearVendor (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (exists ((b BoundSet)) (and (IsEasternVendor a) (and (SitsByHisStall a b) (HasRoosterNearby c)))))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsRoosterNearVendor f g) (SitsByHisStall h i)))))) (forall ((j BoundSet)) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (IsRoosterNearVendor j k) (HasRoosterNearby l))))))) (exists ((e BoundSet)) (exists ((d BoundSet)) (IsRoosterNearVendor d e))))))
(check-sat)
(get-model)