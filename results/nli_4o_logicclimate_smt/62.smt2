(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSevere (BoundSet) Bool)
(declare-fun ClaimedLives (BoundSet) Bool)
(declare-fun CauseHarm (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsSevere a) (ClaimedLives a))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (CauseHarm e f) (IsSevere g))))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((j BoundSet)) (=> (IsSevere h) (CauseHarm i j))))) (forall ((l BoundSet)) (forall ((k BoundSet)) (forall ((m BoundSet)) (=> (CauseHarm k l) (IsSevere m)))))))) (exists ((c BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (CauseHarm b c) (CauseHarm b d))))))))
(check-sat)
(get-model)