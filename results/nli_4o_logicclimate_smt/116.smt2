(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsPlaying (BoundSet BoundSet) Bool)
(declare-fun AreTogether (BoundSet) Bool)
(declare-fun IsIndoors (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsPlaying b a) (AreTogether b)))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (IsIndoors e) (AreTogether f)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (AreTogether g) (IsPlaying h i))))) (forall ((j BoundSet)) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (IsPlaying j k) (AreTogether l)))))))) (exists ((a BoundSet)) (exists ((c BoundSet)) (and (IsIndoors c) (IsPlaying c a)))))))
(check-sat)
(get-model)