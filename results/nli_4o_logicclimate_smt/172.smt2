(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsWhite (BoundSet) Bool)
(declare-fun IsGreyhound (BoundSet) Bool)
(declare-fun IsWearingMuzzle (BoundSet) Bool)
(declare-fun RunsAroundTrack (BoundSet) Bool)
(declare-fun IsRacing (BoundSet) Bool)
(declare-fun IsRacingWithOtherDogs (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsWhite a) (and (IsGreyhound a) (and (IsWearingMuzzle a) (RunsAroundTrack a))))) (and (forall ((f BoundSet)) (=> (IsRacing f) (IsWhite f))) (and (forall ((g BoundSet)) (=> (IsGreyhound g) (IsRacing g))) (and (forall ((h BoundSet)) (=> (IsRacing h) (IsGreyhound h))) (and (forall ((i BoundSet)) (=> (RunsAroundTrack i) (IsRacing i))) (and (forall ((j BoundSet)) (=> (IsRacing j) (RunsAroundTrack j))) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (IsRacingWithOtherDogs k l) (RunsAroundTrack k)))))))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (and (IsRacing a) (IsRacingWithOtherDogs a d)))))))
(check-sat)
(get-model)