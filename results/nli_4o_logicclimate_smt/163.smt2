(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsBrownAndWhite (BoundSet) Bool)
(declare-fun IsChainedUp (BoundSet) Bool)
(declare-fun IsNearRedChair (BoundSet) Bool)
(declare-fun IsChainedTo (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsBrownAndWhite a) (and (IsChainedUp a) (IsNearRedChair a)))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsChainedTo e f) (IsBrownAndWhite g))))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((j BoundSet)) (=> (IsChainedUp h) (IsChainedTo i j))))) (forall ((l BoundSet)) (forall ((k BoundSet)) (forall ((m BoundSet)) (=> (IsChainedTo k l) (IsChainedUp m)))))))) (exists ((c BoundSet)) (exists ((d BoundSet)) (IsChainedTo c d))))))
(check-sat)
(get-model)