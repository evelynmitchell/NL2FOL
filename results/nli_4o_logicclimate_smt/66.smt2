(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun { () BoundSet)
(declare-fun | () BoundSet)
(declare-fun } () BoundSet)
(declare-fun ArePredictions (BoundSet) Bool)
(declare-fun IsGoingToHappen (BoundSet) Bool)
(declare-fun IsReal (BoundSet) Bool)
(declare-fun AreFuturePredictions (BoundSet) Bool)
(declare-fun AreAccurate (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((c BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (ArePredictions a) (and (IsGoingToHappen b) (and (IsGoingToHappen c) (and (IsGoingToHappen d) (IsReal a))))))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (ArePredictions f) (AreFuturePredictions g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (AreFuturePredictions h) (ArePredictions i)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (ArePredictions j) (AreAccurate k)))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (=> (AreAccurate l) (ArePredictions m)))) (and (forall ((o BoundSet)) (forall ((n BoundSet)) (=> (IsGoingToHappen n) (AreFuturePredictions o)))) (and (forall ((p BoundSet)) (forall ((q BoundSet)) (=> (IsGoingToHappen p) (AreAccurate q)))) (and (forall ((r BoundSet)) (forall ((s BoundSet)) (=> (IsGoingToHappen r) (AreFuturePredictions s)))) (and (forall ((u BoundSet)) (forall ((t BoundSet)) (=> (IsGoingToHappen t) (AreAccurate u)))) (and (forall ((v BoundSet)) (forall ((w BoundSet)) (=> (IsGoingToHappen v) (AreFuturePredictions w)))) (and (forall ((x BoundSet)) (forall ((y BoundSet)) (=> (IsGoingToHappen x) (AreAccurate y)))) (and (forall ((z BoundSet)) (=> (IsReal z) (AreAccurate {))) (=> (AreAccurate |) (IsReal })))))))))))))) (exists ((e BoundSet)) (and (AreFuturePredictions e) (AreAccurate e))))))
(check-sat)
(get-model)