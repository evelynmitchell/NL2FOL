(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsDressedInKilt (BoundSet) Bool)
(declare-fun HasThrown (BoundSet BoundSet) Bool)
(declare-fun IsInKilts (BoundSet) Bool)
(declare-fun Watches (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsDressedInKilt a) (HasThrown a b)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsDressedInKilt f) (IsInKilts g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsInKilts h) (IsDressedInKilt i)))) (forall ((j BoundSet)) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (HasThrown j k) (IsInKilts l)))))))) (exists ((c BoundSet)) (exists ((d BoundSet)) (and (Watches c d) (IsInKilts d)))))))
(check-sat)
(get-model)