(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInBeigeBlazer (BoundSet) Bool)
(declare-fun DiscussesImportantTopic (BoundSet) Bool)
(declare-fun ReachesForSomething (BoundSet) Bool)
(declare-fun IsTalking (BoundSet) Bool)
(declare-fun ReachesFor (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsInBeigeBlazer b) (and (DiscussesImportantTopic b) (ReachesForSomething a))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (DiscussesImportantTopic f) (IsTalking g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsTalking h) (DiscussesImportantTopic i)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (ReachesForSomething j) (ReachesFor j k)))) (forall ((l BoundSet)) (forall ((m BoundSet)) (=> (ReachesFor l m) (ReachesForSomething l)))))))) (exists ((e BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (and (IsTalking d) (ReachesFor a e))))))))
(check-sat)
(get-model)