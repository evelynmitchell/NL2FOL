(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Smokes (BoundSet) Bool)
(declare-fun LeansAgainst (BoundSet BoundSet) Bool)
(declare-fun HasMissingPersonFlyer (BoundSet) Bool)
(declare-fun Against (BoundSet BoundSet) Bool)
(declare-fun HasFlyer (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (Smokes a) (and (LeansAgainst a b) (HasMissingPersonFlyer b))))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (forall ((g BoundSet)) (=> (Smokes g) (Against h i))))) (and (forall ((j BoundSet)) (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (Smokes j) (LeansAgainst k l))))) (forall ((p BoundSet)) (forall ((o BoundSet)) (forall ((n BoundSet)) (forall ((m BoundSet)) (=> (Against m n) (LeansAgainst o p))))))))) (exists ((e BoundSet)) (exists ((d BoundSet)) (and (Smokes d) (and (Against d e) (HasFlyer e))))))))
(check-sat)
(get-model)