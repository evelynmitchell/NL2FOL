(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun IsInBlueTShirt (BoundSet) Bool)
(declare-fun IsInSweatpants (BoundSet) Bool)
(declare-fun StandsOverStove (BoundSet) Bool)
(declare-fun LooksAtCamera (BoundSet) Bool)
(declare-fun IsInFrontOfCamera (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (and (IsYoung b) (and (IsInBlueTShirt b) (and (IsInSweatpants b) (and (StandsOverStove b) (LooksAtCamera b)))))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsInFrontOfCamera h) (IsYoung i)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (LooksAtCamera j) (IsInFrontOfCamera k)))) (forall ((l BoundSet)) (forall ((m BoundSet)) (=> (IsInFrontOfCamera l) (LooksAtCamera m))))))) (exists ((f BoundSet)) (IsInFrontOfCamera f)))))
(check-sat)
(get-model)