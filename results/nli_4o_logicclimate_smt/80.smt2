(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Cried (BoundSet) Bool)
(declare-fun IsStudentOf (BoundSet BoundSet) Bool)
(declare-fun ShowedMaps (BoundSet BoundSet BoundSet) Bool)
(declare-fun DepictDamage (BoundSet BoundSet) Bool)
(declare-fun CalculatedDamage (BoundSet BoundSet) Bool)
(declare-fun FlewLow (BoundSet BoundSet) Bool)
(declare-fun IsSmall (BoundSet) Bool)
(assert (not (=> (exists ((a BoundSet)) (exists ((c BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (Cried a) (and (Cried c) (and (IsStudentOf c a) (and (ShowedMaps a c d) (DepictDamage d b))))))))) (exists ((a BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (exists ((b BoundSet)) (and (CalculatedDamage a b) (and (FlewLow a e) (and (FlewLow a f) (and (IsSmall e) (IsSmall f))))))))))))
(check-sat)
(get-model)