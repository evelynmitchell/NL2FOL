(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsWearingBlackHat (BoundSet) Bool)
(declare-fun IsWearingCoat (BoundSet) Bool)
(declare-fun MakesFace (BoundSet) Bool)
(declare-fun IsBehind (BoundSet BoundSet) Bool)
(declare-fun IsNear (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((d BoundSet)) (and (IsWearingBlackHat a) (and (IsWearingCoat a) (and (MakesFace a) (IsBehind d a)))))) (and (forall ((g BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsNear g h) (IsWearingCoat i))))) (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (forall ((j BoundSet)) (=> (IsBehind j k) (IsNear l m)))))))) (exists ((e BoundSet)) (exists ((f BoundSet)) (IsNear e f))))))
(check-sat)
(get-model)