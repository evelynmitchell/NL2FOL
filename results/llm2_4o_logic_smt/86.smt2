(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsProtected (BoundSet) Bool)
(declare-fun IsSparedPain (BoundSet BoundSet) Bool)
(declare-fun HasOtherIllnesses (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (IsProtected a)) (and (forall ((e BoundSet)) (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsProtected e) (IsSparedPain f g))))) (and (forall ((j BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsSparedPain h i) (IsProtected j))))) (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (=> (IsProtected k) (HasOtherIllnesses l m)))))))) (exists ((c BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (IsSparedPain b c) (HasOtherIllnesses b d))))))))
(check-sat)
(get-model)