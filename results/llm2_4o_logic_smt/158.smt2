(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsLittle (BoundSet) Bool)
(declare-fun IsWhite (BoundSet) Bool)
(declare-fun RunsOutside (BoundSet) Bool)
(declare-fun IsAnimal (BoundSet) Bool)
(declare-fun IsOutside (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsLittle a) (and (IsWhite a) (RunsOutside a)))) (and (forall ((c BoundSet)) (forall ((d BoundSet)) (=> (IsAnimal c) (IsLittle d)))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (IsOutside e) (IsLittle f)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsAnimal g) (IsWhite h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (RunsOutside i) (IsAnimal j)))) (and (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (IsAnimal k) (RunsOutside l)))) (and (forall ((n BoundSet)) (forall ((m BoundSet)) (=> (RunsOutside m) (IsOutside n)))) (forall ((o BoundSet)) (forall ((p BoundSet)) (=> (IsOutside o) (RunsOutside p))))))))))) (exists ((b BoundSet)) (and (IsAnimal b) (IsOutside b))))))
(check-sat)
(get-model)