(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsStandingInMiddleOf (BoundSet BoundSet) Bool)
(declare-fun InCrowdOf (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (IsStandingInMiddleOf d a) (InCrowdOf b c)))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsStandingInMiddleOf f g) (InCrowdOf h i)))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (forall ((j BoundSet)) (=> (InCrowdOf j k) (IsStandingInMiddleOf l m)))))) (forall ((q BoundSet)) (forall ((o BoundSet)) (forall ((n BoundSet)) (forall ((p BoundSet)) (=> (IsStandingInMiddleOf n o) (InCrowdOf p q))))))))) (exists ((e BoundSet)) (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsStandingInMiddleOf e a) (InCrowdOf b c)))))))))
(check-sat)
(get-model)