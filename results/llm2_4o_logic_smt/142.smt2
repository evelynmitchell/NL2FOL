(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun HasBackpack (BoundSet) Bool)
(declare-fun AreAtTable (BoundSet) Bool)
(declare-fun IsWithWoman (BoundSet BoundSet) Bool)
(declare-fun IsInBeigeBlazer (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((d BoundSet)) (and (HasBackpack a) (and (AreAtTable a) (and (IsWithWoman a d) (IsInBeigeBlazer d)))))) (and (forall ((f BoundSet)) (=> (AreAtTable f) (HasBackpack f))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (AreAtTable g) (IsWithWoman g h)))) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (AreAtTable i) (IsInBeigeBlazer j))))))) (exists ((a BoundSet)) (AreAtTable a)))))
(check-sat)
(get-model)