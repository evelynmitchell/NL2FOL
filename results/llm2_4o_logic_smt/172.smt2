(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsWhite (BoundSet) Bool)
(declare-fun IsGreyhound (BoundSet) Bool)
(declare-fun IsDog (BoundSet) Bool)
(declare-fun IsWearing (BoundSet BoundSet) Bool)
(declare-fun RunsAround (BoundSet BoundSet) Bool)
(declare-fun Races (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsWhite a) (and (IsGreyhound a) (and (IsDog a) (and (IsWearing a b) (RunsAround a c)))))))) (forall ((g BoundSet)) (forall ((f BoundSet)) (forall ((h BoundSet)) (=> (Races f g) (IsDog h)))))) (exists ((e BoundSet)) (exists ((d BoundSet)) (Races d e))))))
(check-sat)
(get-model)