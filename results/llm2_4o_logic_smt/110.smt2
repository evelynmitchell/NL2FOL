(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsRidingDown (BoundSet BoundSet) Bool)
(declare-fun IsBetween (BoundSet BoundSet) Bool)
(declare-fun Exists (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsRidingDown a c) (IsBetween a b))))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (Exists e) (IsRidingDown e f)))) (and (forall ((g BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (Exists g) (IsRidingDown h i))))) (and (forall ((l BoundSet)) (forall ((k BoundSet)) (forall ((j BoundSet)) (=> (Exists j) (IsRidingDown k l))))) (and (forall ((n BoundSet)) (forall ((m BoundSet)) (=> (Exists m) (IsBetween m n)))) (forall ((q BoundSet)) (forall ((o BoundSet)) (forall ((p BoundSet)) (=> (Exists o) (IsBetween p q)))))))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (Exists a) (and (Exists d) (Exists b)))))))))
(check-sat)
(get-model)