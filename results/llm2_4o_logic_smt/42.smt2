(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun PreysOn (BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(declare-fun CanTurnInto (BoundSet) Bool)
(declare-fun LeadsTo (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (and (exists ((b BoundSet)) (( (and (PreysOn a) (PreysOn b)))) (CanTurnInto c)))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (LeadsTo e) (PreysOn f)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (LeadsTo g) (PreysOn h)))) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (CanTurnInto i) (LeadsTo j))))))) (exists ((a BoundSet)) (exists ((d BoundSet)) (and (exists ((b BoundSet)) (( (and (PreysOn a) (PreysOn b)))) (LeadsTo d)))))))
(check-sat)
(get-model)