(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun RuinedParty (BoundSet BoundSet) Bool)
(declare-fun LeftParty (BoundSet BoundSet) Bool)
(declare-fun WasAtParty (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (RuinedParty a b))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (forall ((d BoundSet)) (=> (RuinedParty d e) (LeftParty f e))))) (and (forall ((g BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (LeftParty g h) (RuinedParty i h))))) (and (forall ((k BoundSet)) (forall ((j BoundSet)) (=> (RuinedParty j k) (WasAtParty j)))) (forall ((l BoundSet)) (forall ((m BoundSet)) (=> (WasAtParty l) (RuinedParty l m)))))))) (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (WasAtParty a) (LeftParty c b))))))))
(check-sat)
(get-model)