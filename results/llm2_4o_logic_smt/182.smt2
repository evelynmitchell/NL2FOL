(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Smokes (BoundSet) Bool)
(declare-fun LeansAgainst (BoundSet BoundSet) Bool)
(declare-fun HasFlier (BoundSet BoundSet) Bool)
(declare-fun IsAssociatedWith (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (Smokes a) (and (LeansAgainst a b) (HasFlier b c)))))) (and (forall ((g BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((h BoundSet)) (=> (LeansAgainst g h) (IsAssociatedWith i j)))))) (and (forall ((l BoundSet)) (forall ((n BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (=> (LeansAgainst k l) (HasFlier m n)))))) (forall ((q BoundSet)) (forall ((o BoundSet)) (forall ((p BoundSet)) (=> (Smokes o) (HasFlier p q)))))))) (exists ((e BoundSet)) (exists ((f BoundSet)) (exists ((d BoundSet)) (and (Smokes d) (and (IsAssociatedWith d e) (HasFlier e f)))))))))
(check-sat)
(get-model)