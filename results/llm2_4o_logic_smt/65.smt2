(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsFilledWithSalt (BoundSet) Bool)
(declare-fun IsFilledWithFat (BoundSet) Bool)
(declare-fun IsFilledWithAddedSugars (BoundSet) Bool)
(declare-fun IsNeeded (BoundSet) Bool)
(declare-fun IsOfFastFoodIndustry (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsFilledWithSalt a) (and (IsFilledWithFat a) (IsFilledWithAddedSugars a)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsNeeded g) (IsFilledWithSalt h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsFilledWithFat i) (IsNeeded j)))) (and (forall ((l BoundSet)) (forall ((k BoundSet)) (=> (IsFilledWithFat k) (IsOfFastFoodIndustry l)))) (forall ((n BoundSet)) (forall ((m BoundSet)) (=> (IsFilledWithAddedSugars m) (IsOfFastFoodIndustry n)))))))) (exists ((e BoundSet)) (and (IsNeeded e) (IsOfFastFoodIndustry e))))))
(check-sat)
(get-model)