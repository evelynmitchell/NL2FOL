(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Drinks (BoundSet) Bool)
(declare-fun Parties (BoundSet) Bool)
(declare-fun HasMultiplePartners (BoundSet) Bool)
(declare-fun NotTrustedToSell (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (Drinks a) (and (Parties a) (HasMultiplePartners a)))) (and (forall ((e BoundSet)) (forall ((d BoundSet)) (=> (Drinks d) (NotTrustedToSell d e)))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (Parties f) (NotTrustedToSell f g)))) (and (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (HasMultiplePartners h) (NotTrustedToSell h i)))) (forall ((k BoundSet)) (forall ((j BoundSet)) (=> (NotTrustedToSell j k) (HasMultiplePartners j)))))))) (exists ((c BoundSet)) (exists ((a BoundSet)) (not (NotTrustedToSell a c)))))))
(check-sat)
(get-model)