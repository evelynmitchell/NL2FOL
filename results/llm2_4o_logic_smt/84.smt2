(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsInBadShape (BoundSet) Bool)
(declare-fun RisksSafety (BoundSet BoundSet) Bool)
(declare-fun MustBeTornDown (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsInBadShape a) (RisksSafety b c))))) (and (forall ((d BoundSet)) (=> (IsInBadShape d) (MustBeTornDown d))) (and (forall ((e BoundSet)) (=> (MustBeTornDown e) (IsInBadShape e))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (forall ((h BoundSet)) (=> (RisksSafety f g) (MustBeTornDown h))))) (forall ((i BoundSet)) (forall ((k BoundSet)) (forall ((j BoundSet)) (=> (MustBeTornDown i) (RisksSafety j k))))))))) (exists ((a BoundSet)) (MustBeTornDown a)))))
(check-sat)
(get-model)