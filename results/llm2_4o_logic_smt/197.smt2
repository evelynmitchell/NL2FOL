(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSkateboarding (BoundSet) Bool)
(declare-fun IsWatching (BoundSet) Bool)
(declare-fun IsASkateboarder (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (IsSkateboarding a)) (and (forall ((e BoundSet)) (forall ((d BoundSet)) (=> (IsSkateboarding d) (IsWatching e)))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (=> (IsSkateboarding f) (IsASkateboarder g)))) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (IsASkateboarder h) (IsSkateboarding i))))))) (exists ((c BoundSet)) (exists ((b BoundSet)) (and (IsWatching b) (IsASkateboarder c)))))))
(check-sat)
(get-model)