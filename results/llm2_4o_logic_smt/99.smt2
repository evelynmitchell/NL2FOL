(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Ordered (BoundSet BoundSet) Bool)
(declare-fun Killed (BoundSet BoundSet) Bool)
(declare-fun BelongsIn (BoundSet BoundSet) Bool)
(declare-fun IsNoDifferent (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (Ordered a b) (Killed b c))))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (forall ((h BoundSet)) (=> (Ordered f g) (BelongsIn f h))))) (and (forall ((l BoundSet)) (forall ((i BoundSet)) (forall ((k BoundSet)) (forall ((j BoundSet)) (=> (Killed i j) (IsNoDifferent k l)))))) (forall ((n BoundSet)) (forall ((o BoundSet)) (forall ((m BoundSet)) (forall ((p BoundSet)) (=> (Killed m n) (BelongsIn o p))))))))) (exists ((e BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (and (IsNoDifferent a d) (BelongsIn a e))))))))
(check-sat)
(get-model)