(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun BreaksThrough (BoundSet BoundSet) Bool)
(declare-fun Rides (BoundSet BoundSet) Bool)
(declare-fun IsInDaytime (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (BreaksThrough a b))) (and (forall ((g BoundSet)) (forall ((f BoundSet)) (forall ((i BoundSet)) (forall ((h BoundSet)) (=> (BreaksThrough f g) (Rides h i)))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (forall ((j BoundSet)) (=> (Rides j k) (BreaksThrough l m)))))) (and (forall ((o BoundSet)) (forall ((n BoundSet)) (forall ((p BoundSet)) (=> (BreaksThrough n o) (IsInDaytime p))))) (forall ((q BoundSet)) (forall ((s BoundSet)) (forall ((r BoundSet)) (=> (IsInDaytime q) (BreaksThrough r s))))))))) (exists ((c BoundSet)) (exists ((d BoundSet)) (and (Rides c d) (IsInDaytime c)))))))
(check-sat)
(get-model)