,label,updated_label,articles,Claim,Implication,Referring Expressions - Claim,Referring Expressions - Implication,Property Implications,Equal Entities,Subset Entities,Claim Lfs,Implication Lfs,Logical Form,Logical Form 2,result
0,0,false causality,"Giving 10% of your income to the Church will free a child’s soul from Limbo into Heaven, so give your money!"," ""Giving 10% of your income to the Church will free a child's soul from Limbo into Heaven."""," ""You should give your money to the Church."""," IsGiven(b,a),  IsInLimbo(c),  IsInHeaven(c)"," IsGiven(f,a)",[],"[(' church', ' church')]","[(' Your money', ' Your income'), (' heaven', ' church')]","(IsGiven(b,a) and IsInLimbo(c)) and IsInHeaven(e)","IsGiven(f,a)","(exists e (forall b ((IsGiven(b,a) and IsInLimbo(c)) and IsInHeaven(e)))) -> (forall a (exists f (IsGiven(f,a))))","(exists c (exists e (exists b (exists a ((IsGiven(b,a) and IsInLimbo(c)) and IsInHeaven(e)))))) -> (exists f (exists a (IsGiven(f,a))))",
1,0,appeal to emotion,"If everyone lived his or her life exactly like Jesus lived his life, the world would be a beautiful place!"," ""If everyone lived their life exactly like Jesus lived his life"""," ""The world would be a beautiful place"""," IsLivedExactlyLike(a,b)", IsBeautiful(d),[],[],[],"IsLivedExactlyLike(a,b)",IsBeautiful(c),"(IsLivedExactlyLike(a,b)) -> (IsBeautiful(c))","(exists a (exists b (IsLivedExactlyLike(a,b)))) -> (exists c (IsBeautiful(c)))",LF
2,0,appeal to emotion,"I know you don’t like the kitty-cat sweater that Grandma knitted for you, but she worked so hard on it and it will make her happy to see you wear it in the family holiday photo."," ""You don't like the kitty-cat sweater."""," ""Grandma will be happy to see you wear it in the family holiday photo.""",a) DoesNotLike(a), WillBeHappy(a),[],"[('', '')]",[],DoesNotLike(a),"WillBeHappy(a) and (IsWearing(a,family holiday photo) and IsInTheFamily(a))","(DoesNotLike(a)) -> (WillBeHappy(a) and (IsWearing(a,family holiday photo) and IsInTheFamily(a)))","(exists a (DoesNotLike(a))) -> (exists a (WillBeHappy(a) and (IsWearing(a,family holiday photo) and IsInTheFamily(a))))",
3,0,ad populum,"Dave wants you to break into the spooky cabin with him. “Everyone does it,” he claims. What fallacy has he committed?"," ""Everyone breaks into the spooky cabin."""," ""You should break into the spooky cabin.""", IsInSpookyCabin(a)," ShouldBreakInto(c,a)",[],"[(' spooky cabin', ' spooky cabin')]","[(' spooky cabin', ' You')]",IsInSpookyCabin(b),"ShouldBreakInto(c,a)","(IsInSpookyCabin(b)) -> (ShouldBreakInto(c,a))","(exists b (IsInSpookyCabin(b))) -> (exists c (exists a (ShouldBreakInto(c,a))))",LF
4,0,fallacy of credibility,"Ms. Drayer, the smartest person in the universe, says the debate is the best class, therefore it is."," ""Ms. Drayer says the debate is the best class."""," ""The debate is the best class."""," IsTeacherOf(b),  IsBestClass(c)", IsBestClass(d),[],"[(' class', ' class')]","[(' Ms. Drayer', ' class'), (' debate', ' The debate'), (' debate', ' class'), (' The debate', ' class')]",IsTeacherOf(b) and IsBestClass(c),IsBestClass(a),(exists c (exists b (IsTeacherOf(b) and IsBestClass(c)))) -> (forall a (IsBestClass(a))),(exists c (exists b (IsTeacherOf(b) and IsBestClass(c)))) -> (exists a (IsBestClass(a))),Valid
5,0,faulty generalization,Why did the blond cross the road?  Because she saw a shoe sale!," ""The blonde crossed the road because she saw a shoe sale."""," ""There is a shoe sale on the other side of the road."""," IsBlonde(b),  IsAtShoeSale(a)", IsOnOtherSideOfRoad(d),[],"[(' shoe sale', ' shoe sale')]","[(' The blonde', ' There is')]",IsBlonde(b) and IsAtShoeSale(a),IsOnOtherSideOfRoad(d) and IsA(a),(IsBlonde(b) and IsAtShoeSale(a)) -> (IsOnOtherSideOfRoad(d) and IsA(a)),(exists b (exists a (IsBlonde(b) and IsAtShoeSale(a)))) -> (exists a (exists d (IsOnOtherSideOfRoad(d) and IsA(a)))),LF
6,0,appeal to emotion,"Timmy: Mom, what if I don’t believe in God?
Mom: Then you burn in Hell forever.  Why do you ask?
Timmy: No reason.
"," ""Timmy doesn't believe in God."""," ""Timmy will burn in Hell forever."""," IsBelieveIn(a),  IsGod(b)"," IsBurnIn(a),  IsInHell(c),  IsForever(d)",[],"[(' Timmy', ' Timmy')]",[],~IsBelieveIn(a),IsBurnIn(a) and IsInHell(c) and IsForever(d),(~IsBelieveIn(a)) -> (IsBurnIn(a) and IsInHell(c) and IsForever(d)),(exists a (~IsBelieveIn(a))) -> (exists c (exists a (exists d (IsBurnIn(a) and IsInHell(c) and IsForever(d))))),LF
7,0,false dilemma,"""If you never gave money to charity, then you must be a greedy millionaire."" What is this?",,,,,[],[],[],,,() -> (),() -> (),
8,0,fallacy of extension,Caroline says that she is going to have lunch with the new girl. Jenna says that she can't believe that Caroline is ditching her old friends for the new girl.," ""Caroline is going to have lunch with the new girl."""," ""Jenna can't believe that Caroline is ditching her old friends for the new girl."""," IsGoingToHaveLunch(a,b)", IsDitching(c),[],[],"[(' Caroline', ''), (' new girl', '')]","IsGoingToHaveLunch(a,b)",IsDitching(c) and ~Believes(c),"(exists b (exists a (IsGoingToHaveLunch(a,b)))) -> (forall c (IsDitching(c) and ~Believes(c)))","(exists a (exists b (IsGoingToHaveLunch(a,b)))) -> (exists c (IsDitching(c) and ~Believes(c)))",LF
9,0,faulty generalization,"""You can never give anyone a break. If you do, they'll walk all over you.""",,,,,[],[],[],,,() -> (),() -> (),
10,0,false causality,"Believing that ""runs"" occur to statistically independent phenomena such as routine wheel spirits."," ""Believing that runs occur to statistically independent phenomena"""," ""Statistically independent phenomena are spirits"""," IsBelieving(a),  AreStatisticallyIndependent(b,c)"," AreStatisticallyIndependent(d,c)",[],[],"[(' spirits', ' phenomena')]","IsBelieving(a) and (AreStatisticallyIndependent(b,c) v IsBelieving(c))","AreStatisticallyIndependent(d,c) and ~IsSpirit(c)","(forall c (IsBelieving(a) and (AreStatisticallyIndependent(b,c) v IsBelieving(c)))) -> (exists d (AreStatisticallyIndependent(d,c) and ~IsSpirit(c)))","(exists c (exists a (exists b (exists v (IsBelieving(a) and (AreStatisticallyIndependent(b,c) v IsBelieving(c))))))) -> (exists c (exists d (AreStatisticallyIndependent(d,c) and ~IsSpirit(c))))",LF
11,0,false causality,"I broke a mirror earlier in the day, and then I received an F on my history final. Therefore, I received the F because I broke the mirror."," ""Breaking a mirror leads to receiving an F on a history final."""," ""I received an F on my history final because I broke a mirror earlier in the day."""," IsBroken(a),  HasF(b)"," IsReceived(d),  HasF(d)",[],[],"[(' history final', ''), (' F', '')]",IsBroken(a) and HasF(b),IsReceived(d) and HasF(d),(exists b (IsBroken(a) and HasF(b))) -> (forall d (IsReceived(d) and HasF(d))),(exists a (exists b (IsBroken(a) and HasF(b)))) -> (exists d (IsReceived(d) and HasF(d))),LF
12,0,fallacy of extension,"Charlie: I think we should put more money into schools. Quality public education is so important.
Bob: So you’re saying we should cut military spending and spend it instead on more spiral notebooks and crayons? I guess you want our country to be a weak, defenseless target for terrorists.
Charlie: Creo que deberíamos invertir más dinero en las escuelas. La educación pública de calidad es muy importante.

Bob: ¿Entonces estás diciendo que deberíamos recortar el gasto militar y gastarlo en más cuadernos de espiral y crayones? Supongo que quiere que nuestro país sea un objetivo débil e indefenso para los terroristas.",,,,,[],[],[],,,() -> (),() -> (),
13,0,false causality,"Cellphones weren’t invented before I was born. Now, they are everywhere! Therefore, cellphones were created because I was born."," ""Cellphones were created because I was born."""," ""Cellphones weren't invented before I was born."""," IsBorn(a),  CreatedCellphones(b)"," WasNotInventedBefore(b,a)",[],"[(' I', ' I'), (' cellphones', ' Cellphones')]",[],IsBorn(a) and CreatedCellphones(b),"WasNotInventedBefore(b,a)","(IsBorn(a) and CreatedCellphones(b)) -> (WasNotInventedBefore(b,a))","(exists a (exists b (IsBorn(a) and CreatedCellphones(b)))) -> (exists b (exists a (WasNotInventedBefore(b,a))))",LF
14,0,ad hominem,Ms. Baker assigned me a lot of homework because she’s a witch!," ""Ms. Baker is a witch."""," ""Ms. Baker assigned me a lot of homework because she wants to torture me.""", IsWitch(b)," IsAssigned(a,c),  WantsToTorture(d)",[],"[(' Ms. Baker', ' Ms. Baker')]",[],IsWitch(b),"IsAssigned(a,c) and WantsToTorture(d)","(IsWitch(b)) -> (IsAssigned(a,c) and WantsToTorture(d))","(exists b (IsWitch(b))) -> (exists c (exists a (exists d (IsAssigned(a,c) and WantsToTorture(d)))))",LF
15,0,fallacy of credibility,"My dad went to school, so he knows everything about the education system.",,,,,[],[],[],,,() -> (),() -> (),
16,0,ad populum,Everyone is doing the Low-Carb Diet.," ""Everyone is doing the Low-Carb Diet."""," ""I will also do the Low-Carb Diet."""," IsDoing(b,a)"," WillDo(c,a)",[],"[(' low-carb diet', ' low-carb diet')]",[],"IsDoing(b,a)","WillDo(c,a)","(IsDoing(b,a)) -> (WillDo(c,a))","(exists b (exists a (IsDoing(b,a)))) -> (exists c (exists a (WillDo(c,a))))",LF
17,0,fallacy of extension,"Parent: You need to clean out your backpack.
Child: You know I have ADD! Why can’t you just accept me as I am?"," ""The child has ADD."""," ""The child doesn't need to clean out their backpack.""", IsADD(a), IsNotNeeded(c),[],[],"[(' child', '')]",IsADD(b),~IsNeeded(c),(IsADD(b)) -> (~IsNeeded(c)),(exists b (IsADD(b))) -> (exists c (~IsNeeded(c))),LF
18,0,fallacy of credibility,"X has been around for years now.
Y is new.
Therefore, Y is better than X."," ""Y is new"""," ""Y is better than X""", IsNew(a)," IsBetterThan(a,b)",[],"[(' Y', ' Y')]",[],IsNew(a),"IsBetterThan(a,b)","(IsNew(a)) -> (IsBetterThan(a,b))","(exists a (IsNew(a))) -> (exists a (exists b (IsBetterThan(a,b))))",LF
19,0,false causality,"""Right when I sneezed, the power went off. I must've caused the outage."" Bragged Zohaw.",,,,,[],[],[],,,() -> (),() -> (),
20,0,equivocation,"I like my steak rare. But I don’t care for aardvark steak, even though it’s the rarest steak in the world."," ""I like my steak rare."""," ""Aardvark steak is not liked.""", IsRare(a)," IsNotLiked(b, c)",[],[],[],IsRare(a),"~IsLiked(c, b)","(IsRare(a)) -> (~IsLiked(c, b))","(exists a (IsRare(a))) -> (exists c (exists b (~IsLiked(c, b))))",LF
21,0,faulty generalization,"If you allow the students to redo this one test, they will always want to redo all future tests"," ""Allowing students to redo a test will lead to them always wanting to redo all future tests."""," ""You should not allow students to redo a test."""," IsAllowed(a,b),  WillAlwaysWant(c)"," ShouldNotAllow(d,a),  IsRedoable(b)",[],"[(' Students', ' students'), (' test', ' test')]","[(' test', ' Students'), (' test', ' You'), (' test', ' students'), (' You', ' future tests')]","IsAllowed(a,b) and WillAlwaysWant(c)","ShouldNotAllow(d,a) and IsRedoable(b)","(forall c (exists b (IsAllowed(a,b) and WillAlwaysWant(c)))) -> (forall d (exists b (forall a (ShouldNotAllow(d,a) and IsRedoable(b)))))","(exists c (exists a (exists b (IsAllowed(a,b) and WillAlwaysWant(c))))) -> (exists a (exists b (exists d (ShouldNotAllow(d,a) and IsRedoable(b)))))",LF
22,0,fallacy of relevance,"There is no need for additional taxes for education. Every year we throw more money into education, and all they do is hire more management and build more buildings. None of the money actually reaches the classroom or is really used for education."," ""Additional taxes for education are not needed."""," ""The money thrown into education doesn't reach the classroom or is not used for education.""", IsNeeded(a)," IsUsedForEducation(a),  IsReachedTheClassroom(d)",[],"[(' education', ' education')]","[(' classroom', ' education')]",~IsNeeded(b),IsUsedForEducation(a) and ~IsReachedTheClassroom(d),(~IsNeeded(b)) -> (IsUsedForEducation(a) and ~IsReachedTheClassroom(d)),(exists b (~IsNeeded(b))) -> (exists a (exists d (IsUsedForEducation(a) and ~IsReachedTheClassroom(d)))),LF
23,0,false causality,Believing that the cause of the Reformation was simply Martin Luther posting his theses," ""Martin Luther posted his theses on the door of the Castle Church in Wittenberg."""," ""Understanding the Reformation requires a more nuanced view of history."""," IsPosted(a),  IsInCastleChurch(b),  IsInWittenberg(c)", IsUnderstood(d),[],[],"[(' Castle Church', ''), (' Wittenberg', '')]",IsPosted(a) and (IsInCastleChurch(b) and IsInWittenberg(c)),IsUnderstood(d) and (HasNuancedView(d) and IsHistory(d)),(exists c (exists b (IsPosted(a) and (IsInCastleChurch(b) and IsInWittenberg(c))))) -> (forall d (IsUnderstood(d) and (HasNuancedView(d) and IsHistory(d)))),(exists c (exists a (exists b (IsPosted(a) and (IsInCastleChurch(b) and IsInWittenberg(c)))))) -> (exists d (IsUnderstood(d) and (HasNuancedView(d) and IsHistory(d)))),LF
24,0,false causality,The party was going great! Then Gerald showed up and little by little people started collecting their coats and heading home. Gerald ruined the party.," ""Gerald ruined the party"""," ""People started collecting their coats and heading home little by little""", IsRuined(a)," IsCollected(c),  IsHeadingHome(e),  IsLittleByLittle(f)",[],[],"[(' home', ' Gerald'), (' little by little', ' Gerald'), (' little by little', ' party')]",IsRuined(a) and ~IsParty(b),(IsCollected(c) and IsHeadingHome(e)) or IsLittleByLittle(f),(forall b (forall a (IsRuined(a) and ~IsParty(b)))) -> (exists f (exists e ((IsCollected(c) and IsHeadingHome(e)) or IsLittleByLittle(f)))),(exists a (exists b (IsRuined(a) and ~IsParty(b)))) -> (exists c (exists e (exists f ((IsCollected(c) and IsHeadingHome(e)) or IsLittleByLittle(f))))),
25,0,fallacy of logic,"I can’t stop eating these chocolates.  I really love chocolate, or I seriously lack willpower.  I know I really love chocolate; therefore, I cannot lack willpower."," ""I love chocolate."""," ""I lack willpower."""," IsLoved(a,b)"," IsLacked(a,c)",[],"[(' I', ' I')]",[],"IsLoved(a,b)","IsLacked(a,c)","(IsLoved(a,b)) -> (IsLacked(a,c))","(exists a (exists b (IsLoved(a,b)))) -> (exists c (exists a (IsLacked(a,c))))",LF
26,0,false causality,"Shortly after MySpace became popular, U.S. soldiers found Saddam Hussein."," ""Saddam Hussein was found shortly after MySpace became popular."""," ""U.S. soldiers found Saddam Hussein."""," IsFound(a),  BecamePopular(b)"," IsFound(a),  AreU.S.Soldiers(c)",[],"[(' Saddam Hussein', ' Saddam Hussein')]",[],IsFound(a) and BecamePopular(b),AreU.S.Soldiers(c) and IsFound(a),(IsFound(a) and BecamePopular(b)) -> (AreU.S.Soldiers(c) and IsFound(a)),(exists a (exists b (IsFound(a) and BecamePopular(b)))) -> (exists c (exists a (AreU.S.Soldiers(c) and IsFound(a)))),LF
27,0,false causality,Jimmy isn't at school today. He must be on a family trip.," ""Jimmy is not at school today."""," ""He is on a family trip."""," IsAtSchool(a),  IsNotAtSchool(a)", IsOnFamilyTrip(c),[],[],"[(' Jimmy', ' family')]",~IsAtSchool(a),IsOnFamilyTrip(c),(~IsAtSchool(a)) -> (IsOnFamilyTrip(c)),(exists a (~IsAtSchool(a))) -> (exists c (IsOnFamilyTrip(c))),LF
28,0,circular reasoning,"I am athletic because I run, and I run because I'm athletic."," ""I run."""," ""I am athletic.""", IsRun(b), IsAthletic(c),[],"[(' I', ' I')]","[(' run', ' athletic')]",IsRun(a),IsAthletic(a),(IsRun(a)) -> (IsAthletic(a)),(exists a (IsRun(a))) -> (exists a (IsAthletic(a))),LF
29,0,false causality,You know Jane Fonda’s exercise videos must be worth the money. Look at the great shape she’s in.," ""Jane Fonda's exercise videos are worth the money."""," ""Jane Fonda is in great shape."""," IsWorthTheMoney(b),  IsJaneFonda(a)", IsInGreatShape(a),[],"[(' Jane Fonda', ' Jane Fonda')]",[],IsWorthTheMoney(b) and IsJaneFonda(a),IsInGreatShape(a),(IsWorthTheMoney(b) and IsJaneFonda(a)) -> (IsInGreatShape(a)),(exists b (exists a (IsWorthTheMoney(b) and IsJaneFonda(a)))) -> (exists a (IsInGreatShape(a))),LF
30,0,fallacy of credibility,Albert Einstein was extremely impressed with this theory.," ""Albert Einstein was impressed with the theory."""," ""The theory is beautiful.""", IsImpressed(b), IsBeautiful(a),[],"[(' theory', ' Theory')]",[],IsImpressed(b),IsBeautiful(a),(IsImpressed(b)) -> (IsBeautiful(a)),(exists b (IsImpressed(b))) -> (exists a (IsBeautiful(a))),LF
31,0,false causality,“I sneezed exactly at the same time the power went off. My sneeze must’ve done something to make the power go off. “," ""My sneeze caused the power to go off."""," ""I have superpowers."""," IsCausedBy(a,b)", HasSuperpowers(c),[],[],"[(' I', ' power'), (' power', ' superpowers')]","IsCausedBy(a,b)",HasSuperpowers(c),"(forall b (IsCausedBy(a,b))) -> (exists c (HasSuperpowers(c)))","(exists a (exists b (IsCausedBy(a,b)))) -> (exists c (HasSuperpowers(c)))",LF
32,0,faulty generalization,"It’s getting late, and we still have to decide on the school budget. What do you say we just leave it as is and we can call it a night?"," ""The school budget should be left as is."""," ""We should call it a night without deciding on the school budget.""", IsLeftAsIs(a)," ShouldBeCalled(b),  IsDecidedOn(a)",[],"[(' School budget', ' school budget')]",[],IsLeftAsIs(a),ShouldBeCalled(b) and IsDecidedOn(a),(IsLeftAsIs(a)) -> (ShouldBeCalled(b) and IsDecidedOn(a)),(exists a (IsLeftAsIs(a))) -> (exists b (exists a (ShouldBeCalled(b) and IsDecidedOn(a)))),LF
33,0,ad hominem,"Speaker 1 (Democrat): “Donald Trump is a known adulterer. It reflects badly on his character, and suggests he might not be trustworthy.”
Speaker 2 (Republican): “What about Bill Clinton? You didn’t seem to care when he cheated.”"," ""Donald Trump is a known adulterer."""," ""Bill Clinton cheated.""", IsKnownAdulterer(a), IsCheated(c),[],[],[],IsKnownAdulterer(a),IsCheated(c),(IsKnownAdulterer(a)) -> (IsCheated(c)),(exists a (IsKnownAdulterer(a))) -> (exists c (IsCheated(c))),LF
34,0,ad hominem,"I hope I presented my argument clearly.  Now, my opponent will attempt to refute my argument by his own fallacious, incoherent, illogical version of history."," ""I presented my argument clearly."""," ""My opponent's argument is fallacious, incoherent, and illogical.""", IsPresented(a)," IsFallacious(c),  IsIncoherent(e),  IsIllogical(f)",[],[],"[(' argument', ' My argument'), (' fallacious', ' My argument'), (' incoherent', ' My argument'), (' illogical.', ' My argument')]",IsPresented(a),(IsFallacious(c) and IsIncoherent(e)) or IsIllogical(f),(forall a (IsPresented(a))) -> (exists f (exists e (exists c ((IsFallacious(c) and IsIncoherent(e)) or IsIllogical(f))))),(exists a (IsPresented(a))) -> (exists c (exists e (exists f ((IsFallacious(c) and IsIncoherent(e)) or IsIllogical(f))))),
35,0,false causality,"Every time we sacrifice virgins, it rains. Therefore, sacrificing virgins causes it to rain."," ""Sacrificing virgins causes it to rain."""," ""It rains every time we sacrifice virgins."""," IsSacrificed(b),  CausesRain(a,c)"," CausesRain(a,d)",[],"[(' it', ' It')]",[],"IsSacrificed(b) and CausesRain(a,c)","CausesRain(a,d)","(IsSacrificed(b) and CausesRain(a,c)) -> (CausesRain(a,d))","(exists c (exists b (exists a (IsSacrificed(b) and CausesRain(a,c))))) -> (exists a (exists d (CausesRain(a,d))))",Valid
36,0,ad hominem,"Salesman: This car gets better than average gas mileage and is one of the most reliable cars according to Consumer Reports.
Will: I doubt it—you obviously just want to sell me that car.
"," ""This car gets better than average gas mileage and is one of the most reliable cars according to Consumer Reports."""," ""You want to sell me that car."""," IsBetterThanAverage(a),  IsReliable(b)"," WantsToSell(c),  IsThatCar(d)",[],[],"[(' This car', ' car')]",IsBetterThanAverage(a) and IsReliable(b),WantsToSell(c) and IsThatCar(d),(exists a (IsBetterThanAverage(a) and IsReliable(b))) -> (forall d (WantsToSell(c) and IsThatCar(d))),(exists a (exists b (IsBetterThanAverage(a) and IsReliable(b)))) -> (exists c (exists d (WantsToSell(c) and IsThatCar(d)))),LF
37,0,fallacy of relevance,Labor unions in America are just as bad as Russia under Stalin!,,,,,[],[],[],,,() -> (),() -> (),
38,0,ad populum,"""Everyone was driving over the speed limit, so I shouldn't have gotten a ticket for it!"" is an example of which logical fallacy?"," ""Everyone was driving over the speed limit."""," ""I shouldn't have gotten a ticket for it!"" (This is an example of a false cause fallacy, as there is no logical connection between the fact that everyone else was breaking the law and the speaker's own actions.)"," IsDriving(b),  IsOverSpeedLimit(a)", IsTickedOff(a),[],"[(' speed limit', '')]",[],IsDriving(b) and IsOverSpeedLimit(a),"IsTickedOff(a) and ~Caused(a,ticket)","(IsDriving(b) and IsOverSpeedLimit(a)) -> (IsTickedOff(a) and ~Caused(a,ticket))","(exists b (exists a (IsDriving(b) and IsOverSpeedLimit(a)))) -> (exists a (IsTickedOff(a) and ~Caused(a,ticket)))",LF
39,0,ad hominem,Why would you trust Paris Hilton to sell health food? She drinks and parties and has multiple partners.," ""Paris Hilton drinks and parties and has multiple partners."""," ""You should not trust Paris Hilton to sell health food."""," IsDrinks(a),  IsParties(a),  HasMultiplePartners(a)", IsNotTrustedToSellHealthFood(a),[],"[(' Paris Hilton', ' Paris Hilton')]",[],(IsDrinks(a) and IsParties(a)) or HasMultiplePartners(a),~IsTrustedToSellHealthFood(a),((IsDrinks(a) and IsParties(a)) or HasMultiplePartners(a)) -> (~IsTrustedToSellHealthFood(a)),(exists a ((IsDrinks(a) and IsParties(a)) or HasMultiplePartners(a))) -> (exists a (~IsTrustedToSellHealthFood(a))),
40,0,false causality,"“Yesterday, I walked under a ladder with an open umbrella indoors while spilling salt in front of a black cat. And I forgot to knock on wood with my lucky dice. That must be why I’m having such a bad day today. It’s bad luck.”"," ""Yesterday, I walked under a ladder with an open umbrella indoors while spilling salt in front of a black cat."""," ""It's bad luck."""," IsSpilled(a),  IsUnderLadder(a),  IsOpenUmbrella(a),  IsBlackCat(a)", IsBadLuck(c),[],[],"[('', ' It'), (' luck', '')]",(IsSpilled(a) and IsUnderLadder(a)) and (IsOpenUmbrella(a) and IsBlackCat(a)),~IsBadLuck(b),(exists a ((IsSpilled(a) and IsUnderLadder(a)) and (IsOpenUmbrella(a) and IsBlackCat(a)))) -> (forall b (~IsBadLuck(b))),(exists a ((IsSpilled(a) and IsUnderLadder(a)) and (IsOpenUmbrella(a) and IsBlackCat(a)))) -> (exists b (~IsBadLuck(b))),
41,0,faulty generalization,"A car makes less pollution than a bus. Therefore, cars are less of a pollution problem than buses"," ""A car makes less pollution than a bus."""," ""Cars are less of a pollution problem than buses."""," IsLessPolluting(a,b)"," IsLessPolluting(c,d)",[],[],"[(' A car', ' Cars'), (' bus', ' buses')]","IsLessPolluting(a,b)","IsLessPolluting(c,d)","(exists b (exists a (IsLessPolluting(a,b)))) -> (forall d (forall c (IsLessPolluting(c,d))))","(exists a (exists b (IsLessPolluting(a,b)))) -> (exists c (exists d (IsLessPolluting(c,d))))",Valid
42,0,appeal to emotion,"Preys on people’s emotions and sensitivities, can turn into a slippery slope"," ""Preys on people's emotions and sensitivities"""," ""Can turn into a slippery slope"""," IsPreyedOn(a),  IsSensitive(b)"," IsTurnedInto(c),  IsSlippery(d)",[],[],"[("" People's emotions"", ' Can turn into'), ("" people's sensitivities"", ' Can turn into'), (' slippery slope', "" people's sensitivities"")]",IsPreyedOn(a) and IsSensitive(b),IsTurnedInto(c) and IsSlippery(d),(forall b (exists b (exists a (IsPreyedOn(a) and IsSensitive(b))))) -> (exists d (forall c (IsTurnedInto(c) and IsSlippery(d)))),(exists a (exists b (IsPreyedOn(a) and IsSensitive(b)))) -> (exists c (exists d (IsTurnedInto(c) and IsSlippery(d)))),LF
43,0,fallacy of logic,"Bats are mammals. Bats can fly. Pigs are also mammals, therefore pigs can fly."," ""Bats can fly."""," ""Pigs can fly.""", IsFly(a), IsFly(a),[],"[(' fly', ' fly')]",[],IsFly(b),IsFly(c),(IsFly(b)) -> (IsFly(c)),(exists b (IsFly(b))) -> (exists c (IsFly(c))),Valid
44,0,intentional,The Geo Metro is a superior car because it averages 43 miles per gallon.," ""The Geo Metro averages 43 miles per gallon"""," ""The Geo Metro is a superior car""", IsAveraging(a), IsSuperior(a),"[(' IsAveraging(a)', ' IsSuperior(a)')]","[(' The Geo Metro', ' The Geo Metro')]",[],IsAveraging(a),IsSuperior(a),(IsAveraging(a) & (forall a ( IsAveraging(a) ->  IsSuperior(a)))) -> (IsSuperior(a)),(exists a (IsAveraging(a)) & (forall b ( IsAveraging(b) ->  IsSuperior(b)))) -> (exists a (IsSuperior(a))),Valid
45,0,fallacy of relevance,"“While you may have concerns about my votes about the environment, I can assure you that I am an open minded individual. What we should really discuss is my record on votes that expanded educational opportunities for all children."""," ""I am an open-minded individual."""," ""My record on votes that expanded educational opportunities for all children is good.""", IsOpenMinded(a)," IsMyRecord(a),   IsVote(b),   IsEducationalOpportunities(c),   IsChildren(d)",[],"[(' I', ' My record'), (' individual', ' My record')]","[(' I', ' votes'), (' I', ' educational opportunities'), (' I', ' children')]",IsOpenMinded(a),IsMyRecord(a) and IsVote(b) and IsEducationalOpportunities(c) and IsChildren(d),(exists a (IsOpenMinded(a))) -> (forall d (forall c (forall b (IsMyRecord(a) and IsVote(b) and IsEducationalOpportunities(c) and IsChildren(d))))),(exists a (IsOpenMinded(a))) -> (exists c (exists a (exists b (exists d (IsMyRecord(a) and IsVote(b) and IsEducationalOpportunities(c) and IsChildren(d)))))),LF
46,0,intentional,"Fish are the easiest pets to keep; they are inexpensive and require no maintenance at all. Plus, they are really pretty and soothing to watch."," ""Fish are easy to keep."""," ""They are inexpensive and require no maintenance.""", IsEasyToKeep(a)," IsInexpensive(c),  RequiresNoMaintenance(c)",[],[],"[(' maintenance', ' Fish'), (' easy to keep', ' They'), (' inexpensive', ' easy to keep'), (' maintenance', ' easy to keep')]",IsEasyToKeep(a),IsInexpensive(d) and RequiresNoMaintenance(e),(forall a (IsEasyToKeep(a))) -> (exists e (IsInexpensive(d) and RequiresNoMaintenance(e))),(exists a (IsEasyToKeep(a))) -> (exists e (exists d (IsInexpensive(d) and RequiresNoMaintenance(e)))),LF
47,0,intentional,I am only slightly obese.  That is perfectly normal here in America.," ""I am slightly obese."""," ""It is normal to be obese in America.""", IsSlightlyObese(a), IsNormal(d),[],[],"[(' I', ' America'), (' slightly obese', ' It'), (' slightly obese', ' America')]",IsSlightlyObese(b),IsNormal(d) and IsObese(d),(exists b (IsSlightlyObese(b))) -> (forall d (IsNormal(d) and IsObese(d))),(exists b (IsSlightlyObese(b))) -> (exists d (IsNormal(d) and IsObese(d))),LF
48,0,ad populum,"Most people think the world is flat, therefore it is flat."," ""Most people think the world is flat"""," ""The world is flat"""," IsThink(b),  IsFlat(a)", IsFlat(a),[],"[(' world', ' world')]","[(' flat', ' world')]",IsThink(b) and IsFlat(a),IsFlat(a),(IsThink(b) and IsFlat(a)) -> (IsFlat(a)),(exists b (exists a (IsThink(b) and IsFlat(a)))) -> (exists a (IsFlat(a))),Valid
49,0,appeal to emotion,You have to give me a passing grade. I spent 150 hours on that project and missed every party this quarter.," ""You have to give me a passing grade."""," ""I will get a passing grade."""," IsGivenTo(a,b),  HasPassingGrade(c)"," WillGet(d,e)",[],[],"[(' passing grade', ' You'), (' I', ' me'), (' passing grade', ' me'), (' passing grade.', ' I'), (' passing grade', ' passing grade.')]","IsGivenTo(a,b) and HasPassingGrade(c)","WillGet(d,e)","(forall c (exists c (forall b (forall a (IsGivenTo(a,b) and HasPassingGrade(c)))))) -> (forall d (exists d (exists e (WillGet(d,e)))))","(exists c (exists a (exists b (IsGivenTo(a,b) and HasPassingGrade(c))))) -> (exists e (exists d (WillGet(d,e))))",LF
50,0,ad populum,"I guess I should buy my 12 year old daughter an iPhone. Everyone at her school has one, and I want her to fit in with the other kids."," ""Everyone at her school has an iPhone."""," ""I should buy my daughter an iPhone."""," IsAt(b),  HasAnIPhone(a)"," ShouldBuy(a),  IsDaughter(c)",[],"[(' iPhone', ' iPhone')]","[(' daughter', ' her school')]",IsAt(b) and HasAnIPhone(a),ShouldBuy(a) and IsDaughter(c),(forall b (IsAt(b) and HasAnIPhone(a))) -> (exists c (ShouldBuy(a) and IsDaughter(c))),(exists b (exists a (IsAt(b) and HasAnIPhone(a)))) -> (exists c (exists a (ShouldBuy(a) and IsDaughter(c)))),LF
51,0,intentional,Kerry’s plan will raise taxes by at least $900 billion his first hundred days.," ""Kerry's plan will raise taxes by at least $900 billion."""," ""The first hundred days of Kerry's presidency will result in a tax increase of at least $900 billion."""," IsRaisedBy(c,a),  IsAtLeast(c,a)"," IsResultOf(d,e),  IsAtLeast(f,a)","[('  IsAtLeast(f,a)', ' IsRaisedBy(c,a)')]","[(' $900 billion', ' $900 billion')]","[("" Kerry's plan"", ' Kerry'), (' taxes', ' tax increase')]","IsRaisedBy(c,a) and IsAtLeast(c,a)","IsResultOf(d,e) and IsAtLeast(f,a)","(exists c (IsRaisedBy(c,a) and IsAtLeast(c,a)) & (forall c (forall f (forall a (  IsAtLeast(f,a) ->  IsRaisedBy(c,a)))))) -> (forall f (IsResultOf(d,e) and IsAtLeast(f,a)))","(exists c (exists a (IsRaisedBy(c,a) and IsAtLeast(c,a))) & (forall i (forall g (forall h (  IsAtLeast(g,h) ->  IsRaisedBy(i,h)))))) -> (exists e (exists f (exists a (exists d (IsResultOf(d,e) and IsAtLeast(f,a))))))",LF
52,0,fallacy of extension,"If you told a person, ""I think we should all stay inside to bend the curve of COVID-19"" and they replied, ""so I guess you want people to lose their jobs then,"" what logical fallacy are they using?"," ""Staying inside can help bend the curve of COVID-19."""," ""People losing their jobs is a necessary consequence of staying inside to bend the curve of COVID-19."""," IsStayingInside(b),  IsBendingCurve(a)"," IsLosingJobs(c),  IsNecessaryConsequence(d,a)",[],"[(' COVID-19', ' covid-19')]",[],IsStayingInside(b) and IsBendingCurve(a),"IsLosingJobs(c) and IsNecessaryConsequence(d,a)","(IsStayingInside(b) and IsBendingCurve(a)) -> (IsLosingJobs(c) and IsNecessaryConsequence(d,a))","(exists b (exists a (IsStayingInside(b) and IsBendingCurve(a)))) -> (exists c (exists a (exists d (IsLosingJobs(c) and IsNecessaryConsequence(d,a)))))",LF
53,0,appeal to emotion,"Power lines cause cancer. I met a little boy with cancer who lived just 20 miles from a power line who looked into my eyes and said, in his weak voice, “Please do whatever you can so that other kids won’t have to go through what I am going through.” I urge you to vote for this bill to tear down all power lines and replace them with monkeys on treadmills."," ""Power lines cause cancer."""," ""Tearing down all power lines and replacing them with monkeys on treadmills will prevent cancer."""," IsCausedBy(a,b)"," IsTornDown(a),  IsReplacedWith(a,c),  IsPreventedBy(c,d)",[],"[(' Power lines', ' power lines')]",[],"IsPowerLine(a) and IsCausedBy(a,b)","IsTornDown(a) and (IsReplacedWith(a,c) and IsPreventedBy(c,d))","(IsPowerLine(a) and IsCausedBy(a,b)) -> (IsTornDown(a) and (IsReplacedWith(a,c) and IsPreventedBy(c,d)))","(exists a (exists b (IsPowerLine(a) and IsCausedBy(a,b)))) -> (exists c (exists a (exists d (IsTornDown(a) and (IsReplacedWith(a,c) and IsPreventedBy(c,d))))))",LF
54,0,ad hominem,"Student: Hey, Professor Moore, we shouldn't have to read this book by Freud. Everyone knows he used cocaine."," ""Freud used cocaine."""," ""We shouldn't have to read this book by Freud."""," IsUsed(a,b)"," IsRead(a),  ShouldNotHaveToRead(c)",[],"[(' Freud', ' Freud')]",[],"IsUsed(a,b)",IsRead(a) and ShouldNotHaveToRead(c),"(IsUsed(a,b)) -> (IsRead(a) and ShouldNotHaveToRead(c))","(exists a (exists b (IsUsed(a,b)))) -> (exists c (exists a (IsRead(a) and ShouldNotHaveToRead(c))))",LF
55,0,false causality,"Our house was burglarized right after that new family moved in next door. Therefore, that new family must have been involved."," ""The new family next door was involved in the burglary."""," ""The new family must have been involved in the burglary.""", IsInvolvedInBurglary(a), MustHaveBeenInvolvedInBurglary(d),[],"[(' burglary', ' burglary')]","[(' The new family', ' New family'), (' next door', ' The new family')]",IsNextDoor(c) and IsInvolvedInBurglary(a),MustHaveBeenInvolvedInBurglary(d) and ~IsNewFamily(d),(exists c (IsNextDoor(c) and IsInvolvedInBurglary(a))) -> (forall d (MustHaveBeenInvolvedInBurglary(d) and ~IsNewFamily(d))),(exists c (exists a (IsNextDoor(c) and IsInvolvedInBurglary(a)))) -> (exists d (MustHaveBeenInvolvedInBurglary(d) and ~IsNewFamily(d))),LF
56,0,circular reasoning,"Witchcraft remains our most urgent spiritual problem because it threatens
our very souls."," ""Witchcraft threatens our souls."""," ""We must address the problem of witchcraft.""", IsThreatened(b)," MustAddress(c,d)",[],[],"[(' Witchcraft', ' problem of witchcraft')]",IsThreatened(b),"MustAddress(c,d) and IsAddressing(d)","(IsThreatened(b)) -> (MustAddress(c,d) and IsAddressing(d))","(exists b (IsThreatened(b))) -> (exists c (exists d (MustAddress(c,d) and IsAddressing(d))))",LF
57,0,false dilemma,"Senator Jill: ""We'll have to cut education funding this year.""
Senator Bill: ""Why?""
Senator Jill: ""Well, either we cut the social programs or we live with a huge deficit and we can't live with the deficit."""," ""Education funding will be cut."""," ""We can't afford education."""," IsCut(a,b)"," IsAfforded(c,a)",[],"[(' Education', ' education')]","[(' We', ' funding'), (' funding', ' education')]","IsCut(a,b)","IsAfforded(c,a)","(forall b (IsCut(a,b))) -> (forall a (exists c (IsAfforded(c,a))))","(exists a (exists b (IsCut(a,b)))) -> (exists c (exists a (IsAfforded(c,a))))",LF
58,0,appeal to emotion,"""You'll make the right decision because you have something that not many people do: you have heart.""?"," ""You have heart."""," ""You will make the right decision."""," IsHaving(a,b)"," WillMake(a,c)","[(' WillMake(a,c)', ' IsHaving(a,b)')]","[(' You', ' You')]","[(' decision', ' You'), (' heart', ' You'), (' heart', ' decision')]","IsHaving(a,b)","WillMake(a,c)","(exists b (forall a (IsHaving(a,b))) & (forall c (forall a (forall b ( WillMake(a,c) ->  IsHaving(a,b)))))) -> (forall c (forall a (exists c (WillMake(a,c)))))","(exists a (exists b (IsHaving(a,b))) & (forall e (forall f (forall d ( WillMake(d,e) ->  IsHaving(d,f)))))) -> (exists c (exists a (WillMake(a,c))))",LF
59,0,faulty generalization,Christine has a terrible experience with a boyfriend. She decides that all boys are mean. This is an example of which logical fallacy?," ""All boys are mean."""," ""Christine's experience with her boyfriend means that all boys are mean.""", IsMean(a)," IsExperiencedWith(a,c),  IsMean(d)",[],"[(' mean', ' Christine')]",[],AllBoys(b) and IsMean(a),"IsExperiencedWith(a,c) and IsMean(d)","(AllBoys(b) and IsMean(a)) -> (IsExperiencedWith(a,c) and IsMean(d))","(exists b (exists a (AllBoys(b) and IsMean(a)))) -> (exists c (exists a (exists d (IsExperiencedWith(a,c) and IsMean(d)))))",LF
60,0,circular reasoning,Smoking pot is against the law because it's wrong; I know it's wrong because it is against the law.," ""Smoking pot is against the law."""," ""It's wrong.""", IsAgainstLaw(a), IsWrong(d),[],[],"[(' wrong', ' law')]",IsAgainstLaw(b),~IsWrong(c),(IsAgainstLaw(b)) -> (~IsWrong(c)),(exists b (IsAgainstLaw(b))) -> (exists c (~IsWrong(c))),LF
61,0,circular reasoning,"""You can't give me a D because I'm an A student!""",,,,,[],[],[],,,() -> (),() -> (),
62,0,fallacy of logic,People who buy stocks are no different from people who bet on horse racing. They both risk their money with little chance of making a big profit.," ""People who buy stocks are no different from people who bet on horse racing."""," ""There is little chance of making a big profit when buying stocks or betting on horse racing."""," IsBuy(a),  IsBet(b),  IsHorseRacing(c)", IsLittle(d),[],[],"[(' People', ''), (' horse racing', '')]",IsBuy(a) and IsBet(b) and IsHorseRacing(c),IsLittle(d) and ~MakingABigProfit(d),(exists c (exists a (IsBuy(a) and IsBet(b) and IsHorseRacing(c)))) -> (forall d (IsLittle(d) and ~MakingABigProfit(d))),(exists c (exists a (exists b (IsBuy(a) and IsBet(b) and IsHorseRacing(c))))) -> (exists d (IsLittle(d) and ~MakingABigProfit(d))),LF
63,0,appeal to emotion,"I cannot get a job because the public education system failed me;  I have to steal to  survive.  It is society's fault, not mine."," ""The public education system failed me."""," ""I have to steal to survive.""", IsFailedBy(a)," IsStealing(b),  IsSurviving(d)",[],[],[],IsFailedBy(a),IsStealing(b) and IsSurviving(d),(IsFailedBy(a)) -> (IsStealing(b) and IsSurviving(d)),(exists a (IsFailedBy(a))) -> (exists b (exists d (IsStealing(b) and IsSurviving(d)))),LF
64,0,faulty generalization,"Trump presents a dark image of America if Clinton is elected, with “Syrian refugees flooding in, illegal immigrants convicted of crimes staying.”"," ""Syrian refugees flood in, illegal immigrants convicted of crimes stay"""," ""Trump presents a dark image of America if Clinton is elected"""," IsSyrianRefugee(a),  HasCommittedCrime(b)"," IsPresentedBy(d),  IsDarkImage(e)",[],[],"[(' crimes', ' America')]",IsSyrianRefugee(a) and HasCommittedCrime(b),IsPresentedBy(d) and IsDarkImage(e),(IsSyrianRefugee(a) and HasCommittedCrime(b)) -> (IsPresentedBy(d) and IsDarkImage(e)),(exists a (exists b (IsSyrianRefugee(a) and HasCommittedCrime(b)))) -> (exists e (exists d (IsPresentedBy(d) and IsDarkImage(e)))),LF
65,0,ad hominem,"Charlie: Fast food is filled with salt, fat, and added sugars. We need better regulation of the industry.
Bob: That my be, but you're such a hypocrite! I saw you devour a Triple-Baconator, super-sized fries, and 64oz of soda yesterday!"," ""Fast food is filled with salt, fat, and added sugars."""," ""Charlie is a hypocrite."""," IsFilledWith(a,b),  IsSalt(b),  IsFat(c),  IsAddedSugars(d)", IsHypocrite(e),[],[],[],"IsFilledWith(a,b) and (IsSalt(b) and IsFat(c)) or (IsAddedSugars(d) and NotIsSalt(b) and NotIsFat(c))",IsHypocrite(e),"(IsFilledWith(a,b) and (IsSalt(b) and IsFat(c)) or (IsAddedSugars(d) and NotIsSalt(b) and NotIsFat(c))) -> (IsHypocrite(e))","(exists c (exists a (exists b (exists d (IsFilledWith(a,b) and (IsSalt(b) and IsFat(c)) or (IsAddedSugars(d) and NotIsSalt(b) and NotIsFat(c))))))) -> (exists e (IsHypocrite(e)))",LF
66,0,faulty generalization,Christine has a terrible experience with a boyfriend. She decides that all boys are mean.," ""Christine had a terrible experience with a boyfriend."""," ""All boys are mean."""," IsHadExperience(a),  IsBoyfriend(b)", IsMean(d),[],[],"[(' mean', ' Christine'), (' boyfriend', ' All boys')]",IsHadExperience(a) and IsBoyfriend(b),IsMean(c),(exists b (IsHadExperience(a) and IsBoyfriend(b))) -> (forall c (IsMean(c))),(exists a (exists b (IsHadExperience(a) and IsBoyfriend(b)))) -> (exists c (IsMean(c))),LF
67,0,intentional,"Barbara believes the marketing agency's office is haunted. The cleaning crew once said they heard a other-worldly noise late at night. Since no one could prove that it wasn't a ghost, the office must be haunted."," ""The marketing agency's office is haunted."""," ""No one can prove that it isn't a ghost.""", IsHaunted(a)," IsProven(d),  IsGhost(a)",[],"[(' ghost', ' ghost')]","[(' it', ' office')]",IsHaunted(a) and IsInOffice(c),~IsProven(d) and IsGhost(a),(IsHaunted(a) and IsInOffice(c)) -> (~IsProven(d) and IsGhost(a)),(exists c (exists a (IsHaunted(a) and IsInOffice(c)))) -> (exists a (exists d (~IsProven(d) and IsGhost(a)))),LF
68,0,ad populum,"I am voting for Pepitone for President because the rest of my family is voting for her, and I don't want to be the only one not doing so."," ""Pepitone is voting for President."""," ""I don't want to be the only one not voting for Pepitone for President."""," IsVoting(a),  IsPresident(b)", IsNotVoting(c),[],[],[],IsVoting(a) and IsPresident(b),IsNotVoting(c) and Pepitone(c),(IsVoting(a) and IsPresident(b)) -> (IsNotVoting(c) and Pepitone(c)),(exists a (exists b (IsVoting(a) and IsPresident(b)))) -> (exists c (IsNotVoting(c) and Pepitone(c))),LF
69,0,fallacy of credibility,"“I admire the president for being a good role model.” REPLY: “But the New York Times says he’s a lousy role model, so you’re wrong.”"," ""The president is a good role model."""," ""The New York Times is wrong.""", IsGoodRoleModel(a), IsWrong(c),[],[],"[(' New York Times', ' good role model')]",IsGoodRoleModel(a),~IsWrong(c),(IsGoodRoleModel(a)) -> (~IsWrong(c)),(exists a (IsGoodRoleModel(a))) -> (exists c (~IsWrong(c))),LF
70,0,faulty generalization,The numbers on gun violence speak for themselves. We should ban guns in the country!,,,,,[],[],[],,,() -> (),() -> (),
71,0,false causality,"“The temperature has dropped this morning, and I also have a headache. Therefore, the cold weather must be causing my headache. “"," ""The cold weather is causing my headache."""," ""I have a headache because of the cold weather."""," IsCold(a),  HasHeadache(b)"," IsHavingHeadache(c),  IsCausedBy(d,a)",[],"[(' Cold weather', ' cold weather')]","[(' Cold weather', ' I'), (' I', ' my headache'), (' headache', ' my headache'), (' cold weather', ' my headache')]",IsCold(a) and HasHeadache(b),"IsHavingHeadache(c) and IsCausedBy(d,a)","(forall b (exists a (IsCold(a) and HasHeadache(b)))) -> (exists a (exists d (forall c (IsHavingHeadache(c) and IsCausedBy(d,a)))))","(exists a (exists b (IsCold(a) and HasHeadache(b)))) -> (exists c (exists a (exists d (IsHavingHeadache(c) and IsCausedBy(d,a)))))",LF
72,0,ad hominem,"My teacher says the Earth is flat, so it definitely is flat."," ""The Earth is flat"""," ""My teacher is correct""", IsFlat(a), IsCorrect(b),[],[],"[(' correct', ' Earth')]",~IsFlat(a),IsCorrect(b),(~IsFlat(a)) -> (IsCorrect(b)),(exists a (~IsFlat(a))) -> (exists b (IsCorrect(b))),LF
73,0,equivocation,"The fallacy of equivocation occurs when a key term or phrase in an argument is used in an ambiguous way, with one meaning in one portion of the argument and then another meaning in another portion of the argument."," ""The fallacy of equivocation occurs when a key term or phrase is used in an ambiguous way."""," ""The argument is fallacious."""," IsUsedAmbiguously(a),  IsKeyTerm(a),  IsUsedInEquivocation(c)", IsFallacious(a),[],"[(' key term', ' The argument')]","[(' phrase', ' The argument'), (' equivocation', ' The argument')]",IsUsedAmbiguously(a) and IsKeyTerm(a) and IsUsedInEquivocation(c),IsFallacious(a),(exists c (IsUsedAmbiguously(a) and IsKeyTerm(a) and IsUsedInEquivocation(c))) -> (forall a (IsFallacious(a))),(exists c (exists a (IsUsedAmbiguously(a) and IsKeyTerm(a) and IsUsedInEquivocation(c)))) -> (exists a (IsFallacious(a))),LF
74,0,faulty generalization,When you have too little or unrepresentative data to make claim.," ""Too little or unrepresentative data"""," ""You cannot make a claim"""," IsTooLittle(a),  IsUnrepresentative(b)"," IsMakeClaim(c),  IsClaim(d)",[],[],"[(' claim', ' unrepresentative data')]",IsTooLittle(a) or IsUnrepresentative(b),IsMakeClaim(c) and ~IsClaim(d),(forall b (IsTooLittle(a) or IsUnrepresentative(b))) -> (exists d (IsMakeClaim(c) and ~IsClaim(d))),(exists a (exists b (IsTooLittle(a) or IsUnrepresentative(b)))) -> (exists c (exists d (IsMakeClaim(c) and ~IsClaim(d)))),LF
75,0,ad populum,"The majority of people believe advertisers should spend more money on billboards, so billboards are objectively the best form of advertisement."," ""Majority of people believe billboards are the best form of advertisement."""," ""Billboards are objectively the best form of advertisement."""," IsInMajority(c),  IsBestFormOfAdvertisement(a)", IsObjectivelyTheBestFormOfAdvertisement(a),[],"[(' billboards', ' Billboards'), (' advertisement', ' advertisement')]",[],IsInMajority(c) and IsBestFormOfAdvertisement(a),IsObjectivelyTheBestFormOfAdvertisement(a),(IsInMajority(c) and IsBestFormOfAdvertisement(a)) -> (IsObjectivelyTheBestFormOfAdvertisement(a)),(exists c (exists a (IsInMajority(c) and IsBestFormOfAdvertisement(a)))) -> (exists a (IsObjectivelyTheBestFormOfAdvertisement(a))),LF
76,0,faulty generalization,"If we ban Hummers because they are bad for the environment, eventually the government will ban all cars, so we should not ban Hummers."," ""Banning Hummers is bad for the environment."""," ""The government will eventually ban all cars."""," IsBanned(a),  IsBadFor(b)"," WillBeBanned(c),  IsAll(d)",[],[],[],IsBanned(a) and IsBadFor(b),WillBeBanned(c) and IsAll(d),(IsBanned(a) and IsBadFor(b)) -> (WillBeBanned(c) and IsAll(d)),(exists a (exists b (IsBanned(a) and IsBadFor(b)))) -> (exists c (exists d (WillBeBanned(c) and IsAll(d)))),LF
77,0,ad hominem,"My opponent raised a good point, but can we trust him? I mean he just moved to town only 5 months ago, how much could he really know?"," ""My opponent raised a good point."""," ""We can't trust him.""", IsRaisedGoodPoint(a), IsTrusted(b),[],[],"[(' Him', ' My opponent')]",IsRaisedGoodPoint(a),~IsTrusted(b),(forall a (IsRaisedGoodPoint(a))) -> (exists b (~IsTrusted(b))),(exists a (IsRaisedGoodPoint(a))) -> (exists b (~IsTrusted(b))),LF
78,0,false dilemma,"Either you can save your money to buy a new car for yourself, or you can just take an Uber around for the rest of your life."," ""You can save money to buy a new car."""," ""You can take an Uber around for the rest of your life."""," IsSaved(a),  IsToBuy(b)"," IsTaken(a,c),  IsFor(a,d)",[],"[(' You', ' You')]","[(' new car', ' You')]",IsSaved(a) and IsToBuy(b),"IsTaken(a,c) and IsFor(a,d)","(exists b (IsSaved(a) and IsToBuy(b))) -> (forall a (IsTaken(a,c) and IsFor(a,d)))","(exists a (exists b (IsSaved(a) and IsToBuy(b)))) -> (exists c (exists a (exists d (IsTaken(a,c) and IsFor(a,d)))))",LF
79,0,false causality,"Matthieu was the only player on the team who didn't grow a playoff beard, and thus he ended up getting injured.", Matthieu didn't grow a playoff beard., Matthieu got injured., DidNotGrow(b), GotInjured(a),"[(' GotInjured(a)', ' DidNotGrow(b)')]","[(' Matthieu', ' Matthieu')]",[],~DidNotGrow(b),GotInjured(a),(~DidNotGrow(b) & (forall a (forall b ( GotInjured(a) ->  DidNotGrow(b))))) -> (GotInjured(a)),(exists b (~DidNotGrow(b)) & (forall c (forall d ( GotInjured(c) ->  DidNotGrow(d))))) -> (exists a (GotInjured(a))),LF
80,0,intentional,"John: Members of the UbaTuba White Men's Club are upstanding citizens of the community.
Marvin: Then why are there so many of these members in jail?
John: They were never true UbaTuba White Men's Club members.
Marvin: What’s a true UbaTuba White Men's Club member?
John: Those who don't go to jail.
"," ""Members of the UbaTuba White Men's Club are upstanding citizens of the community."""," ""Those who don't go to jail are true UbaTuba White Men's Club members."""," IsUbaTubaWhiteMen'sClub(a),  AreUpstandingCitizens(b)"," IsTrueUbaTubaWhiteMen'sClubMembers(d),   IsNotGoToJail(e)",[],"[("" UbaTuba White Men's Club"", "" UbaTuba White Men's Club"")]","[(' Those', ' members'), (' Those', ' community'), ("" UbaTuba White Men's Club"", ' community')]",IsUbaTubaWhiteMen'sClub(a) and AreUpstandingCitizens(b),IsTrueUbaTubaWhiteMen'sClubMembers(d) and ~IsGoToJail(e),(forall b (IsUbaTubaWhiteMen'sClub(a) and AreUpstandingCitizens(b))) -> (exists d (IsTrueUbaTubaWhiteMen'sClubMembers(d) and ~IsGoToJail(e))),(exists a (exists b (IsUbaTubaWhiteMen'sClub(a) and AreUpstandingCitizens(b)))) -> (exists e (exists d (IsTrueUbaTubaWhiteMen'sClubMembers(d) and ~IsGoToJail(e)))),
81,0,faulty generalization,"""Animal experimentation reduces our respect for life. If we don't respect life, we are likely to be more and more tolerant of violent acts like war and murder. Soon our society will become a battlefield in which everyone constantly fears for their lives. It will be the end of civilization. To prevent this terrible consequence, we should make animal experimentation illegal right now."""," ""Animal experimentation reduces our respect for life."""," ""Our society will become a battlefield and civilization will end if we don't make animal experimentation illegal.""", IsRespected(b)," IsBecomeBattlefield(c),  IsIllegal(a),  IsEnded(d)",[],"[(' Animal experimentation', ' animal experimentation')]","[(' animal experimentation', ' life'), (' life', ' civilization'), (' life', ' society')]",IsExperimentedOn(a) and ~IsRespected(b),IsBecomeBattlefield(c) and (IsIllegal(a) and IsEnded(d)),(forall b (IsExperimentedOn(a) and ~IsRespected(b))) -> (forall d (exists a (IsBecomeBattlefield(c) and (IsIllegal(a) and IsEnded(d))))),(exists a (exists b (IsExperimentedOn(a) and ~IsRespected(b)))) -> (exists c (exists a (exists d (IsBecomeBattlefield(c) and (IsIllegal(a) and IsEnded(d)))))),LF
82,0,false causality,You know Jane Fonda's exercise videos must be worth the money. Look at the great shape she's in.," ""Jane Fonda's exercise videos are worth the money."""," ""Jane Fonda is in great shape."""," IsWorthTheMoney(b),  IsJaneFonda(a)", IsInGreatShape(a),"[('  IsJaneFonda(a)', ' IsInGreatShape(a)'), (' IsInGreatShape(a)', '  IsJaneFonda(a)')]","[(' Jane Fonda', ' Jane Fonda')]",[],IsWorthTheMoney(b) and IsJaneFonda(a),IsInGreatShape(a),(IsWorthTheMoney(b) and IsJaneFonda(a) & (forall a (  IsJaneFonda(a) ->  IsInGreatShape(a))) & (forall a ( IsInGreatShape(a) ->   IsJaneFonda(a)))) -> (IsInGreatShape(a)),(exists b (exists a (IsWorthTheMoney(b) and IsJaneFonda(a))) & (forall d (  IsJaneFonda(d) ->  IsInGreatShape(d))) & (forall e ( IsInGreatShape(e) ->   IsJaneFonda(e)))) -> (exists a (IsInGreatShape(a))),Valid
83,0,faulty generalization,"Asians make lousy athletes, but do well at the Math Olympiad.",,,,,[],[],[],,,() -> (),() -> (),
84,0,false dilemma,"“Caldwell Hall is in bad shape. Either we tear it down and put up a new building, or we continue to risk students’ safety. Obviously we shouldn’t risk anyone’s safety, so we must tear the building down.”"," ""Caldwell Hall is in bad shape."""," ""We must tear the building down.""", IsInBadShape(a), IsTornDown(d),[],"[(' Caldwell Hall', ' must')]","[(' Caldwell Hall', ' building')]",IsInBadShape(a),(IsTornDown(d) and IsMust(a)) and (IsBuilding(b) and IsDown(d)),(exists a (IsInBadShape(a))) -> (forall b ((IsTornDown(d) and IsMust(a)) and (IsBuilding(b) and IsDown(d)))),(exists a (IsInBadShape(a))) -> (exists a (exists b (exists d ((IsTornDown(d) and IsMust(a)) and (IsBuilding(b) and IsDown(d)))))),
85,0,faulty generalization,Did you really vote for Donald as class treasurer? Didn't you hear that his uncle was imprisoned for embezzling $1.5 million?," ""Donald's uncle was imprisoned for embezzling $1.5 million."""," ""You voted for Donald as class treasurer."""," IsImprisoned(b),  EmbezzledMoney(c)"," IsVotedFor(d,a)",[],"[(' Donald', ' Donald')]","[(' uncle', ' You')]",IsImprisoned(b) and EmbezzledMoney(c),"IsVotedFor(d,a)","(exists b (IsImprisoned(b) and EmbezzledMoney(c))) -> (forall d (IsVotedFor(d,a)))","(exists c (exists b (IsImprisoned(b) and EmbezzledMoney(c)))) -> (exists a (exists d (IsVotedFor(d,a))))",LF
86,0,fallacy of logic,"If the ozone layer is destroyed, many people will get cancer and suffer from other illnesses.  The ozone layer is being protected, not destroyed.  So, many people will be spared the pain of cancer and other illnesses."," ""The ozone layer is being protected."""," ""Many people will be spared the pain of cancer and other illnesses.""", IsProtected(a), IsSpared(b),"[(' IsProtected(a)', ' IsSpared(b)')]",[],[],IsProtected(a),Many(b) and IsSpared(b),(IsProtected(a) & (forall a (forall b ( IsProtected(a) ->  IsSpared(b))))) -> (Many(b) and IsSpared(b)),(exists a (IsProtected(a)) & (forall c (forall d ( IsProtected(c) ->  IsSpared(d))))) -> (exists b (Many(b) and IsSpared(b))),LF
87,0,faulty generalization,"Broccoli has significantly less fat than the leading candy bar! Plus, it's nowhere near as hot as Hot Cheetos!"," ""Broccoli has less fat than the leading candy bar."""," ""Hot Cheetos are hot."""," IsLessFat(a,b)", IsHot(c),[],[],"[(' Hot Cheetos', ' leading candy bar')]","IsLessFat(a,b)",IsHot(c),"(forall b (IsLessFat(a,b))) -> (exists c (IsHot(c)))","(exists a (exists b (IsLessFat(a,b)))) -> (exists c (IsHot(c)))",LF
88,0,fallacy of relevance,You're complaining because you have to walk to school? I used to have to give my parents my entire paycheck.," ""You have to walk to school."""," ""You are complaining too much."""," IsWalkedTo(a,b)"," IsComplainingTooMuch(a,c)",[],"[(' You', ' You')]","[(' complaining', ' You')]","IsWalkedTo(a,b)","IsComplainingTooMuch(a,c)","(forall a (IsWalkedTo(a,b))) -> (exists c (IsComplainingTooMuch(a,c)))","(exists a (exists b (IsWalkedTo(a,b)))) -> (exists c (exists a (IsComplainingTooMuch(a,c))))",LF
89,0,fallacy of extension,Robot 2 (Blue) has been refuting all of Robot 1's (Orange) arguments. Robot 1 launches the above counterargument. What is this fallacy?, Robot 2 (Blue) has been refuting all of Robot 1's (Orange) arguments., This is an ad hominem fallacy.," IsBlue(a),  HasBeenRefuting(a)", IsAdHominemFallacy(c),[],[],"[(' This', ''), (' ad hominem fallacy', '')]",IsBlue(a) and HasBeenRefuting(a),"IsTouching(a,b) and IsAdHominemFallacy(c)","(forall a (IsBlue(a) and HasBeenRefuting(a))) -> (exists c (exists b (IsTouching(a,b) and IsAdHominemFallacy(c))))","(exists a (IsBlue(a) and HasBeenRefuting(a))) -> (exists c (exists a (exists b (IsTouching(a,b) and IsAdHominemFallacy(c)))))",LF
90,0,ad hominem,Personally attacking someone to shift attention away from your views is," ""Personally attacking someone is a form of bullying."""," ""Attacking someone is bullying.""", IsFormOfBullying(b), IsFormOfBullying(a),[],"[(' someone', ' someone')]","[(' bullying', ' Personally attacking someone'), (' someone', ' bullying')]",IsPersonallyAttacking(b) and IsFormOfBullying(a),IsAttacking(a) and IsBullying(c),(exists a (forall b (IsPersonallyAttacking(b) and IsFormOfBullying(a)))) -> (forall c (exists c (IsAttacking(a) and IsBullying(c)))),(exists b (exists a (IsPersonallyAttacking(b) and IsFormOfBullying(a)))) -> (exists c (exists a (IsAttacking(a) and IsBullying(c)))),LF
91,0,ad hominem,"""She's such a mean teacher and person – that's why she wouldn't raise my grade ONE percent!"""," ""She's a mean teacher and person."""," ""She wouldn't raise your grade one percent."""," IsMean(a),  IsTeacher(b),  IsPerson(c)", IsRaise(d),[],"[(' She', ' She')]","[(' She', ' teacher'), (' your grade', ' teacher')]",IsMean(a) and IsTeacher(b) and IsPerson(c),IsRaise(d) and ~OnePercent(d),(forall b (IsMean(a) and IsTeacher(b) and IsPerson(c))) -> (exists d (IsRaise(d) and ~OnePercent(d))),(exists c (exists a (exists b (IsMean(a) and IsTeacher(b) and IsPerson(c))))) -> (exists d (IsRaise(d) and ~OnePercent(d))),LF
92,0,appeal to emotion,"If you don't buy the black pencils, you will get made fun of. You will not be chosen for group projects."," ""Buying the black pencils will prevent getting made fun of."""," ""Not buying the black pencils will result in not being chosen for group projects."""," IsBuyed(a),  IsMadeFunOf(b)"," IsNotBuyed(a),  IsChosenForGroupProjects(c)",[],"[(' black pencils', ' black pencils')]",[],IsBuyed(a) and ~IsMadeFunOf(b),IsNotBuyed(a) and ~IsChosenForGroupProjects(c),(IsBuyed(a) and ~IsMadeFunOf(b)) -> (IsNotBuyed(a) and ~IsChosenForGroupProjects(c)),(exists a (exists b (IsBuyed(a) and ~IsMadeFunOf(b)))) -> (exists c (exists a (IsNotBuyed(a) and ~IsChosenForGroupProjects(c)))),LF
93,0,faulty generalization,"Jeff's mom is concerned when she finds out that he skipped class one day. She tells him that she is concerned that since he skipped one class, he will start skipping more frequently. Then he will drop out altogether, never graduate or get into college, and end up unemployed and living at home for the rest of his life. What type of fallacy has Jeff's mom committed?", Jeff's mom is concerned that he will start skipping more classes.," Jeff will drop out of school, never graduate or get into college, and end up unemployed and living at home for the rest of his life."," IsConcerned(b),  IsSkipping(a)"," IsDropOut(a),  IsUnemployed(a),  IsLivingAtHome(a)",[],"[(' Jeff', ' Jeff')]","[(' home', "" Jeff's mom""), (' school', ' classes'), (' classes', ' college'), (' home', ' classes')]",IsConcerned(b) and IsSkipping(a),IsDropOut(a) and (IsUnemployed(a) and IsLivingAtHome(a)),(IsConcerned(b) and IsSkipping(a)) -> (IsDropOut(a) and (IsUnemployed(a) and IsLivingAtHome(a))),(exists b (exists a (IsConcerned(b) and IsSkipping(a)))) -> (exists a (IsDropOut(a) and (IsUnemployed(a) and IsLivingAtHome(a)))),LF
94,0,ad hominem,"How can you tell me I should exercise to lose weight? All you do is sit behind a desk all day. I've never seen you do a lick of exercise.

Identify the logical fallacy commited in this argument.",,,,,[],[],[],,,() -> (),() -> (),
95,0,fallacy of logic,"""We both like music, so we should get married."""," ""We both like music"""," ""We should get married"""," IsLikedBy(a,b)"," ShouldGetMarried(a,c)",[],"[(' We', ' We')]","[(' married', ' We'), (' We', ' music')]","IsLikedBy(a,b)","ShouldGetMarried(a,c)","(forall b (forall a (IsLikedBy(a,b)))) -> (exists a (exists c (ShouldGetMarried(a,c))))","(exists a (exists b (IsLikedBy(a,b)))) -> (exists c (exists a (ShouldGetMarried(a,c))))",LF
96,0,ad hominem,"Brandon: We should have tastier lunches!
Jaylen: Don't listen to him! He's a terrible person! I saw him trip another student and steal his lunch money!"," ""Brandon wants tastier lunches."""," ""Brandon is a terrible person."""," IsWanted(a,b)", IsTerriblePerson(a),[],"[(' Brandon', ' Brandon')]",[],"IsWanted(a,b)",IsTerriblePerson(a),"(IsWanted(a,b)) -> (IsTerriblePerson(a))","(exists a (exists b (IsWanted(a,b)))) -> (exists a (IsTerriblePerson(a)))",LF
97,0,ad hominem,Of course Marx' theories about the ideal society are bunk. The guy spent all his time in the library.," ""Marx' theories are bunk."""," ""The guy spent all his time in the library.""", IsBunk(b)," IsSpentAllTime(c),  IsInLibrary(d)",[],[],[],~IsBunk(a),IsSpentAllTime(c) and IsInLibrary(d),(~IsBunk(a)) -> (IsSpentAllTime(c) and IsInLibrary(d)),(exists a (~IsBunk(a))) -> (exists c (exists d (IsSpentAllTime(c) and IsInLibrary(d)))),LF
98,0,fallacy of relevance,"I'm tailgating her, because she cut me off!"," ""She cut me off"""," ""I'm tailgating her""", IsCutOff(b), IsTailgating(c),[],[],[],IsShe(a) and IsCutOff(b),IsTailgating(c),(IsShe(a) and IsCutOff(b)) -> (IsTailgating(c)),(exists a (exists b (IsShe(a) and IsCutOff(b)))) -> (exists c (IsTailgating(c))),LF
99,0,faulty generalization,President Petutti ordered a military strike that killed many civilians. He is no different than any other mass murder and he belongs in prison!," ""President Petutti ordered a military strike that killed many civilians."""," ""President Petutti belongs in prison."""," IsOrdered(a),  KilledManyCivilians(b)", BelongsInPrison(a),[],"[(' President Petutti', ' President Petutti')]",[],IsOrdered(a) and KilledManyCivilians(b),BelongsInPrison(a),(IsOrdered(a) and KilledManyCivilians(b)) -> (BelongsInPrison(a)),(exists a (exists b (IsOrdered(a) and KilledManyCivilians(b)))) -> (exists a (BelongsInPrison(a))),LF
100,1,,"Coach talks with football player, other players and crowd in background. Thus, a football coach talks with his player in front of the team and the crowd."," ""Coach talks with football player."""," ""A football coach talks with his player in front of the team and the crowd."""," IsTalkWith(a,b)"," IsTalkWith(a,b),  IsInFrontOfTeam(c),  IsInCrowd(c)",[],[],"[(' Coach', '')]","IsTalkWith(a,b)","IsTalkWith(a,b) and IsInFrontOfTeam(c) and IsInCrowd(c)","(exists a (IsTalkWith(a,b))) -> (forall c (IsTalkWith(a,b) and IsInFrontOfTeam(c) and IsInCrowd(c)))","(exists a (exists b (IsTalkWith(a,b)))) -> (exists c (exists a (exists b (IsTalkWith(a,b) and IsInFrontOfTeam(c) and IsInCrowd(c)))))",LF
101,1,,"Two men watching one man make a golf putt on the set of Sports Center. As a consequence, people watching sports."," ""Two men watched one man make a golf putt on the set of Sports Center."""," ""People watch sports."""," IsWatched(a),  IsOnSportsCenter(a)", IsWatched(b),[],[],"[(' People', '')]",IsWatched(a) and IsOnSportsCenter(a),"IsWatched(b) and (IsWatching(b,c) or IsWatched(b))","(forall a (IsWatched(a) and IsOnSportsCenter(a))) -> (exists b (IsWatched(b) and (IsWatching(b,c) or IsWatched(b))))","(exists a (IsWatched(a) and IsOnSportsCenter(a))) -> (exists c (exists b (IsWatched(b) and (IsWatching(b,c) or IsWatched(b)))))",Valid
102,1,,"Six women wait to use a port-o-john in a field. Thus, women are outside."," ""Six women are outside."""," ""Women wait to use a port-o-john in a field.""", IsOutside(a)," IsWaiting(c),  IsInField(c)","[(' IsOutside(a)', ' IsWaiting(c)'), (' IsWaiting(c)', ' IsOutside(a)')]",[],"[(' Six women', ''), (' outside', '')]",IsOutside(b),IsWaiting(c) and IsInField(c),(exists b (IsOutside(b)) & (forall c (forall a ( IsOutside(a) ->  IsWaiting(c)))) & (forall c (forall a ( IsWaiting(c) ->  IsOutside(a))))) -> (forall c (IsWaiting(c) and IsInField(c))),(exists b (IsOutside(b)) & (forall e (forall d ( IsOutside(d) ->  IsWaiting(e)))) & (forall f (forall g ( IsWaiting(f) ->  IsOutside(g))))) -> (exists c (IsWaiting(c) and IsInField(c))),LF
103,1,,Women wearing a black top and glasses speaking into a blue tipped microphone with another woman beside her writing. It follows that one woman speaking into a microphone while a second woman writes beside her.," ""Women wearing a black top and glasses speaking into a blue tipped microphone with another woman beside her."""," ""One woman speaking into a microphone while a second woman writes beside her."""," IsWearingBlackTop(a),   IsWearingGlasses(c),   IsSpeakingIntoBlueTippedMicrophone(d),   IsBesideAnotherWoman(e)"," IsSpeakingIntoMicrophone(f),   IsWritingBesideHer(g)","[('   IsBesideAnotherWoman(e)', ' IsSpeakingIntoMicrophone(f)'), (' IsSpeakingIntoMicrophone(f)', '   IsBesideAnotherWoman(e)')]",[],"[(' One woman', ' Women'), (' second woman', ' Women'), (' beside her.', ' Women'), (' black top', ' beside her.'), (' One woman', ' another woman'), (' second woman', ' another woman'), (' beside her.', ' another woman')]",(IsWearingBlackTop(a) and IsWearingGlasses(c)) and (IsSpeakingIntoBlueTippedMicrophone(d) and IsBesideAnotherWoman(e)),IsSpeakingIntoMicrophone(f) and IsWritingBesideHer(g),(forall e (forall a ((IsWearingBlackTop(a) and IsWearingGlasses(c)) and (IsSpeakingIntoBlueTippedMicrophone(d) and IsBesideAnotherWoman(e)))) & (forall e (forall f (   IsBesideAnotherWoman(e) ->  IsSpeakingIntoMicrophone(f)))) & (forall e (forall f ( IsSpeakingIntoMicrophone(f) ->    IsBesideAnotherWoman(e))))) -> (exists g (exists f (IsSpeakingIntoMicrophone(f) and IsWritingBesideHer(g)))),(exists c (exists e (exists a (exists d ((IsWearingBlackTop(a) and IsWearingGlasses(c)) and (IsSpeakingIntoBlueTippedMicrophone(d) and IsBesideAnotherWoman(e)))))) & (forall k (forall j (   IsBesideAnotherWoman(j) ->  IsSpeakingIntoMicrophone(k)))) & (forall l (forall m ( IsSpeakingIntoMicrophone(l) ->    IsBesideAnotherWoman(m))))) -> (exists f (exists g (IsSpeakingIntoMicrophone(f) and IsWritingBesideHer(g)))),
104,1,,"One tan girl with a wool hat is running and leaning over an object, while another person in a wool hat is sitting on the ground. Therefore, a tan girl runs leans over an object."," ""A tan girl runs and leans over an object."""," ""A person in a wool hat sits on the ground."""," IsTan(a),  Runs(a),  LeansOver(b)"," IsInWoolHat(d),  SitsOnGround(c)",[],[],"[(' Tan girl', ' A person'), (' ground', ' object')]",IsTan(a) and Runs(a) and LeansOver(b),IsInWoolHat(d) and SitsOnGround(c),(exists a (IsTan(a) and Runs(a) and LeansOver(b))) -> (forall c (IsInWoolHat(d) and SitsOnGround(c))),(exists a (exists b (IsTan(a) and Runs(a) and LeansOver(b)))) -> (exists c (exists d (IsInWoolHat(d) and SitsOnGround(c)))),LF
105,1,,A scientist studies a slide in order to work on her new creation. It follows that a scientist studies a slide that is related to her invention.," ""A scientist studies a slide."""," ""A scientist studies a slide related to her invention."""," IsStudies(a,b)"," IsStudies(a,b),  IsRelatedTo(c,b)",[],"[(' A scientist', ' A scientist'), (' slide', ' slide')]","[(' slide', ' her invention')]","IsStudies(a,b)","IsStudies(a,b) and IsRelatedTo(c,b)","(exists b (IsStudies(a,b))) -> (forall c (IsStudies(a,b) and IsRelatedTo(c,b)))","(exists a (exists b (IsStudies(a,b)))) -> (exists c (exists a (exists b (IsStudies(a,b) and IsRelatedTo(c,b)))))",LF
106,1,,"A red dog jumps and catches a tennis ball in its mouth. Consequently, a dog catching a ball."," ""A red dog jumps and catches a tennis ball in its mouth."""," ""A dog catches a ball."""," IsRed(a),  Jumps(b),  IsCaughtInMouth(c)"," IsCaught(d,e)",[],[],[],IsRed(a) and Jumps(b) and IsCaughtInMouth(c),"IsCaught(d,e)","(IsRed(a) and Jumps(b) and IsCaughtInMouth(c)) -> (IsCaught(d,e))","(exists c (exists a (exists b (IsRed(a) and Jumps(b) and IsCaughtInMouth(c))))) -> (exists e (exists d (IsCaught(d,e))))",LF
107,1,,"A group of dogs stand in the snow. Thus, there are animals outdoors."," ""A group of dogs stand in the snow."""," ""There are animals outdoors."""," IsStandingIn(a,b)", IsOutdoors(c),"[(' IsStandingIn(a,b)', ' IsOutdoors(c)')]",[],"[(' A group of dogs', ' There are (animals) (outdoors)')]","IsStandingIn(a,b)",IsOutdoors(c),"(exists a (IsStandingIn(a,b)) & (forall c (forall a (forall b ( IsStandingIn(a,b) ->  IsOutdoors(c)))))) -> (forall c (IsOutdoors(c)))","(exists a (exists b (IsStandingIn(a,b))) & (forall e (forall f (forall d ( IsStandingIn(d,e) ->  IsOutdoors(f)))))) -> (exists c (IsOutdoors(c)))",Valid
108,1,,This person looks to be snowboarding on a very small pile of snow on a sunny cold day. This implies that young snowboarder sizing up their next jump.," ""This person looks to be snowboarding on a very small pile of snow."""," ""Young snowboarders are sizing up their next jump."""," IsSnowboarding(a),  IsOnSmallPileOfSnow(c)"," IsYoung(d),  IsSizingUp(e)",[],[],"[(' snowboarding', ' Young snowboarders')]",IsSnowboarding(a) and IsOnSmallPileOfSnow(c),IsYoung(d) and IsSizingUp(e),(IsSnowboarding(a) and IsOnSmallPileOfSnow(c)) -> (IsYoung(d) and IsSizingUp(e)),(exists c (exists a (IsSnowboarding(a) and IsOnSmallPileOfSnow(c)))) -> (exists e (exists d (IsYoung(d) and IsSizingUp(e)))),LF
109,1,,"A large number of people are watching men dressed in kilts, one of whom has thrown a long pole. As a consequence, people watch men in kilts."," ""A large number of people are watching men in kilts."""," ""People watch men in kilts as a consequence of one of them throwing a long pole."""," IsWatching(a),  IsInKilts(b)"," IsWatching(c),  IsInKilts(d),  IsConsequenceOf(e),  HasLongPole(f)",[],[],"[(' A large number of people', ' People'), (' men in kilts', ' A large number of people'), (' men in kilts', ' men in kilts.'), (' men in kilts.', ' one of them')]",IsWatching(a) and IsInKilts(b),IsWatching(c) and (IsInKilts(d) and IsConsequenceOf(e)),(forall b (forall a (exists a (IsWatching(a) and IsInKilts(b))))) -> (forall e (exists d (forall c (IsWatching(c) and (IsInKilts(d) and IsConsequenceOf(e)))))),(exists a (exists b (IsWatching(a) and IsInKilts(b)))) -> (exists c (exists e (exists d (IsWatching(c) and (IsInKilts(d) and IsConsequenceOf(e)))))),LF
110,1,,"A boy is riding down the road between two cows. Consequently, a boy, a road and two cows."," ""A boy is riding down the road."""," ""A boy, a road, and two cows."""," IsRiding(a,b)"," IsA(a),  IsOn(b),  AreTwo(c)",[],[],"[(' road', '')]","IsBoy(a) and IsRiding(a,b)",IsA(a) and IsOn(b) and AreTwo(c),"(exists b (IsBoy(a) and IsRiding(a,b))) -> (forall c (IsA(a) and IsOn(b) and AreTwo(c)))","(exists a (exists b (IsBoy(a) and IsRiding(a,b)))) -> (exists c (exists a (exists b (IsA(a) and IsOn(b) and AreTwo(c)))))",LF
111,1,,A bald man is getting out of a small blue car. It follows that the man is bald.," ""A bald man is getting out of a small blue car."""," ""The man is bald."""," IsBald(a),  IsGettingOut(a)", IsBald(c),"[('  IsGettingOut(a)', ' IsBald(c)'), (' IsBald(c)', '  IsGettingOut(a)')]",[],"[(' bald', ' Bald man')]",IsBald(a) and IsGettingOut(a),IsBald(d),(forall a (IsBald(a) and IsGettingOut(a)) & (forall c (forall a (  IsGettingOut(a) ->  IsBald(c)))) & (forall c (forall a ( IsBald(c) ->   IsGettingOut(a))))) -> (exists d (IsBald(d))),(exists a (IsBald(a) and IsGettingOut(a)) & (forall e (forall f (  IsGettingOut(e) ->  IsBald(f)))) & (forall g (forall h ( IsBald(g) ->   IsGettingOut(h))))) -> (exists d (IsBald(d))),Valid
112,1,,"Young boys in green and blue jerseys kick around a soccer ball while other soccer games take place in the background. Thus, young boys kicking around a soccer ball."," ""Young boys kick around a soccer ball."""," ""Other soccer games take place in the background."""," IsYoung(a),  IsKicked(a,b)", IsInBackground(d),[],[],"[(' Young boys', ' background'), (' soccer ball', ' Other soccer games')]","IsYoung(a) and IsKicked(a,b)",IsInBackground(d) and (IsOtherSoccerGame(c) or IsInBackground(c)),"(exists b (exists a (IsYoung(a) and IsKicked(a,b)))) -> (forall c (forall d (IsInBackground(d) and (IsOtherSoccerGame(c) or IsInBackground(c)))))","(exists a (exists b (IsYoung(a) and IsKicked(a,b)))) -> (exists c (exists d (IsInBackground(d) and (IsOtherSoccerGame(c) or IsInBackground(c)))))",LF
113,1,,"A girl playing a violin along with a group of people. Consequently, a girl is playing an instrument."," ""A girl is playing an instrument."""," ""A girl plays an instrument.""", IsPlaying(a), IsPlay(a),[],"[(' instrument', ' instrument')]","[(' Girl', ' A girl')]",IsGirl(b) and IsPlaying(a),IsPlay(c),(exists b (IsGirl(b) and IsPlaying(a))) -> (forall c (IsPlay(c))),(exists b (exists a (IsGirl(b) and IsPlaying(a)))) -> (exists c (IsPlay(c))),LF
114,1,,Two small boys in blue soccer uniforms use a wooden set of steps to wash their hands in an adult-sized bathroom. It follows that two boys washing their hands.," ""Two small boys use a wooden set of steps to wash their hands."""," ""Two boys wash their hands."""," IsSmall(a),  IsUsed(b),  IsWashed(c)", IsWashed(d),"[(' IsSmall(a)', ' IsWashed(d)')]",[],"[(' Two small boys', ' Two boys'), (' their hands.', ' their hands')]",IsSmall(a) and IsUsed(b) and IsWashed(c),IsWashed(d) and IsWashed(e),(forall c (exists a (IsSmall(a) and IsUsed(b) and IsWashed(c))) & (forall a (forall d ( IsSmall(a) ->  IsWashed(d))))) -> (exists e (forall d (IsWashed(d) and IsWashed(e)))),(exists c (exists a (exists b (IsSmall(a) and IsUsed(b) and IsWashed(c)))) & (forall f (forall g ( IsSmall(f) ->  IsWashed(g))))) -> (exists e (exists d (IsWashed(d) and IsWashed(e)))),Valid
115,1,,A soccer player in white kicks a ball as another soccer player lunges towards the ball and a third soccer player in red follows close by. This implies that there are three soccer players.," ""A soccer player in white kicks a ball."""," ""There are three soccer players."""," IsInWhite(b),  KicksBall(a)", IsThree(d),[],[],"[(' three soccer players', ' A soccer player')]",IsInWhite(b) and KicksBall(a),3 and IsThree(d),(forall a (IsInWhite(b) and KicksBall(a))) -> (exists d (3 and IsThree(d))),(exists b (exists a (IsInWhite(b) and KicksBall(a)))) -> (exists d (3 and IsThree(d))),
116,1,,"Children playing a video game together. Thus, the kids are indoors playing a video game."," ""Children are playing a video game together."""," ""The kids are indoors playing a video game."""," IsPlaying(b,a),  IsTogether(b,c)"," IsIndoors(d),  IsPlaying(d,a)",[],"[(' video game', ' video game')]","[(' Children', ' The kids'), (' The kids', ' together'), (' together', ' video game')]","IsPlaying(b,a) and IsTogether(b,c)","IsIndoors(d) and IsPlaying(d,a)","(forall c (exists b (IsPlaying(b,a) and IsTogether(b,c)))) -> (forall a (forall d (IsIndoors(d) and IsPlaying(d,a))))","(exists c (exists b (exists a (IsPlaying(b,a) and IsTogether(b,c))))) -> (exists a (exists d (IsIndoors(d) and IsPlaying(d,a))))",LF
117,1,,Two people in coats kiss on the side of a road. This implies that people show their appreciation for another.," ""Two people in coats kissed on the side of a road."""," ""People show their appreciation for another."""," IsInCoats(a),  IsOnSideOfRoad(b),  IsKissed(a,b)"," IsShownAppreciationFor(d,e)",[],[],"[(' Two people', ' another'), (' road', ' another')]","IsInCoats(a) and IsOnSideOfRoad(b) and IsKissed(a,b)","IsShownAppreciationFor(d,e) and IsAppreciated(e)","(exists a (IsInCoats(a) and IsOnSideOfRoad(b) and IsKissed(a,b))) -> (forall e (IsShownAppreciationFor(d,e) and IsAppreciated(e)))","(exists a (exists b (IsInCoats(a) and IsOnSideOfRoad(b) and IsKissed(a,b)))) -> (exists e (exists d (IsShownAppreciationFor(d,e) and IsAppreciated(e))))",LF
118,1,,Woman reading a book with a grocery tote. It follows that a woman is reading.," ""A woman is reading a book."""," ""A woman is carrying a grocery tote."""," IsReading(a,b)"," IsCarrying(a,c)",[],"[(' Woman', ' Woman')]",[],"IsWoman(a) and IsReading(a,b)","IsCarrying(a,c)","(IsWoman(a) and IsReading(a,b)) -> (IsCarrying(a,c))","(exists a (exists b (IsWoman(a) and IsReading(a,b)))) -> (exists c (exists a (IsCarrying(a,c))))",LF
119,1,,"A man wearing a brown hoodie is shopping for snacks. As a consequence, the man is wearing brown."," ""A man wearing a brown hoodie is shopping for snacks."""," ""The man is wearing brown."""," IsWearing(a,b),  IsShoppingFor(c)"," IsWearing(d,e)",[],[],"[(' Man', ' A man')]","IsWearing(a,b) and IsShoppingFor(c)","IsWearing(d,e)","(forall a (IsWearing(a,b) and IsShoppingFor(c))) -> (exists d (IsWearing(d,e)))","(exists c (exists a (exists b (IsWearing(a,b) and IsShoppingFor(c))))) -> (exists e (exists d (IsWearing(d,e))))",Valid
120,1,,"A young man in a blue T-shirt and sweatpants stands over a stove and looks at the camera while another young man stands behind him. As a consequence, a man is in front of a camera."," ""A man is in front of a camera."""," ""A young man in a blue T-shirt and sweatpants stands over a stove and looks at the camera."""," IsInFrontOf(b,a)"," IsYoung(c),   WearsBlueTShirt(d),   WearsSweatpants(e),   StandsOnStove(f),   LooksAtCamera(a)",[],"[(' camera', ' camera')]","[(' Man', ' Young man')]","IsInFrontOf(b,a)",(IsYoung(c) and WearsBlueTShirt(d) and WearsSweatpants(e) and StandsOnStove(f)) and LooksAtCamera(a),"(exists b (IsInFrontOf(b,a))) -> (forall c ((IsYoung(c) and WearsBlueTShirt(d) and WearsSweatpants(e) and StandsOnStove(f)) and LooksAtCamera(a)))","(exists b (exists a (IsInFrontOf(b,a)))) -> (exists a (exists f (exists d (exists c (exists e ((IsYoung(c) and WearsBlueTShirt(d) and WearsSweatpants(e) and StandsOnStove(f)) and LooksAtCamera(a)))))))",
121,1,,"This church choir sings to the masses as they sing joyous songs from the book at a church. Therefore, the church is filled with song."," ""The church choir sings to the masses."""," ""The church is filled with song."""," IsSingsTo(a,b)"," IsFilledWith(c,d)","[(' IsSingsTo(a,b)', ' IsFilledWith(c,d)')]",[],"[(' The church choir', ' Church'), (' song', ' The church choir'), (' masses', ' Church')]","IsSingsTo(a,b)","IsFilledWith(c,d)","(exists b (forall a (exists a (IsSingsTo(a,b)))) & (forall c (forall a (forall b (forall d ( IsSingsTo(a,b) ->  IsFilledWith(c,d))))))) -> (exists d (forall c (IsFilledWith(c,d))))","(exists a (exists b (IsSingsTo(a,b))) & (forall e (forall f (forall g (forall h ( IsSingsTo(e,f) ->  IsFilledWith(g,h))))))) -> (exists c (exists d (IsFilledWith(c,d))))",Valid
122,1,,"A man and a woman are standing at the side of an inflatable climbing structure. As a consequence, a man and a woman are standing."," ""A man and a woman are standing."""," ""A consequence occurred."""," IsStanding(a,b)", IsOccurred(d),[],[],[],"IsStanding(a,b)",IsOccurred(d),"(IsStanding(a,b)) -> (IsOccurred(d))","(exists a (exists b (IsStanding(a,b)))) -> (exists d (IsOccurred(d)))",LF
123,1,,An asian teenager wearing a white shirt with black stripes is sitting on the steps with his face resting on his hand. This implies that the teenager is seated.," ""An Asian teenager wearing a white shirt with black stripes is seated."""," ""The teenager is seated."""," IsAsian(a),  IsWearingWhiteShirt(b),  HasBlackStripes(c),  IsSeated(d)", IsSeated(e),"[(' IsAsian(a)', ' IsSeated(e)')]",[],"[(' teenager', ' Asian teenager')]",IsAsian(a) and (IsWearingWhiteShirt(b) and HasBlackStripes(c)) and IsSeated(d),IsSeated(e),(forall a (IsAsian(a) and (IsWearingWhiteShirt(b) and HasBlackStripes(c)) and IsSeated(d)) & (forall e (forall a ( IsAsian(a) ->  IsSeated(e))))) -> (exists e (IsSeated(e))),(exists c (exists a (exists b (exists d (IsAsian(a) and (IsWearingWhiteShirt(b) and HasBlackStripes(c)) and IsSeated(d))))) & (forall f (forall g ( IsAsian(f) ->  IsSeated(g))))) -> (exists e (IsSeated(e))),Valid
124,1,,"Boy in red and black shirt walks through grass. Therefore, the boy is walking."," ""The boy is walking."""," ""The boy walks through the grass.""", IsWalking(a)," IsWalking(a),  IsInGrass(b)",[],"[(' The boy', ' The boy')]",[],IsWalking(a),IsWalking(a) and IsInGrass(b),(IsWalking(a)) -> (IsWalking(a) and IsInGrass(b)),(exists a (IsWalking(a))) -> (exists a (exists b (IsWalking(a) and IsInGrass(b)))),LF
125,1,,"These girls are having a great time looking for seashells. As a consequence, the girls are happy."," ""The girls are having a great time looking for seashells."""," ""The girls are happy."""," IsHaving(a),  IsLooking(a)", IsHappy(a),"[(' IsHaving(a)', ' IsHappy(a)')]","[(' The girls', ' The girls')]",[],IsHaving(a) and IsLooking(a),IsHappy(a),(IsHaving(a) and IsLooking(a) & (forall a ( IsHaving(a) ->  IsHappy(a)))) -> (IsHappy(a)),(exists a (IsHaving(a) and IsLooking(a)) & (forall c ( IsHaving(c) ->  IsHappy(c)))) -> (exists a (IsHappy(a))),Valid
126,1,,"Small girl in a pink dress is playing electronic drum pads with sticks. Consequently, a girl is playing electronic drums."," ""A small girl is playing electronic drum pads with sticks."""," ""A girl is playing electronic drums."""," IsSmall(a),  IsPlaying(a),  HasSticks(a)"," IsPlaying(d),  HasElectronicDrums(e)","[('  IsPlaying(a)', '  HasElectronicDrums(e)')]",[],"[(' Small girl', ' Girl')]",IsSmall(a) and IsPlaying(a) and HasSticks(a),IsPlaying(d) and HasElectronicDrums(e),(exists a (IsSmall(a) and IsPlaying(a) and HasSticks(a)) & (forall e (forall a (  IsPlaying(a) ->   HasElectronicDrums(e))))) -> (forall d (IsPlaying(d) and HasElectronicDrums(e))),(exists a (IsSmall(a) and IsPlaying(a) and HasSticks(a)) & (forall f (forall g (  IsPlaying(f) ->   HasElectronicDrums(g))))) -> (exists e (exists d (IsPlaying(d) and HasElectronicDrums(e)))),Valid
127,1,,"A blond woman with a tattoo of on an angel on her arm walking down the street, a concrete wall in the background. As a consequence, a person with a tattoo."," ""A blond woman has a tattoo of an angel on her arm."""," ""A person with a tattoo walks down the street."""," IsBlond(a),  HasTattooOfAnAngel(b),  IsOnHerArm(c)"," IsTattooed(e),  WalksDownTheStreet(d,f)",[],[],"[(' Blond woman', ' A person'), (' tattoo of an angel', ' tattoo'), (' her arm.', ' A person'), (' her arm.', ' tattoo')]",IsBlond(a) and HasTattooOfAnAngel(b) and IsOnHerArm(c),"IsTattooed(e) and (WalksDownTheStreet(d,f) or IsTattooed(e))","(exists c (exists b (exists a (IsBlond(a) and HasTattooOfAnAngel(b) and IsOnHerArm(c))))) -> (forall e (forall d (IsTattooed(e) and (WalksDownTheStreet(d,f) or IsTattooed(e)))))","(exists c (exists a (exists b (IsBlond(a) and HasTattooOfAnAngel(b) and IsOnHerArm(c))))) -> (exists e (exists f (exists d (IsTattooed(e) and (WalksDownTheStreet(d,f) or IsTattooed(e))))))",LF
128,1,,"A tan dog chases a black and white soccer ball. Therefore, a dog is chasing a ball."," ""A dog chases a ball."""," ""A tan dog chases a black and white ball."""," IsChased(a,b)"," IsTan(c),  IsChased(c,d)",[],[],"[(' A tan dog', ' A dog')]","IsChased(a,b)","IsTan(c) and IsChased(c,d)","(forall a (IsChased(a,b))) -> (exists c (IsTan(c) and IsChased(c,d)))","(exists a (exists b (IsChased(a,b)))) -> (exists c (exists d (IsTan(c) and IsChased(c,d))))",LF
129,1,,"A dusty boy runs along a dirt path through the grass. As a consequence, a boy is outside running."," ""A boy runs through the grass."""," ""A boy is outside."""," IsRunsThrough(a,b)"," IsOutside(a,c)",[],"[(' A boy', ' A boy')]","[(' grass', ' outside')]","IsA Boy(a) and IsRunsThrough(a,b)","IsOutside(a,c)","(exists b (IsA Boy(a) and IsRunsThrough(a,b))) -> (forall c (IsOutside(a,c)))","(exists a (exists b (IsA Boy(a) and IsRunsThrough(a,b)))) -> (exists c (exists a (IsOutside(a,c))))",LF
130,1,,"A guy with a football, a crowd watching him. Consequently, there is a guy holding a football."," ""There is a guy holding a football."""," ""A guy with a football is being watched by a crowd."""," IsHolding(b,a)"," IsWithFootball(c),  IsBeingWatchedBy(d)","[(' IsHolding(b,a)', ' IsWithFootball(c)')]","[(' football', ' football')]","[(' guy', ' A guy'), (' guy', ' crowd')]","IsHolding(b,a)",IsWithFootball(c) and IsBeingWatchedBy(d),"(exists b (IsHolding(b,a)) & (forall c (forall b (forall a ( IsHolding(b,a) ->  IsWithFootball(c)))))) -> (forall d (forall c (IsWithFootball(c) and IsBeingWatchedBy(d))))","(exists b (exists a (IsHolding(b,a))) & (forall e (forall f (forall g ( IsHolding(e,f) ->  IsWithFootball(g)))))) -> (exists c (exists d (IsWithFootball(c) and IsBeingWatchedBy(d))))",LF
131,1,,Two women are tending to their herd of animals including cows and goats near a building made primarily of stone. It follows that the two women are taking care of a herd of animals.," ""Two women are taking care of a herd of animals."""," ""The two women are near a building made primarily of stone.""", IsTakingCareOf(a)," IsNear(a,b)",[],"[('', '')]",[],IsTakingCareOf(a) and IsHerdOfAnimals(a),"IsNear(a,b) and IsMadePrimarilyOfStone(b)","(IsTakingCareOf(a) and IsHerdOfAnimals(a)) -> (IsNear(a,b) and IsMadePrimarilyOfStone(b))","(exists a (IsTakingCareOf(a) and IsHerdOfAnimals(a))) -> (exists a (exists b (IsNear(a,b) and IsMadePrimarilyOfStone(b))))",LF
132,1,,"A boy and girl play together on a pile or rocks in a residential area. Thus, the boy and girl are outside."," ""A boy and girl play together on a pile of rocks."""," ""The boy and girl are outside."""," IsPlayingTogether(b,a),  IsOnPileOfRocks(c)"," IsOutside(a),  IsBoy(d)",[],"[(' girl', ' girl')]","[(' Boy', ' A boy'), (' girl', ' outside'), (' pile of rocks', ' outside')]","IsPlayingTogether(b,a) and IsOnPileOfRocks(c)",IsOutside(a) and IsBoy(d),"(forall b (IsPlayingTogether(b,a) and IsOnPileOfRocks(c))) -> (exists d (IsOutside(a) and IsBoy(d)))","(exists c (exists b (exists a (IsPlayingTogether(b,a) and IsOnPileOfRocks(c))))) -> (exists a (exists d (IsOutside(a) and IsBoy(d))))",LF
133,1,,"A boy stands in the middle of a crowd of teenagers. Thus, a person stands in the middle of a crowd of teenagers."," ""A boy stands in the middle of a crowd of teenagers."""," ""A person stands in the middle of a crowd of teenagers."""," IsInCrowd(a),  IsABoy(b)"," IsInCrowd(a),  IsAPerson(c)","[('  IsABoy(b)', '  IsAPerson(c)'), ('  IsAPerson(c)', '  IsABoy(b)')]","[(' crowd of teenagers', ' crowd of teenagers')]",[],IsInCrowd(a) and IsABoy(b),IsInCrowd(a) and IsAPerson(c),(IsInCrowd(a) and IsABoy(b) & (forall c (forall b (  IsABoy(b) ->   IsAPerson(c)))) & (forall c (forall b (  IsAPerson(c) ->   IsABoy(b))))) -> (IsInCrowd(a) and IsAPerson(c)),(exists a (exists b (IsInCrowd(a) and IsABoy(b))) & (forall e (forall d (  IsABoy(d) ->   IsAPerson(e)))) & (forall f (forall g (  IsAPerson(f) ->   IsABoy(g))))) -> (exists c (exists a (IsInCrowd(a) and IsAPerson(c)))),Valid
134,1,,"Two men are standing in a boat. Thus, some people are in a boat."," ""Two men are in a boat."""," ""Some people are in a boat.""", IsInBoat(a), IsInBoat(b),[],[],"[(' Some people', '')]",IsInBoat(a) and IsAnotherMan(a),IsInBoat(b),(forall a (IsInBoat(a) and IsAnotherMan(a))) -> (exists b (IsInBoat(b))),(exists a (IsInBoat(a) and IsAnotherMan(a))) -> (exists b (IsInBoat(b))),Valid
135,1,,An Asian woman dressed in a colorful outfit laughing. It follows that a woman is wearing colorful clothing.," ""An Asian woman is wearing colorful clothing."""," ""A woman is wearing colorful clothing."""," IsAsian(b),  IsWearingColorfulClothing(a)", IsWearingColorfulClothing(a),[],"[(' colorful clothing', ' colorful clothing')]","[(' Woman', ' Asian woman'), (' colorful clothing', ' Asian woman'), (' colorful clothing', ' Woman')]",IsAsian(b) and IsWearingColorfulClothing(a),IsWearingColorfulClothing(a),(forall b (IsAsian(b) and IsWearingColorfulClothing(a))) -> (exists a (IsWearingColorfulClothing(a))),(exists b (exists a (IsAsian(b) and IsWearingColorfulClothing(a)))) -> (exists a (IsWearingColorfulClothing(a))),Valid
136,1,,"A woman in black reviews a message as she walks to work. Hence, the woman in black has a job."," ""A woman in black has a job."""," ""The woman in black reviews messages as she walks to work."""," IsInBlack(a),  HasJob(b)"," IsReviewsMessages(a),  IsWalksToWork(d)",[],"[(' Woman in black', ' Woman in black')]","[(' job', ' work')]",IsInBlack(a) and HasJob(b),IsReviewsMessages(a) and IsWalksToWork(d),(exists b (IsInBlack(a) and HasJob(b))) -> (forall d (IsReviewsMessages(a) and IsWalksToWork(d))),(exists a (exists b (IsInBlack(a) and HasJob(b)))) -> (exists a (exists d (IsReviewsMessages(a) and IsWalksToWork(d)))),LF
137,1,,"A shirtless man rock climbs. As a consequence, a man is outside."," ""A shirtless man rock climbs."""," ""A man is outside."""," IsShirtless(a),  IsRockClimbing(b)", IsOutside(d),[],[],"[(' rock climbs', ' outside')]",IsShirtless(a) and IsRockClimbing(b),IsOutside(c),(IsShirtless(a) and IsRockClimbing(b)) -> (IsOutside(c)),(exists a (exists b (IsShirtless(a) and IsRockClimbing(b)))) -> (exists c (IsOutside(c))),LF
138,1,,"A man wearing a kilt has thrown a large pole. Therefore, a man is wearing a skirt."," ""A man wearing a kilt threw a large pole."""," ""A man is wearing a skirt."""," IsWearing(a,b),  IsLarge(c)"," IsWearing(a,d)",[],"[(' A man', ' A man')]",[],"IsWearing(a,b) and IsLarge(c)","IsWearing(a,d)","(IsWearing(a,b) and IsLarge(c)) -> (IsWearing(a,d))","(exists c (exists a (exists b (IsWearing(a,b) and IsLarge(c))))) -> (exists a (exists d (IsWearing(a,d))))",Valid
139,1,,"A man in a blue t-shirt is taking a picture while a woman with an umbrella walks behind him. Consequently, a man is taking a picture outdoors while a woman walks behind him."," ""A man is taking a picture while a woman walks behind him."""," ""A man is taking a picture outdoors while a woman walks behind him."""," IsTakingPicture(a),  IsBehind(b)"," IsTakingPicture(a),  IsOutdoors(c),  IsBehind(b)","[('  IsBehind(b)', ' IsTakingPicture(a)'), ('  IsOutdoors(c)', '  IsBehind(b)')]","[(' A man', ' A man'), (' woman', ' woman'), (' picture', ' picture')]","[(' picture', ' A man'), (' picture', ' woman'), (' picture', ' A man'), (' picture', ' woman'), (' picture', ' outdoors')]",IsTakingPicture(a) and IsBehind(b),IsTakingPicture(a) and IsOutdoors(c) and IsBehind(b),(forall b (forall a (IsTakingPicture(a) and IsBehind(b))) & (forall b (forall a (  IsBehind(b) ->  IsTakingPicture(a)))) & (forall c (forall b (  IsOutdoors(c) ->   IsBehind(b))))) -> (exists c (IsTakingPicture(a) and IsOutdoors(c) and IsBehind(b))),(exists a (exists b (IsTakingPicture(a) and IsBehind(b))) & (forall e (forall f (  IsBehind(e) ->  IsTakingPicture(f)))) & (forall g (forall h (  IsOutdoors(g) ->   IsBehind(h))))) -> (exists c (exists a (exists b (IsTakingPicture(a) and IsOutdoors(c) and IsBehind(b))))),LF
140,1,,"A child and a parent or older sibling going for a hike. Consequently, two people are going for a hike."," ""A child and a parent or older sibling are going for a hike."""," ""Two people are going for a hike.""", IsGoingForHike(a), IsGoingForHike(e),[],[],"[('', ' parent'), ('', ' older sibling')]",(IsParent(b) or IsOlderSibling(c)) and IsGoingForHike(a),IsGoingForHike(e),(forall c (forall b ((IsParent(b) or IsOlderSibling(c)) and IsGoingForHike(a)))) -> (exists e (IsGoingForHike(e))),(exists c (exists b (exists a ((IsParent(b) or IsOlderSibling(c)) and IsGoingForHike(a))))) -> (exists e (IsGoingForHike(e))),
141,1,,"Two kids in black trunks bouncing on a wet trampoline. Consequently, children play on trampolines outdoors."," ""Two kids in black trunks bounced on a wet trampoline."""," ""Children play on trampolines outdoors."""," IsInBlackTrunks(a),  IsBouncedOnWetTrampoline(a)"," IsPlayedOn(d,e),  IsOutdoors(f)",[],[],"[(' Children', ' Two kids'), (' wet trampoline', ' trampolines')]",IsInBlackTrunks(a) and IsBouncedOnWetTrampoline(a),"IsPlayedOn(d,e) and IsOutdoors(f)","(forall a (IsInBlackTrunks(a) and IsBouncedOnWetTrampoline(a))) -> (exists d (IsPlayedOn(d,e) and IsOutdoors(f)))","(exists a (IsInBlackTrunks(a) and IsBouncedOnWetTrampoline(a))) -> (exists e (exists f (exists d (IsPlayedOn(d,e) and IsOutdoors(f)))))",LF
142,1,,"2 people with backpacks are at a table with a woman with a beige blazer sitting behind it. Thus, 2 people are at a table."," ""2 people are at a table."""," ""The woman with a beige blazer is sitting behind the table."""," IsAt(a,b)"," IsSittingBehind(a,d),  IsWearingBeigeBlazer(c)",[],"[(' table', ' table')]","[(' beige blazer', ' 2 people'), (' 2 people', ' table')]","IsAt(b,a)","IsSittingBehind(a,d) and IsWearingBeigeBlazer(c)","(forall b (IsAt(b,a))) -> (forall a (exists d (IsSittingBehind(a,d) and IsWearingBeigeBlazer(c))))","(exists b (exists a (IsAt(b,a)))) -> (exists c (exists a (exists d (IsSittingBehind(a,d) and IsWearingBeigeBlazer(c)))))",LF
143,1,,"A group stands and watches two men, apparently dressed in some sort of costume, wrestle on the ground. It follows that there are people wrestling."," ""There are people wrestling."""," ""A group stands and watches two men wrestling.""", IsWrestling(a)," IsInGroup(c),  WatchesWrestling(d)",[],"[(' wrestling', ' wrestling')]","[(' People', ' A group')]",IsWrestling(b),IsInGroup(c) and WatchesWrestling(d),(exists b (IsWrestling(b))) -> (forall c (IsInGroup(c) and WatchesWrestling(d))),(exists b (IsWrestling(b))) -> (exists c (exists d (IsInGroup(c) and WatchesWrestling(d)))),LF
144,1,,"two girls looking out the window at ""Hair at Hart."" Hence, two people look out a window."," ""Two people look out a window."""," ""Hair at Hart is being looked at by two people.""", IsLookedOut(a)," IsAtHart(b),  IsLookedAt(c)",[],[],"[(' Hair at Hart', ''), (' two people', '')]",IsLookedOut(a) and IsLookedOut(b),IsAtHart(b) and IsLookedAt(c),(forall a (IsLookedOut(a) and IsLookedOut(b))) -> (exists c (exists b (IsAtHart(b) and IsLookedAt(c)))),(exists a (exists b (IsLookedOut(a) and IsLookedOut(b)))) -> (exists c (exists b (IsAtHart(b) and IsLookedAt(c)))),LF
145,1,,"A man visiting a friend in the hospital. Therefore, a man in a hospital receives a visiting friend."," ""A man visits a friend in the hospital."""," ""A man in a hospital receives a visiting friend."""," IsVisiting(a,c),  IsInHospital(b)"," IsInHospital(a),  IsVisiting(a,d)",[],"[(' A man', ' A man'), (' hospital', ' hospital')]","[(' friend', ' visiting friend')]","IsVisiting(a,c) and IsInHospital(b)","IsInHospital(a) and IsVisiting(a,d)","(exists c (IsVisiting(a,c) and IsInHospital(b))) -> (forall d (IsInHospital(a) and IsVisiting(a,d)))","(exists c (exists a (exists b (IsVisiting(a,c) and IsInHospital(b))))) -> (exists a (exists d (IsInHospital(a) and IsVisiting(a,d))))",LF
146,1,,"A schoolgirl is jumping over a low hurdle. Consequently, a girl is jumping over a hurdle."," ""A schoolgirl is jumping over a low hurdle."""," ""A girl is jumping over a hurdle."""," IsJumping(a),  IsLow(b)"," IsJumping(c),  IsHurdle(d)",[],[],"[(' Schoolgirl', ' A girl'), (' low hurdle', ' hurdle')]",IsJumping(a) and IsLow(b),IsJumping(c) and IsHurdle(d),(exists b (exists a (IsJumping(a) and IsLow(b)))) -> (forall d (forall c (IsJumping(c) and IsHurdle(d)))),(exists a (exists b (IsJumping(a) and IsLow(b)))) -> (exists c (exists d (IsJumping(c) and IsHurdle(d)))),LF
147,1,,"Young Asian girl is sitting on the ground in rubble. Hence, the young Asian girl is outside in the rubble."," ""The young Asian girl is outside in the rubble."""," ""The young Asian girl is sitting on the ground in rubble."""," IsYoung(a),  IsOutside(c),  IsInRubble(b)"," IsSittingOnGround(a),  IsInRubble(b)",[],"[(' Young Asian girl', ' Young Asian girl'), (' rubble', ' rubble')]","[(' Young Asian girl', ' ground'), (' Young Asian girl', ' outside')]",IsYoung(a) and IsOutside(c) and IsInRubble(b),IsSittingOnGround(a) and IsInRubble(b),(forall c (IsYoung(a) and IsOutside(c) and IsInRubble(b))) -> (exists a (IsSittingOnGround(a) and IsInRubble(b))),(exists c (exists a (exists b (IsYoung(a) and IsOutside(c) and IsInRubble(b))))) -> (exists a (exists b (IsSittingOnGround(a) and IsInRubble(b)))),LF
148,1,,"A group of women sing together while wearing matching black dresses. Thus, there are women singing."," ""There are women singing."""," ""All women sing together while wearing matching black dresses.""", IsSinging(b)," IsSingingTogether(c),  IsWearingMatchingBlackDresses(d)",[],[],"[(' black dresses', ' Women')]",IsSinging(b),(IsSingingTogether(c) and IsWearingMatchingBlackDresses(d)),(IsSinging(b)) -> ((IsSingingTogether(c) and IsWearingMatchingBlackDresses(d))),(exists b (IsSinging(b))) -> (exists c (exists d ((IsSingingTogether(c) and IsWearingMatchingBlackDresses(d))))),
149,1,,Two boys in running clothes stretching. This implies that the boys are stretching.," ""Two boys in running clothes stretching."""," ""The boys are stretching."""," IsInRunningClothes(a),  IsStretching(c)", IsStretching(d),"[(' IsInRunningClothes(a)', ' IsStretching(d)')]",[],"[(' Two boys', ' The boys'), (' stretching.', ' The boys')]",IsInRunningClothes(a) and IsStretching(c),IsStretching(d),(exists c (exists a (IsInRunningClothes(a) and IsStretching(c))) & (forall a (forall d ( IsInRunningClothes(a) ->  IsStretching(d))))) -> (forall d (IsStretching(d))),(exists c (exists a (IsInRunningClothes(a) and IsStretching(c))) & (forall e (forall f ( IsInRunningClothes(e) ->  IsStretching(f))))) -> (exists d (IsStretching(d))),Valid
150,1,,A group of young men in a gym take turns scoring in basketball. This implies that guys are indoors.," ""A group of young men in a gym take turns scoring in basketball."""," ""Guys are indoors."""," IsInGym(a),  TakesTurns(a),  ScoresInBasketball(a)", IsIndoors(d),"[(' IsInGym(a)', ' IsIndoors(d)'), (' IsIndoors(d)', ' IsInGym(a)')]",[],"[(' Guys', ' young men')]",(IsInGym(a) and TakesTurns(a)) and ScoresInBasketball(a),IsIndoors(d),(forall a ((IsInGym(a) and TakesTurns(a)) and ScoresInBasketball(a)) & (forall a (forall d ( IsInGym(a) ->  IsIndoors(d)))) & (forall a (forall d ( IsIndoors(d) ->  IsInGym(a))))) -> (exists d (IsIndoors(d))),(exists a ((IsInGym(a) and TakesTurns(a)) and ScoresInBasketball(a)) & (forall f (forall g ( IsInGym(f) ->  IsIndoors(g)))) & (forall i (forall h ( IsIndoors(h) ->  IsInGym(i))))) -> (exists d (IsIndoors(d))),
151,1,,"An Eastern vendor sits by his stall with a rooster nearby. Consequently, a rooster near a vendor."," ""A rooster is near an Eastern vendor."""," ""An Eastern vendor has a rooster nearby."""," IsNear(b,a)"," IsHas(a,c),  IsNearby(d)",[],"[(' Eastern vendor', ' Eastern vendor')]","[(' rooster', ' A rooster')]","IsNear(b,a)","IsHas(a,c) and IsNearby(d)","(forall b (IsNear(b,a))) -> (exists c (IsHas(a,c) and IsNearby(d)))","(exists b (exists a (IsNear(b,a)))) -> (exists c (exists a (exists d (IsHas(a,c) and IsNearby(d)))))",LF
152,1,,"A bird is perched on a tree branch. Thus, a bird is perching in a tree."," ""A bird is perched on a tree branch."""," ""A bird is perching in a tree."""," IsPerchedOn(a,b),  IsTree(b),  IsBranch(c)"," IsPerching(a),  IsInTree(b)",[],"[(' Bird', ' Bird'), (' tree', ' tree')]","[(' branch', ' tree')]","IsPerchedOn(a,b) and IsTree(b) and IsBranch(c)",IsPerching(a) and IsInTree(b),"(exists c (IsPerchedOn(a,b) and IsTree(b) and IsBranch(c))) -> (forall b (IsPerching(a) and IsInTree(b)))","(exists c (exists a (exists b (IsPerchedOn(a,b) and IsTree(b) and IsBranch(c))))) -> (exists a (exists b (IsPerching(a) and IsInTree(b))))",LF
153,1,,"A man in an overcoat putting on his gloves at a subway station. Therefore, a person is in the subway station."," ""A man in an overcoat is putting on his gloves at a subway station."""," ""A person is in the subway station."""," IsInOvercoat(a),  IsPuttingOnGloves(a)", IsInSubwayStation(a),[],"[('', ' A person')]",[],IsInOvercoat(a) and IsPuttingOnGloves(a),IsInSubwayStation(a),(IsInOvercoat(a) and IsPuttingOnGloves(a)) -> (IsInSubwayStation(a)),(exists a (IsInOvercoat(a) and IsPuttingOnGloves(a))) -> (exists a (IsInSubwayStation(a))),LF
154,1,,"Person with umbrella observes flooded streets with cars in the water. Consequently, a person is outside."," ""A person is outside."""," ""There is a flood with cars in the water.""", IsOutside(a)," IsInWater(d),  IsInFlood(c)",[],[],"[(' There is', ' A person'), (' There is', ' outside')]",IsOutside(b),IsInWater(d) and IsInFlood(c),(forall b (IsOutside(b))) -> (exists c (IsInWater(d) and IsInFlood(c))),(exists b (IsOutside(b))) -> (exists c (exists d (IsInWater(d) and IsInFlood(c)))),LF
155,1,,A group of people are camping out on some rocks. This implies that people are outdoors.," ""A group of people are camping out on some rocks."""," ""People are outdoors."""," IsCampingOn(a),  IsInGroup(b)", IsOutdoors(c),"[(' IsCampingOn(a)', ' IsOutdoors(c)'), (' IsOutdoors(c)', ' IsCampingOn(a)'), ('  IsInGroup(b)', ' IsOutdoors(c)')]",[],"[(' Some rocks', ' outdoors'), (' People', ' group of people'), (' outdoors', ' group of people')]",IsCampingOn(a) and IsInGroup(b),IsOutdoors(c),(forall b (IsCampingOn(a) and IsInGroup(b)) & (forall c (forall a ( IsCampingOn(a) ->  IsOutdoors(c)))) & (forall c (forall a ( IsOutdoors(c) ->  IsCampingOn(a)))) & (forall c (forall b (  IsInGroup(b) ->  IsOutdoors(c))))) -> (exists c (IsOutdoors(c))),(exists a (exists b (IsCampingOn(a) and IsInGroup(b))) & (forall e (forall f ( IsCampingOn(e) ->  IsOutdoors(f)))) & (forall g (forall h ( IsOutdoors(g) ->  IsCampingOn(h)))) & (forall i (forall j (  IsInGroup(i) ->  IsOutdoors(j))))) -> (exists c (IsOutdoors(c))),Valid
156,1,,A choir made up of varying ages of people are performing. This implies that the choir is singing.," ""A choir is performing."""," ""The choir is singing.""", IsPerforming(a), IsSinging(c),"[(' IsSinging(c)', ' IsPerforming(a)')]",[],"[(' choir', ' A choir'), (' singing', ' A choir')]",IsPerforming(a),IsSinging(d),(forall a (IsPerforming(a)) & (forall c (forall a ( IsSinging(c) ->  IsPerforming(a))))) -> (exists d (IsSinging(d))),(exists a (IsPerforming(a)) & (forall e (forall f ( IsSinging(e) ->  IsPerforming(f))))) -> (exists d (IsSinging(d))),LF
157,1,,A man scales a rock climbing wall. It follows that a man rock climbing.," ""A man scales a rock climbing wall."""," ""A man rock climbs."""," IsScaling(a,b)"," IsRockClimbing(a,c)","[(' IsScaling(a,b)', ' IsRockClimbing(a,c)')]","[(' A man', ' A man')]","[(' rock climbing wall', ' rock climbs')]","IsScaling(a,b)","IsRockClimbing(a,c)","(exists b (IsScaling(a,b)) & (forall c (forall a (forall b ( IsScaling(a,b) ->  IsRockClimbing(a,c)))))) -> (forall c (IsRockClimbing(a,c)))","(exists a (exists b (IsScaling(a,b))) & (forall e (forall f (forall d ( IsScaling(d,e) ->  IsRockClimbing(d,f)))))) -> (exists c (exists a (IsRockClimbing(a,c))))",Valid
158,1,,"A little white dog runs outside, their ears blown back in the wind. It follows that there is an animal outside."," ""A little white dog runs outside."""," ""There is an animal outside."""," IsLittle(a),  IsWhite(a),  RunsOutside(a)", IsOutside(b),"[(' IsLittle(a)', ' IsOutside(b)')]",[],"[(' little white dog', ' animal'), (' little white dog', ' outside')]",IsLittle(a) and IsWhite(a) and RunsOutside(a),IsOutside(c),(exists a (IsLittle(a) and IsWhite(a) and RunsOutside(a)) & (forall a (forall b ( IsLittle(a) ->  IsOutside(b))))) -> (forall c (IsOutside(c))),(exists a (IsLittle(a) and IsWhite(a) and RunsOutside(a)) & (forall e (forall d ( IsLittle(d) ->  IsOutside(e))))) -> (exists c (IsOutside(c))),Valid
159,1,,"A bearded man sits near a white van. As a consequence, a man sitting outside near a van."," ""A bearded man sits near a white van."""," ""A man sits outside near a van."""," IsBearded(a),  IsNear(a,b)"," IsOutside(c),  IsNear(c,e)","[(' IsBearded(a)', '  IsNear(c,e)')]",[],"[(' white van', ' outside'), (' white van', ' van')]","IsBearded(a) and IsNear(a,b)","IsOutside(c) and IsNear(c,e)","(exists b (IsBearded(a) and IsNear(a,b)) & (forall c (forall e (forall a ( IsBearded(a) ->   IsNear(c,e)))))) -> (forall e (IsOutside(c) and IsNear(c,e)))","(exists a (exists b (IsBearded(a) and IsNear(a,b))) & (forall f (forall g (forall h ( IsBearded(f) ->   IsNear(g,h)))))) -> (exists c (exists e (IsOutside(c) and IsNear(c,e))))",LF
160,1,,"Two children wearing hooded tops laughing with each other. Thus, children laugh."," ""Two children wearing hooded tops laugh with each other."""," ""Children laugh."""," IsWearingHoodedTops(a),  LaughsWithEachOther(c)", IsLaugh(d),"[(' IsWearingHoodedTops(a)', ' IsLaugh(d)'), ('  LaughsWithEachOther(c)', ' IsLaugh(d)')]",[],"[(' Two children', ' Children')]",IsWearingHoodedTops(a) and LaughsWithEachOther(c),IsLaugh(d),(exists a (IsWearingHoodedTops(a) and LaughsWithEachOther(c)) & (forall a (forall d ( IsWearingHoodedTops(a) ->  IsLaugh(d)))) & (forall c (forall d (  LaughsWithEachOther(c) ->  IsLaugh(d))))) -> (forall d (IsLaugh(d))),(exists c (exists a (IsWearingHoodedTops(a) and LaughsWithEachOther(c))) & (forall e (forall f ( IsWearingHoodedTops(e) ->  IsLaugh(f)))) & (forall g (forall h (  LaughsWithEachOther(g) ->  IsLaugh(h))))) -> (exists d (IsLaugh(d))),Valid
161,1,,"A man in glasses in a basement. Thus, the basement has a man in it."," ""There is a man in the basement."""," ""The basement has a man.""", IsInBasement(a), IsInBasement(a),[],"[(' man', ' man')]",[],IsInBasement(a),IsInBasement(a),(IsInBasement(a)) -> (IsInBasement(a)),(exists a (IsInBasement(a))) -> (exists a (IsInBasement(a))),Valid
162,1,,A man in a white shirt speaks into a microphone as other men gather behind him at a public event. This implies that a man in a white shirt is making a speech in front of a crowd.," ""A man in a white shirt speaks into a microphone."""," ""A man in a white shirt is making a speech in front of a crowd."""," IsInWhiteShirt(a),  SpeaksIntoMicrophone(c)"," IsInWhiteShirt(a),  IsMakingSpeech(d)","[('  SpeaksIntoMicrophone(c)', '  IsMakingSpeech(d)')]",[],"[(' White shirt', ''), (' microphone', ''), (' man', '')]",IsInWhiteShirt(a) and SpeaksIntoMicrophone(c),IsInWhiteShirt(a) and (IsMakingSpeech(d) and IsCrowd(d)),(exists c (exists a (IsInWhiteShirt(a) and SpeaksIntoMicrophone(c))) & (forall c (forall d (  SpeaksIntoMicrophone(c) ->   IsMakingSpeech(d))))) -> (forall d (IsInWhiteShirt(a) and (IsMakingSpeech(d) and IsCrowd(d)))),(exists c (exists a (IsInWhiteShirt(a) and SpeaksIntoMicrophone(c))) & (forall e (forall f (  SpeaksIntoMicrophone(e) ->   IsMakingSpeech(f))))) -> (exists a (exists d (IsInWhiteShirt(a) and (IsMakingSpeech(d) and IsCrowd(d))))),LF
163,1,,A brown and white dog is chained up near a red chair. It follows that the dog is chained to a chair.," ""A brown and white dog is chained up near a red chair."""," ""The dog is chained to a chair."""," IsBrownAndWhite(a),  IsChainedUp(a),  IsNear(a,b)", IsChainedTo(c),[],[],"[(' red chair', '')]","IsBrownAndWhite(a) and IsNear(a,b)",IsChainedTo(c),"(exists b (IsBrownAndWhite(a) and IsNear(a,b))) -> (forall c (IsChainedTo(c)))","(exists a (exists b (IsBrownAndWhite(a) and IsNear(a,b)))) -> (exists c (IsChainedTo(c)))",LF
164,1,,"This is when daddy taught her how to ride her scooter. Consequently, daddy taught her."," ""Daddy taught her how to ride her scooter."""," ""Daddy taught her."""," IsTaught(a,b),  IsRidden(c)"," IsTaught(a,b)",[],"[(' Daddy', ' Daddy'), (' her', ' her')]",[],"IsTaught(a,b) and IsRidden(c)","IsTaught(a,b)","(IsTaught(a,b) and IsRidden(c)) -> (IsTaught(a,b))","(exists c (exists a (exists b (IsTaught(a,b) and IsRidden(c))))) -> (exists a (exists b (IsTaught(a,b))))",Valid
165,1,,"A small girl with short brown hair is pushing a pink scooter over grass with brown leaves with threes in the background. Therefore, the girl is outside."," ""The girl is outside."""," ""The girl is small and has short brown hair.""", IsOutside(a)," IsSmall(a),  HasShortBrownHair(a)",[],"[(' Girl', ' Girl')]","[(' small', ' Girl'), (' short brown hair', ' Girl'), (' small', ' outside'), (' short brown hair', ' outside')]",IsOutside(b),IsSmall(a) and HasShortBrownHair(a),(IsOutside(b)) -> (IsSmall(a) and HasShortBrownHair(a)),(exists b (IsOutside(b))) -> (exists a (IsSmall(a) and HasShortBrownHair(a))),LF
166,1,,"A man wearing a black cap is suspended in the air on a swing, as children are swinging on a swing set. Hence, a man in a black hat is swinging with some children."," ""A man in a black cap is suspended in the air on a swing."""," ""A man in a black hat is swinging with some children."""," IsInBlackCap(a),  IsSuspendedInAir(a),  IsOnASwing(a)"," IsInBlackHat(a),  IsSwinging(a),  HasChildren(a)",[],"[('', '')]",[],IsInBlackCap(a) and (IsSuspendedInAir(a) and IsOnASwing(a)),IsInBlackHat(a) and (IsSwinging(a) and HasChildren(a)),(IsInBlackCap(a) and (IsSuspendedInAir(a) and IsOnASwing(a))) -> (IsInBlackHat(a) and (IsSwinging(a) and HasChildren(a))),(exists a (IsInBlackCap(a) and (IsSuspendedInAir(a) and IsOnASwing(a)))) -> (exists a (IsInBlackHat(a) and (IsSwinging(a) and HasChildren(a)))),LF
167,1,,"A man with a blue, collared shirt sits in front of another man. This implies that a man sits in front of another man."," ""A man with a blue, collared shirt sits in front of another man."""," ""A man sits in front of another man."""," IsInBlueCollaredShirt(a),  IsSatInFrontOf(a)", IsSatInFrontOf(a),"[(' IsInBlueCollaredShirt(a)', ' IsSatInFrontOf(a)')]","[('', '')]",[],IsInBlueCollaredShirt(a) and IsSatInFrontOf(a),IsSatInFrontOf(a),(IsInBlueCollaredShirt(a) and IsSatInFrontOf(a) & (forall a ( IsInBlueCollaredShirt(a) ->  IsSatInFrontOf(a)))) -> (IsSatInFrontOf(a)),(exists a (IsInBlueCollaredShirt(a) and IsSatInFrontOf(a)) & (forall b ( IsInBlueCollaredShirt(b) ->  IsSatInFrontOf(b)))) -> (exists a (IsSatInFrontOf(a))),Valid
168,1,,"A young man in an orange shirt, maneuvers a skateboard at the top of a ramp. Therefore, a person rides a skateboard."," ""A young man in an orange shirt rides a skateboard."""," ""A person rides a skateboard."""," IsYoung(b),  IsInOrangeShirt(c),  IsRidesSkateboard(a)", IsRidesSkateboard(a),[],"[(' skateboard', ' skateboard')]",[],IsYoung(b) and IsInOrangeShirt(c) and IsRidesSkateboard(a),IsRidesSkateboard(a),(IsYoung(b) and IsInOrangeShirt(c) and IsRidesSkateboard(a)) -> (IsRidesSkateboard(a)),(exists c (exists b (exists a (IsYoung(b) and IsInOrangeShirt(c) and IsRidesSkateboard(a))))) -> (exists a (IsRidesSkateboard(a))),Valid
169,1,,"A large group of people walking in a busy city at night. Consequently, people are walking a city."," ""A large group of people walk in a busy city at night."""," ""People walk in a city."""," IsLarge(a),  IsBusy(b),  IsNight(c)"," IsWalk(d),  IsCity(e)","[(' IsLarge(a)', ' IsWalk(d)')]",[],"[(' A large group of people', ' People'), (' city', ' A large group of people'), (' People', ' busy city'), (' busy city', ' city')]",IsLarge(a) and IsBusy(b) and IsNight(c),IsWalk(d) and IsCity(e),(forall b (forall a (exists a (IsLarge(a) and IsBusy(b) and IsNight(c)))) & (forall a (forall d ( IsLarge(a) ->  IsWalk(d))))) -> (forall e (exists e (forall d (IsWalk(d) and IsCity(e))))),(exists c (exists a (exists b (IsLarge(a) and IsBusy(b) and IsNight(c)))) & (forall f (forall g ( IsLarge(f) ->  IsWalk(g))))) -> (exists e (exists d (IsWalk(d) and IsCity(e)))),LF
170,1,,"A group of people are walking by a van. Therefore, some people outdoors."," ""A group of people are walking by a van."""," ""Some people are outdoors."""," IsWalking(a),  IsBy(a,b)", IsOutdoors(c),[],[],"[(' Some people', ' A group of people')]","IsWalking(a) and IsBy(a,b)",IsOutdoors(c),"(forall a (IsWalking(a) and IsBy(a,b))) -> (exists c (IsOutdoors(c)))","(exists a (exists b (IsWalking(a) and IsBy(a,b)))) -> (exists c (IsOutdoors(c)))",LF
171,1,,"A white and a black dog fighting in a fenced in room. As a consequence, the dogs are fighting."," ""A white dog and a black dog are fighting."""," ""The dogs are fighting in a fenced in room."""," IsWhite(a),  IsFighting(b)"," IsFighting(c),  IsInFencedInRoom(d)",[],[],"[(' White dog', ' The dogs'), (' black dog', ' The dogs')]",IsWhite(a) and IsFighting(b),IsFighting(c) and IsInFencedInRoom(d),(exists b (exists a (IsWhite(a) and IsFighting(b)))) -> (forall c (IsFighting(c) and IsInFencedInRoom(d))),(exists a (exists b (IsWhite(a) and IsFighting(b)))) -> (exists c (exists d (IsFighting(c) and IsInFencedInRoom(d)))),LF
172,1,,"A white greyhound dog wearing a muzzle runs around a track. Hence, the dog is racing other dogs."," ""A white greyhound dog wears a muzzle and runs around a track."""," ""The dog is racing other dogs."""," IsWhite(a),  WearsMuzzle(a),  RunsAroundTrack(a)", IsRacing(a),[],"[('', '')]",[],IsWhite(a) and WearsMuzzle(a) and RunsAroundTrack(a),IsRacing(a) and (IsRacing(b) or IsOtherDogs(b)),(IsWhite(a) and WearsMuzzle(a) and RunsAroundTrack(a)) -> (IsRacing(a) and (IsRacing(b) or IsOtherDogs(b))),(exists a (IsWhite(a) and WearsMuzzle(a) and RunsAroundTrack(a))) -> (exists a (exists b (IsRacing(a) and (IsRacing(b) or IsOtherDogs(b))))),LF
173,1,,The pitcher is pitching the ball in a game of baseball. It follows that the pitcher throws the ball.," ""The pitcher is pitching the ball."""," ""The pitcher throws the ball."""," IsPitching(a),  IsTheBall(b)"," IsThrows(a),  IsTheBall(b)","[(' IsPitching(a)', ' IsThrows(a)')]","[(' The pitcher', ' The pitcher'), (' ball', ' ball')]",[],IsPitching(a) and IsTheBall(b),IsThrows(a) and IsTheBall(b),(IsPitching(a) and IsTheBall(b) & (forall a ( IsPitching(a) ->  IsThrows(a)))) -> (IsThrows(a) and IsTheBall(b)),(exists a (exists b (IsPitching(a) and IsTheBall(b))) & (forall c ( IsPitching(c) ->  IsThrows(c)))) -> (exists a (exists b (IsThrows(a) and IsTheBall(b)))),Valid
174,1,,"Girl in a red coat, blue head wrap and jeans is making a snow angel. As a consequence, a girl outside plays in the snow."," ""A girl is making a snow angel."""," ""A girl plays in the snow."""," IsMaking(a),  IsSnowAngel(b)"," IsPlays(a),  IsSnow(c)",[],"[(' A girl', ' A girl')]","[(' snow angel', ' snow')]",IsMaking(a) and IsSnowAngel(b),IsPlays(a) and IsSnow(c),(exists b (IsMaking(a) and IsSnowAngel(b))) -> (forall c (IsPlays(a) and IsSnow(c))),(exists a (exists b (IsMaking(a) and IsSnowAngel(b)))) -> (exists c (exists a (IsPlays(a) and IsSnow(c)))),LF
175,1,,"Men in an office with computers and a projector screen. Consequently, there are computers and a projector screen in the room."," ""Men are in an office with computers and a projector screen."""," ""There are computers and a projector screen in the room."""," IsInOffice(c),  HasComputers(a),  HasProjectorScreen(b)"," IsInRoom(e),  HasComputers(a),  HasProjectorScreen(b)",[],"[(' computers', ' computers'), (' projector screen', ' projector screen')]",[],IsInOffice(c) and (HasComputers(a) and HasProjectorScreen(b)),(IsInRoom(e) and HasComputers(a)) or (IsInRoom(e) and HasProjectorScreen(b)),(IsInOffice(c) and (HasComputers(a) and HasProjectorScreen(b))) -> ((IsInRoom(e) and HasComputers(a)) or (IsInRoom(e) and HasProjectorScreen(b))),(exists c (exists a (exists b (IsInOffice(c) and (HasComputers(a) and HasProjectorScreen(b)))))) -> (exists e (exists a (exists b ((IsInRoom(e) and HasComputers(a)) or (IsInRoom(e) and HasProjectorScreen(b)))))),
176,1,,"A small child in a red jacket is sitting on a man's shoulders and holding his head. Therefore, the child's hands are on the man's head."," ""The child's hands are on the man's head."""," ""The child is on the man's shoulders.""", IsOnHead(b), IsOnShoulders(e),[],[],"[(' The child', ' Child')]",IsChild(a) and IsOnHead(b),IsOnShoulders(e) and IsChild(d),(forall a (IsChild(a) and IsOnHead(b))) -> (exists d (IsOnShoulders(e) and IsChild(d))),(exists a (exists b (IsChild(a) and IsOnHead(b)))) -> (exists e (exists d (IsOnShoulders(e) and IsChild(d)))),LF
177,1,,Three girls are standing and talking to each other. It follows that three girls are talking.," ""Three girls are standing and talking to each other."""," ""Three girls are talking."""," IsStanding(a),  AreTalkingToEachOther(a)", IsTalking(b),"[('  AreTalkingToEachOther(a)', ' IsTalking(b)')]",[],"[(' Three girls', '')]",IsStanding(a) and AreTalkingToEachOther(a),IsTalking(b)  and (IsThree(b) or IsOne(b) or IsTwo(b)),(forall a (IsStanding(a) and AreTalkingToEachOther(a)) & (forall a (forall b (  AreTalkingToEachOther(a) ->  IsTalking(b))))) -> (exists b (IsTalking(b)  and (IsThree(b) or IsOne(b) or IsTwo(b)))),(exists a (IsStanding(a) and AreTalkingToEachOther(a)) & (forall c (forall d (  AreTalkingToEachOther(c) ->  IsTalking(d))))) -> (exists b (IsTalking(b)  and (IsThree(b) or IsOne(b) or IsTwo(b)))),LF
178,1,,"a man with a cap and not wearing shirt is laying a wooden bench. Consequently, a man relaxes on a bench."," ""A man is laying a wooden bench."""," ""A man relaxes on a bench."""," IsLaying(a,b)"," IsRelaxes(a,c)",[],"[(' A man', ' A man')]","[(' wooden bench', ' bench')]","IsLaying(a,b)","IsRelaxes(a,c)","(exists b (IsLaying(a,b))) -> (forall c (IsRelaxes(a,c)))","(exists a (exists b (IsLaying(a,b)))) -> (exists c (exists a (IsRelaxes(a,c))))",LF
179,1,,"A man in a red shirt is being filmed by another man on a sports field with a huge audience of people watching and cheering. Therefore, the man is being filmed by another man."," ""A man is being filmed by another man."""," ""The man is being filmed on a sports field with a huge audience of people watching and cheering."""," IsBeingFilmedBy(a,b)"," IsOnSportsField(c),  IsCheeredBy(e),   HasHugeAudience(d)","[(' IsOnSportsField(c)', ' IsBeingFilmedBy(a,b)')]",[],"[(' Man', ' A man'), (' A man', ' people')]","IsMan(a) and IsBeingFilmedBy(a,b)",(IsOnSportsField(c) and IsCheeredBy(e)) and HasHugeAudience(d),"(forall a (IsMan(a) and IsBeingFilmedBy(a,b)) & (forall c (forall a (forall b ( IsOnSportsField(c) ->  IsBeingFilmedBy(a,b)))))) -> (exists c ((IsOnSportsField(c) and IsCheeredBy(e)) and HasHugeAudience(d)))","(exists a (exists b (IsMan(a) and IsBeingFilmedBy(a,b))) & (forall i (forall g (forall h ( IsOnSportsField(g) ->  IsBeingFilmedBy(h,i)))))) -> (exists c (exists e (exists d ((IsOnSportsField(c) and IsCheeredBy(e)) and HasHugeAudience(d)))))",
180,1,,"A man in a suit cheering in a library in front of children. Thus, a guy is cheering near some children."," ""A man in a suit cheered in a library in front of children."""," ""A guy is cheering near some children."""," IsInLibrary(b),  IsCheeredInFrontOf(a,b)"," IsCheering(d),  IsNearChildren(d)","[(' IsCheering(d)', '  IsCheeredInFrontOf(a,b)'), ('  IsCheeredInFrontOf(a,b)', '  IsNearChildren(d)')]",[],"[(' children', ''), (' library', '')]","IsInLibrary(b) and IsCheeredInFrontOf(a,b)",IsCheering(d) and IsNearChildren(d),"(exists b (IsInLibrary(b) and IsCheeredInFrontOf(a,b)) & (forall a (forall b (forall d ( IsCheering(d) ->   IsCheeredInFrontOf(a,b))))) & (forall a (forall b (forall d (  IsCheeredInFrontOf(a,b) ->   IsNearChildren(d)))))) -> (forall d (IsCheering(d) and IsNearChildren(d)))","(exists b (exists a (IsInLibrary(b) and IsCheeredInFrontOf(a,b))) & (forall e (forall f (forall g ( IsCheering(e) ->   IsCheeredInFrontOf(f,g))))) & (forall i (forall j (forall h (  IsCheeredInFrontOf(h,i) ->   IsNearChildren(j)))))) -> (exists d (IsCheering(d) and IsNearChildren(d)))",LF
181,1,,A man in suit waiting for the green light. This implies that a man waits at a red light.," ""A man in suit waits for the green light."""," ""A man waits at a red light."""," IsInSuit(a),  WaitsForGreenLight(a)", IsWaitingAtRedLight(c),[],[],"[(' A man in suit', ' A man')]",IsInSuit(a) and WaitsForGreenLight(a),IsWaitingAtRedLight(c),(exists a (IsInSuit(a) and WaitsForGreenLight(a))) -> (forall c (IsWaitingAtRedLight(c))),(exists a (IsInSuit(a) and WaitsForGreenLight(a))) -> (exists c (IsWaitingAtRedLight(c))),LF
182,1,,"A man smokes while leaning against a pillar, which has a ""missing person"" flier posted on it. Thus, a guy smoking against a wall with a flier on it."," ""A man smokes while leaning against a pillar."""," ""A missing person is nearby."""," IsSmoking(a),  IsLeaningAgainst(b)"," IsMissing(c),  IsNearby(d)",[],[],"[(' nearby', ' pillar')]",IsSmoking(a) and IsLeaningAgainst(b),IsMissing(c) and IsNearby(d),(forall b (IsSmoking(a) and IsLeaningAgainst(b))) -> (exists d (IsMissing(c) and IsNearby(d))),(exists a (exists b (IsSmoking(a) and IsLeaningAgainst(b)))) -> (exists c (exists d (IsMissing(c) and IsNearby(d)))),LF
183,1,,"A woman is standing at a podium. Thus, a person is at a podium."," ""A person is at a podium."""," ""Thus, a woman is at a podium."""," IsAt(a,b)"," IsAt(a,c)",[],"[(' podium', ' podium')]","[(' woman', ' A person')]","IsAt(a,b)","IsAt(a,c)","(forall b (IsAt(a,b))) -> (exists c (IsAt(a,c)))","(exists a (exists b (IsAt(a,b)))) -> (exists c (exists a (IsAt(a,c))))",Valid
184,1,,Four boys are about to be hit by an approaching wave. It follows that a wave is about hit some boys.," ""Four boys are about to be hit by an approaching wave."""," ""A wave is about to hit some boys."""," IsAboutToBeHit(b),  IsApproaching(a)"," IsAboutToHit(a),  IsSome(c)","[(' IsAboutToBeHit(b)', ' IsAboutToHit(a)')]","[(' approaching wave', ' A wave')]","[(' Four boys', ' some boys')]",IsAboutToBeHit(b) and IsApproaching(a),IsAboutToHit(a) and IsSome(c),(exists b (IsAboutToBeHit(b) and IsApproaching(a)) & (forall b (forall a ( IsAboutToBeHit(b) ->  IsAboutToHit(a))))) -> (forall c (IsAboutToHit(a) and IsSome(c))),(exists b (exists a (IsAboutToBeHit(b) and IsApproaching(a))) & (forall e (forall f ( IsAboutToBeHit(e) ->  IsAboutToHit(f))))) -> (exists c (exists a (IsAboutToHit(a) and IsSome(c)))),LF
185,1,,"people are sitting on a bench in front of buildings. Thus, some people are seated on a bench outside."," ""People are sitting on a bench."""," ""Some people are seated on a bench."""," IsSittingOn(b,a)"," IsSeatedOn(c,a)","[(' IsSittingOn(b,a)', ' IsSeatedOn(c,a)'), (' IsSeatedOn(c,a)', ' IsSittingOn(b,a)')]","[(' bench', ' bench')]","[(' People', ' Some people'), (' Some people', ' bench')]","IsSittingOn(b,a)","IsSeatedOn(c,a)","(forall a (exists b (IsSittingOn(b,a))) & (forall c (forall b (forall a ( IsSittingOn(b,a) ->  IsSeatedOn(c,a))))) & (forall c (forall a (forall b ( IsSeatedOn(c,a) ->  IsSittingOn(b,a)))))) -> (forall c (IsSeatedOn(c,a)))","(exists b (exists a (IsSittingOn(b,a))) & (forall e (forall f (forall d ( IsSittingOn(d,e) ->  IsSeatedOn(f,e))))) & (forall i (forall g (forall h ( IsSeatedOn(g,h) ->  IsSittingOn(i,h)))))) -> (exists c (exists a (IsSeatedOn(c,a))))",Valid
186,1,,The skateboarder is jumping his board in the air while another skateboarder watches. This implies that a skateboarder is jumping.," ""The skateboarder is jumping his board in the air."""," ""A skateboarder is jumping.""", IsJumping(b), IsJumping(c),[],[],"[(' A skateboarder', ' The skateboarder')]",IsJumping(b),IsJumping(c),(IsJumping(b)) -> (IsJumping(c)),(exists b (IsJumping(b))) -> (exists c (IsJumping(c))),Valid
187,1,,"A man wearing a black hat and coat makes a face with a crowd behind him. As a consequence, a guy is standing near a crowd of people."," ""A man wearing a black hat and coat makes a face with a crowd behind him."""," ""A guy is standing near a crowd of people."""," IsWearing(a,b),  MakesFace(a),  IsInCrowd(a)"," IsStanding(b),  IsNear(b,c)",[],[],"[(' Guy', ''), (' crowd of people', '')]","(IsWearing(a,b) and MakesFace(a)) and IsInCrowd(a)","IsStanding(b) and IsNear(b,c)","(forall a ((IsWearing(a,b) and MakesFace(a)) and IsInCrowd(a))) -> (exists c (exists b (IsStanding(b) and IsNear(b,c))))","(exists a (exists b ((IsWearing(a,b) and MakesFace(a)) and IsInCrowd(a)))) -> (exists c (exists b (IsStanding(b) and IsNear(b,c))))",
188,1,,"A group of soldiers march in a parade. Thus, a group of people march in a parade."," ""A group of soldiers march in a parade."""," ""A group of people march in a parade."""," IsInGroup(a),  IsMarching(a),  IsInParade(a)"," IsInGroup(a),  IsMarching(a),  IsInParade(a)","[('  IsInParade(a)', '  IsMarching(a)'), ('  IsMarching(a)', '  IsInParade(a)')]","[('', '')]",[],IsInGroup(a) and IsMarching(a) and IsInParade(a),IsInGroup(a) and IsMarching(a) and IsInParade(a),(IsInGroup(a) and IsMarching(a) and IsInParade(a) & (forall a (  IsInParade(a) ->   IsMarching(a))) & (forall a (  IsMarching(a) ->   IsInParade(a)))) -> (IsInGroup(a) and IsMarching(a) and IsInParade(a)),(exists a (IsInGroup(a) and IsMarching(a) and IsInParade(a)) & (forall b (  IsInParade(b) ->   IsMarching(b))) & (forall c (  IsMarching(c) ->   IsInParade(c)))) -> (exists a (IsInGroup(a) and IsMarching(a) and IsInParade(a))),Valid
189,1,,The 3 dogs are cruising down the street. This implies that three dogs together.," ""The 3 dogs are cruising down the street."""," ""Three dogs together."""," IsCruising(a),  IsOnStreet(b)", IsTogether(c),"[(' IsCruising(a)', ' IsTogether(c)')]",[],"[(' Three dogs', ' 3 dogs')]",IsCruising(a) and IsOnStreet(b),IsTogether(c),(forall a (IsCruising(a) and IsOnStreet(b)) & (forall c (forall a ( IsCruising(a) ->  IsTogether(c))))) -> (exists c (IsTogether(c))),(exists a (exists b (IsCruising(a) and IsOnStreet(b))) & (forall e (forall d ( IsCruising(d) ->  IsTogether(e))))) -> (exists c (IsTogether(c))),Valid
190,1,,"The gentleman is speaking while the others are listening. As a consequence, the man is being given respect."," ""The gentleman is speaking."""," ""The man is being given respect.""", IsSpeaking(b)," IsGiven(c,d)",[],[],"[(' gentleman', ' Man'), (' respect', ' gentleman'), (' respect', ' speaker')]",IsSpeaking(b),"IsGiven(c,d)","(forall b (IsSpeaking(b))) -> (exists d (IsGiven(c,d)))","(exists b (IsSpeaking(b))) -> (exists c (exists d (IsGiven(c,d))))",LF
191,1,,"One child in black is walking down a hill covered in white snow while 2 children are on their knees. Thus, there are three children in this picture, and they are all outside."," ""There are three children in this picture."""," ""They are all outside.""", IsInThisPicture(a), IsOutside(b),"[(' IsInThisPicture(a)', ' IsOutside(b)'), (' IsOutside(b)', ' IsInThisPicture(a)')]",[],"[(' three children', ' They'), (' three children', ' outside')]",IsInThisPicture(a),IsOutside(b),(exists a (IsInThisPicture(a)) & (forall a (forall b ( IsInThisPicture(a) ->  IsOutside(b)))) & (forall b (forall a ( IsOutside(b) ->  IsInThisPicture(a))))) -> (forall b (IsOutside(b))),(exists a (IsInThisPicture(a)) & (forall e (forall d ( IsInThisPicture(d) ->  IsOutside(e)))) & (forall f (forall g ( IsOutside(f) ->  IsInThisPicture(g))))) -> (exists b (IsOutside(b))),Valid
192,1,,A group of people are sight seeing and taking pictures. It follows that there are a group of people.," ""A group of people are sight seeing and taking pictures."""," ""There are a group of people."""," IsSightSeeing(a),  IsTakingPictures(a)", IsAGoupOfPeople(a),"[(' IsSightSeeing(a)', ' IsAGoupOfPeople(a)'), ('  IsTakingPictures(a)', ' IsAGoupOfPeople(a)')]","[(' A group of people', ' a group of people')]","[(' a group of people', ' sight seeing')]",IsSightSeeing(a) and IsTakingPictures(a),IsAGoupOfPeople(a),(IsSightSeeing(a) and IsTakingPictures(a) & (forall a ( IsSightSeeing(a) ->  IsAGoupOfPeople(a))) & (forall a (  IsTakingPictures(a) ->  IsAGoupOfPeople(a)))) -> (IsAGoupOfPeople(a)),(exists a (IsSightSeeing(a) and IsTakingPictures(a)) & (forall e ( IsSightSeeing(e) ->  IsAGoupOfPeople(e))) & (forall f (  IsTakingPictures(f) ->  IsAGoupOfPeople(f)))) -> (exists a (IsAGoupOfPeople(a))),Valid
193,1,,"Army men grilling a lot of meat while his troop looks on. Hence, some of the people here have been in the armed forces."," ""Some of the people here have been in the armed forces."""," ""Army men are grilling a lot of meat.""", IsInArmedForces(b), IsGrilling(d),[],[],"[(' Army men', ' armed forces')]",IsInArmedForces(b),IsArmyMen(c) and IsGrilling(d),(forall b (IsInArmedForces(b))) -> (exists c (IsArmyMen(c) and IsGrilling(d))),(exists b (IsInArmedForces(b))) -> (exists c (exists d (IsArmyMen(c) and IsGrilling(d)))),LF
194,1,,"The basketball player in red is challenging the player in white for the ball. Consequently, people are playing basketball."," ""The basketball player in red is challenging the player in white for the ball."""," ""People are playing basketball."""," IsInRed(a),  IsChallenging(a),  IsForBall(a)", IsPlayingBasketball(b),"[('  IsForBall(a)', ' IsPlayingBasketball(b)')]",[],"[(' People', '')]",IsInRed(a) and (IsChallenging(a) and IsForBall(a)),IsPlayingBasketball(b),(forall a (IsInRed(a) and (IsChallenging(a) and IsForBall(a))) & (forall a (forall b (  IsForBall(a) ->  IsPlayingBasketball(b))))) -> (exists b (IsPlayingBasketball(b))),(exists a (IsInRed(a) and (IsChallenging(a) and IsForBall(a))) & (forall e (forall d (  IsForBall(d) ->  IsPlayingBasketball(e))))) -> (exists b (IsPlayingBasketball(b))),Valid
195,1,,"A older man with gray hair wearing a gray suit next to a green and yellow taxi. Thus, a older man with gray hair wearing a gray suit."," ""An older man with gray hair wears a gray suit."""," ""A taxi is green and yellow."""," IsOlder(a),  HasGrayHair(b),  WearsGraySuit(c)"," IsGreen(d),  IsYellow(d)",[],[],[],IsOlder(a) and HasGrayHair(b) and WearsGraySuit(c),IsGreen(d) or IsYellow(d),(IsOlder(a) and HasGrayHair(b) and WearsGraySuit(c)) -> (IsGreen(d) or IsYellow(d)),(exists c (exists a (exists b (IsOlder(a) and HasGrayHair(b) and WearsGraySuit(c))))) -> (exists d (IsGreen(d) or IsYellow(d))),LF
196,1,,"A man drops something, reaching for it while a woman in a beige blazer discusses an important topic. Hence, a woman is talking while a man is reaching for something."," ""A man is reaching for something."""," ""A woman is talking."""," IsReachingFor(a,b)", IsTalking(c),"[(' IsTalking(c)', ' IsReachingFor(a,b)')]",[],"[(' Woman', ' something'), (' talking', ' something')]","IsReachingFor(a,b)",IsTalking(c),"(forall b (IsReachingFor(a,b)) & (forall c (forall a (forall b ( IsTalking(c) ->  IsReachingFor(a,b)))))) -> (exists c (IsTalking(c)))","(exists a (exists b (IsReachingFor(a,b))) & (forall e (forall f (forall g ( IsTalking(e) ->  IsReachingFor(f,g)))))) -> (exists c (IsTalking(c)))",LF
197,1,,A crowd watching a skateboarder. This implies that a person is skateboarding.," ""A crowd is watching a skateboarder."""," ""A person is skateboarding."""," IsWatching(a,b)", IsSkateboarding(c),[],[],"[(' skateboarder', ' skateboarding')]","IsWatching(a,b)",IsSkateboarding(c),"(IsWatching(a,b)) -> (IsSkateboarding(c))","(exists a (exists b (IsWatching(a,b)))) -> (exists c (IsSkateboarding(c)))",LF
198,1,,"A male guitar player is vigorously singing a not to a song in a poorly lit room. As a consequence, a man is singing indoors."," ""A male guitar player is vigorously singing a not to a song in a poorly lit room."""," ""A man is singing indoors."""," IsMale(a),  IsSinging(a),  IsInPoorlyLitRoom(c)"," IsSinging(d),  IsIndoors(e)",[],[],"[(' poorly lit room', ' indoors')]",IsMale(a) and IsSinging(a) and IsInPoorlyLitRoom(c),IsSinging(d) and IsIndoors(e),(exists c (IsMale(a) and IsSinging(a) and IsInPoorlyLitRoom(c))) -> (forall e (IsSinging(d) and IsIndoors(e))),(exists c (exists a (IsMale(a) and IsSinging(a) and IsInPoorlyLitRoom(c)))) -> (exists e (exists d (IsSinging(d) and IsIndoors(e)))),LF
199,1,,"The sun breaks through the trees as a child rides a swing. Thus, a child rides a swing in the daytime."," ""The sun breaks through the trees."""," ""A child rides a swing in the daytime."""," IsBreakingThrough(a),  IsATree(b)"," IsRides(c,d),  IsInDaytime(e)",[],[],"[(' daytime', ' The sun')]",IsBreakingThrough(a) and IsATree(b),"IsRides(c,d) and IsInDaytime(e)","(forall a (IsBreakingThrough(a) and IsATree(b))) -> (exists e (IsRides(c,d) and IsInDaytime(e)))","(exists a (exists b (IsBreakingThrough(a) and IsATree(b)))) -> (exists c (exists e (exists d (IsRides(c,d) and IsInDaytime(e)))))",LF
