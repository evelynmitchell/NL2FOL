(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun Told (BoundSet BoundSet) Bool)
(declare-fun At (BoundSet BoundSet) Bool)
(declare-fun NeedsBrainWashing (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((d BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((e BoundSet)) (exists ((c BoundSet)) (and (Told b c) (and (At c d) (NeedsBrainWashing e a)))))))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (Told h i) (NeedsBrainWashing j k)))))) (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((o BoundSet)) (forall ((n BoundSet)) (=> (NeedsBrainWashing l m) (At n o)))))))) (exists ((f BoundSet)) (exists ((a BoundSet)) (NeedsBrainWashing f a))))))
(check-sat)
(get-model)