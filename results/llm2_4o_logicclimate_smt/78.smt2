(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Causes (BoundSet BoundSet) Bool)
(declare-fun IsSubsequent (BoundSet) Bool)
(declare-fun IsInFollowingYears (BoundSet BoundSet) Bool)
(declare-fun AppearsToBeRising (BoundSet) Bool)
(declare-fun IsDueTo (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (Causes a b) (and (IsSubsequent b) (IsInFollowingYears b c)))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (AppearsToBeRising g) (Causes h i))))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (AppearsToBeRising j) (IsSubsequent k)))) (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (AppearsToBeRising l) (IsInFollowingYears m n)))))))) (exists ((d BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (and (AppearsToBeRising d) (or (IsDueTo d e) (IsDueTo d f)))))))))
(check-sat)
(get-model)