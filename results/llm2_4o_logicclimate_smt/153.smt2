(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsInOvercoat (BoundSet) Bool)
(declare-fun IsPuttingOnGloves (BoundSet) Bool)
(declare-fun IsAtSubwayStation (BoundSet) Bool)
(declare-fun IsInSubwayStation (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsInOvercoat a) (and (IsPuttingOnGloves a) (IsAtSubwayStation a)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsInOvercoat f) (IsInSubwayStation g)))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsInSubwayStation h) (IsInOvercoat i)))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsInSubwayStation j) (IsPuttingOnGloves k)))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (=> (IsAtSubwayStation l) (IsInSubwayStation m)))) (forall ((o BoundSet)) (forall ((n BoundSet)) (=> (IsInSubwayStation n) (IsAtSubwayStation o))))))))) (exists ((d BoundSet)) (IsInSubwayStation d)))))
(check-sat)
(get-model)