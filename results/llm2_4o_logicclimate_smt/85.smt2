(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Claims (BoundSet BoundSet) Bool)
(declare-fun IsWarmestYear (BoundSet) Bool)
(declare-fun IsOnRecord (BoundSet) Bool)
(declare-fun EngageInPublicRelations (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (Claims a b) (and (IsWarmestYear b) (IsOnRecord b))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (Claims f g) (EngageInPublicRelations f h))))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (EngageInPublicRelations i j) (Claims i k))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (EngageInPublicRelations l m) (IsWarmestYear n))))) (forall ((p BoundSet)) (forall ((q BoundSet)) (forall ((o BoundSet)) (=> (EngageInPublicRelations o p) (IsOnRecord q))))))))) (exists ((e BoundSet)) (exists ((a BoundSet)) (EngageInPublicRelations a e))))))
(check-sat)
(get-model)