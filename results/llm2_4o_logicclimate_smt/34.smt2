(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsMagnificent (BoundSet) Bool)
(declare-fun CanChangeFundamentally (BoundSet) Bool)
(declare-fun IsRelativelyShort (BoundSet) Bool)
(declare-fun WillChange (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsMagnificent a) (and (CanChangeFundamentally a) (IsRelativelyShort b))))) (and (forall ((c BoundSet)) (=> (WillChange c) (IsMagnificent c))) (and (forall ((d BoundSet)) (=> (CanChangeFundamentally d) (IsMagnificent d))) (and (forall ((e BoundSet)) (=> (CanChangeFundamentally e) (WillChange e))) (and (forall ((f BoundSet)) (=> (WillChange f) (CanChangeFundamentally f))) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (WillChange g) (IsRelativelyShort h))))))))) (exists ((a BoundSet)) (and (IsMagnificent a) (WillChange a))))))
(check-sat)
(get-model)