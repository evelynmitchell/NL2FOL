(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsWithout (BoundSet BoundSet) Bool)
(declare-fun IsOn (BoundSet BoundSet) Bool)
(declare-fun IsEssentialFor (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsWithout b a) (not (IsOn b c)))))) (and (forall ((d BoundSet)) (forall ((f BoundSet)) (forall ((g BoundSet)) (forall ((e BoundSet)) (=> (IsEssentialFor d e) (IsWithout f g)))))) (forall ((h BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsEssentialFor h i) (IsOn j k)))))))) (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsEssentialFor a b) (IsOn b c))))))))
(check-sat)
(get-model)