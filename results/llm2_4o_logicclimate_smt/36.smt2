(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun ClaimedLives (BoundSet BoundSet BoundSet) Bool)
(declare-fun Soared (BoundSet) Bool)
(declare-fun OccurredBefore (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (ClaimedLives a b c)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (ClaimedLives g h i) (Soared j)))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (forall ((n BoundSet)) (=> (Soared k) (ClaimedLives l m n)))))) (and (forall ((s BoundSet)) (forall ((o BoundSet)) (forall ((q BoundSet)) (forall ((p BoundSet)) (forall ((r BoundSet)) (=> (ClaimedLives o p q) (OccurredBefore r s))))))) (forall ((v BoundSet)) (forall ((t BoundSet)) (forall ((w BoundSet)) (forall ((x BoundSet)) (forall ((u BoundSet)) (=> (OccurredBefore t u) (ClaimedLives v w x))))))))))) (exists ((d BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (and (Soared d) (OccurredBefore e f))))))))
(check-sat)
(get-model)