(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsRidingDown (BoundSet BoundSet) Bool)
(declare-fun IsBetween (BoundSet BoundSet) Bool)
(declare-fun IsBoy (BoundSet) Bool)
(declare-fun IsRoad (BoundSet) Bool)
(declare-fun AreCows (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsRidingDown a c) (IsBetween a b))))) (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (IsBoy e) (IsBetween e f))))) (exists ((d BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsBoy a) (and (IsRoad d) (AreCows b)))))))))
(check-sat)
(get-model)