(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsStandingAt (BoundSet BoundSet) Bool)
(declare-fun IsStanding (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsStandingAt a c) (IsStandingAt b c))))) (and (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (IsStandingAt d e) (IsStanding d)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsStanding f) (IsStandingAt f g)))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsStandingAt h i) (IsStanding j))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (=> (IsStanding k) (IsStandingAt l m))))) (and (forall ((p BoundSet)) (forall ((o BoundSet)) (forall ((n BoundSet)) (=> (IsStandingAt n o) (IsStanding p))))) (and (forall ((s BoundSet)) (forall ((q BoundSet)) (forall ((r BoundSet)) (=> (IsStanding q) (IsStandingAt r s))))) (forall ((u BoundSet)) (forall ((t BoundSet)) (=> (IsStanding t) (IsStandingAt t u))))))))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsStanding a) (IsStanding b)))))))
(check-sat)
(get-model)