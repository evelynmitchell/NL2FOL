(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSittingOn (BoundSet BoundSet) Bool)
(declare-fun InFrontOf (BoundSet BoundSet) Bool)
(declare-fun IsSeatedOn (BoundSet BoundSet) Bool)
(declare-fun IsOutside (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsSittingOn a b) (InFrontOf b c))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsSittingOn g h) (IsSeatedOn i j)))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (forall ((n BoundSet)) (=> (IsSeatedOn k l) (IsSittingOn m n)))))) (and (forall ((p BoundSet)) (forall ((r BoundSet)) (forall ((q BoundSet)) (forall ((o BoundSet)) (=> (IsSittingOn o p) (IsOutside q r)))))) (forall ((v BoundSet)) (forall ((u BoundSet)) (forall ((s BoundSet)) (forall ((t BoundSet)) (=> (IsSeatedOn s t) (InFrontOf u v)))))))))) (exists ((d BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (and (IsSeatedOn d e) (IsOutside e f))))))))
(check-sat)
(get-model)