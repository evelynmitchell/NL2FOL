(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun TalksWith (BoundSet BoundSet) Bool)
(declare-fun InFrontOf (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((d BoundSet)) (exists ((b BoundSet)) (and (TalksWith b a) (and (InFrontOf a c) (InFrontOf a d))))))) (and (forall ((l BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (TalksWith i j) (InFrontOf k l)))))) (and (forall ((p BoundSet)) (forall ((m BoundSet)) (forall ((o BoundSet)) (forall ((n BoundSet)) (=> (TalksWith m n) (InFrontOf o p)))))) (forall ((t BoundSet)) (forall ((s BoundSet)) (forall ((q BoundSet)) (forall ((r BoundSet)) (=> (TalksWith q r) (InFrontOf s t))))))))) (exists ((f BoundSet)) (exists ((g BoundSet)) (exists ((e BoundSet)) (exists ((a BoundSet)) (and (TalksWith e f) (and (InFrontOf e g) (InFrontOf e a))))))))))
(check-sat)
(get-model)