(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInBeigeBlazer (BoundSet) Bool)
(declare-fun DiscussesTopic (BoundSet BoundSet) Bool)
(declare-fun ReachesFor (BoundSet) Bool)
(declare-fun IsTalking (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsInBeigeBlazer b) (and (DiscussesTopic b c) (ReachesFor a)))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsTalking f) (IsInBeigeBlazer g)))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (DiscussesTopic h i) (IsTalking j))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((k BoundSet)) (=> (IsTalking k) (DiscussesTopic l m))))) (and (forall ((p BoundSet)) (forall ((o BoundSet)) (forall ((n BoundSet)) (=> (ReachesFor n) (DiscussesTopic o p))))) (and (forall ((q BoundSet)) (forall ((r BoundSet)) (=> (ReachesFor q) (IsTalking r)))) (forall ((s BoundSet)) (forall ((t BoundSet)) (=> (IsTalking s) (ReachesFor t)))))))))) (exists ((d BoundSet)) (exists ((a BoundSet)) (and (IsTalking d) (ReachesFor a)))))))
(check-sat)
(get-model)