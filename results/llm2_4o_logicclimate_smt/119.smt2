(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInBrownHoodie (BoundSet) Bool)
(declare-fun IsShoppingForSnacks (BoundSet) Bool)
(declare-fun IsWearingBrown (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsInBrownHoodie a) (IsShoppingForSnacks a))) (and (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (IsInBrownHoodie d) (IsWearingBrown e)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsWearingBrown f) (IsInBrownHoodie g)))) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsWearingBrown h) (IsShoppingForSnacks i))))))) (exists ((c BoundSet)) (IsWearingBrown c)))))
(check-sat)
(get-model)