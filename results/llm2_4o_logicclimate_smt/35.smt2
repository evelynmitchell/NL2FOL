(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun ComparedTo (BoundSet BoundSet BoundSet) Bool)
(declare-fun MadeBy (BoundSet BoundSet) Bool)
(declare-fun Over (BoundSet BoundSet) Bool)
(declare-fun HaveFailed (BoundSet) Bool)
(assert (not (=> (and (exists ((d BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (exists ((c BoundSet)) (and (ComparedTo a b c) (and (MadeBy c d) (and (MadeBy c e) (Over c f)))))))))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (HaveFailed h) (ComparedTo i j k)))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (HaveFailed l) (MadeBy m n))))) (and (forall ((p BoundSet)) (forall ((q BoundSet)) (forall ((o BoundSet)) (=> (HaveFailed o) (MadeBy p q))))) (forall ((t BoundSet)) (forall ((r BoundSet)) (forall ((s BoundSet)) (=> (HaveFailed r) (Over s t))))))))) (exists ((g BoundSet)) (HaveFailed g)))))
(check-sat)
(get-model)