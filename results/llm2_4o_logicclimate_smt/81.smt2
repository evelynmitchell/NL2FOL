(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsReaching (BoundSet BoundSet) Bool)
(declare-fun ByMidCentury (BoundSet) Bool)
(declare-fun IsUninhabitable (BoundSet) Bool)
(declare-fun WillBreakDown (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsReaching b a) (ByMidCentury c))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (IsUninhabitable g) (IsReaching h i))))) (and (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsUninhabitable j) (ByMidCentury k)))) (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (WillBreakDown l m) (ByMidCentury n)))))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (exists ((a BoundSet)) (and (IsUninhabitable d) (WillBreakDown e a))))))))
(check-sat)
(get-model)