(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsASmallAspect (BoundSet) Bool)
(declare-fun IsPartOf (BoundSet BoundSet) Bool)
(declare-fun HasManyTerrifyingPossibilities (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsASmallAspect a) (IsPartOf c b))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (IsASmallAspect f) (HasManyTerrifyingPossibilities g)))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (HasManyTerrifyingPossibilities h) (IsASmallAspect i)))) (forall ((l BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (HasManyTerrifyingPossibilities j) (IsPartOf k l)))))))) (exists ((b BoundSet)) (HasManyTerrifyingPossibilities b)))))
(check-sat)
(get-model)