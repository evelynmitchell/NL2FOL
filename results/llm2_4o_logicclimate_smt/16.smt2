(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsRemarkablyWarm (BoundSet) Bool)
(declare-fun Ended (BoundSet BoundSet BoundSet) Bool)
(declare-fun IsSurprised (BoundSet BoundSet) Bool)
(declare-fun IsIn (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (IsRemarkablyWarm a) (Ended a b c))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsRemarkablyWarm f) (IsSurprised g h))))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsSurprised i j) (IsRemarkablyWarm k))))) (and (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (IsRemarkablyWarm l) (IsIn m n))))) (forall ((s BoundSet)) (forall ((o BoundSet)) (forall ((q BoundSet)) (forall ((p BoundSet)) (forall ((r BoundSet)) (=> (IsSurprised o p) (Ended q r s))))))))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (exists ((a BoundSet)) (and (IsSurprised d e) (IsIn e a))))))))
(check-sat)
(get-model)