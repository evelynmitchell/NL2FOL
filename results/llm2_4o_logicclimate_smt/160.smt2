(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsWearingHoodedTops (BoundSet) Bool)
(declare-fun AreLaughing (BoundSet) Bool)
(declare-fun Laugh (BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsWearingHoodedTops a) (AreLaughing a))) (and (forall ((d BoundSet)) (forall ((e BoundSet)) (=> (Laugh d) (IsWearingHoodedTops e)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (AreLaughing f) (Laugh g)))) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (Laugh h) (AreLaughing i))))))) (exists ((c BoundSet)) (Laugh c)))))
(check-sat)
(get-model)