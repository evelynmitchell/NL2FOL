(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsYoung (BoundSet) Bool)
(declare-fun IsInBlueTShirt (BoundSet) Bool)
(declare-fun IsInSweatpants (BoundSet) Bool)
(declare-fun IsInFrontOf (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsYoung a) (and (IsInBlueTShirt a) (IsInSweatpants a)))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsInFrontOf f g) (IsYoung h))))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (IsInFrontOf i j) (IsInBlueTShirt k))))) (forall ((l BoundSet)) (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (IsInFrontOf l m) (IsInSweatpants n)))))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (IsInFrontOf d e))))))
(check-sat)
(get-model)