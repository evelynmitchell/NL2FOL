(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun Disputed (BoundSet) Bool)
(declare-fun Stopping (BoundSet) Bool)
(declare-fun CallsForEnd (BoundSet) Bool)
(declare-fun DoesNotRequireEnd (BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (Disputed c) (and (Stopping a) (CallsForEnd b)))))) (and (forall ((f BoundSet)) (forall ((e BoundSet)) (=> (Disputed e) (Stopping f)))) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (Disputed g) (DoesNotRequireEnd h)))))) (exists ((a BoundSet)) (exists ((b BoundSet)) (and (Stopping a) (DoesNotRequireEnd b)))))))
(check-sat)
(get-model)