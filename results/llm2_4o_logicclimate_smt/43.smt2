(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun HasRisenOverTime (BoundSet) Bool)
(declare-fun BuildsInfrastructureInAreas (BoundSet BoundSet) Bool)
(declare-fun ProneToWeatherDamage (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (HasRisenOverTime a)) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (HasRisenOverTime g) (BuildsInfrastructureInAreas h i))))) (and (forall ((l BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (BuildsInfrastructureInAreas j k) (HasRisenOverTime l))))) (forall ((m BoundSet)) (forall ((o BoundSet)) (forall ((n BoundSet)) (=> (HasRisenOverTime m) (ProneToWeatherDamage n o)))))))) (exists ((c BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (and (BuildsInfrastructureInAreas c e) (ProneToWeatherDamage e f))))))))
(check-sat)
(get-model)