(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsTheFirstCoat (BoundSet) Bool)
(declare-fun IsWhite (BoundSet) Bool)
(declare-fun Conceals (BoundSet BoundSet) Bool)
(declare-fun HasDiminishingEffects (BoundSet) Bool)
(declare-fun IsAddedTo (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((c BoundSet)) (exists ((a BoundSet)) (and (IsTheFirstCoat a) (and (IsWhite a) (Conceals a c))))) (and (forall ((f BoundSet)) (forall ((g BoundSet)) (=> (HasDiminishingEffects f) (IsTheFirstCoat g)))) (and (forall ((h BoundSet)) (forall ((i BoundSet)) (=> (HasDiminishingEffects h) (IsWhite i)))) (forall ((l BoundSet)) (forall ((j BoundSet)) (forall ((k BoundSet)) (=> (HasDiminishingEffects j) (Conceals k l)))))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (IsAddedTo d e) (HasDiminishingEffects d)))))))
(check-sat)
(get-model)