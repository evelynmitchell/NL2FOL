label,updated_label,articles,Logical Form,Logical Form 2
0,false causality,"Giving 10% of your income to the Church will free a child’s soul from Limbo into Heaven, so give your money!","(exists e (forall b ((IsGiven(b,a) and IsInLimbo(c)) and IsInHeaven(e)))) -> (forall a (exists f (IsGiven(f,a))))","(exists a (exists c (exists e (exists b ((IsGiven(b,a) and IsInLimbo(c)) and IsInHeaven(e)))))) -> (exists a (exists f (IsGiven(f,a))))"
0,appeal to emotion,"If everyone lived his or her life exactly like Jesus lived his life, the world would be a beautiful place!","(forall c (IsLivedExactlyLike(a,c))) -> (exists e (IsBeautiful(d) and IsAPlace(e)))","(exists a (exists c (IsLivedExactlyLike(a,c)))) -> (exists d (exists e (IsBeautiful(d) and IsAPlace(e))))"
0,appeal to emotion,"I know you don’t like the kitty-cat sweater that Grandma knitted for you, but she worked so hard on it and it will make her happy to see you wear it in the family holiday photo.",(IsKnitted(a) and IsFor(b)) -> (IsWorn(c) and MakesHappy(a)),(exists a (exists b (IsKnitted(a) and IsFor(b)))) -> (exists a (exists c (IsWorn(c) and MakesHappy(a))))
0,ad populum,"Dave wants you to break into the spooky cabin with him. “Everyone does it,” he claims. What fallacy has he committed?","(IsInSpookyCabin(b) & (forall a (forall c ( ShouldBreakInto(c,a) ->  IsInSpookyCabin(a))))) -> (ShouldBreakInto(c,a))","(exists b (IsInSpookyCabin(b)) & (forall d (forall e ( ShouldBreakInto(d,e) ->  IsInSpookyCabin(e))))) -> (exists a (exists c (ShouldBreakInto(c,a))))"
0,fallacy of credibility,"Ms. Drayer, the smartest person in the universe, says the debate is the best class, therefore it is.",(exists c (exists b (IsTeacherOf(b) and IsBestClass(c)))) -> (forall a (IsBestClass(a))),(exists c (exists b (IsTeacherOf(b) and IsBestClass(c)))) -> (exists a (IsBestClass(a)))
0,faulty generalization,Why did the blond cross the road?  Because she saw a shoe sale!,(IsBlonde(a) and IsCrossedTheRoad(a)) -> (IsThere(b) and IsShoeSale(c)),(exists a (IsBlonde(a) and IsCrossedTheRoad(a))) -> (exists c (exists b (IsThere(b) and IsShoeSale(c))))
0,appeal to emotion,"Timmy: Mom, what if I don’t believe in God?
Mom: Then you burn in Hell forever.  Why do you ask?
Timmy: No reason.
",(IsBelieveIn(a) and ~IsGod(b) & (forall d (forall b (  IsGod(b) ->   IsForever(d))))) -> (IsBurnIn(a) and IsInHell(c) and IsForever(d)),(exists a (exists b (IsBelieveIn(a) and ~IsGod(b))) & (forall f (forall e (  IsGod(e) ->   IsForever(f))))) -> (exists a (exists d (exists c (IsBurnIn(a) and IsInHell(c) and IsForever(d)))))
0,false dilemma,"""If you never gave money to charity, then you must be a greedy millionaire."" What is this?",() -> (),() -> ()
0,fallacy of extension,Caroline says that she is going to have lunch with the new girl. Jenna says that she can't believe that Caroline is ditching her old friends for the new girl.,"(forall b (exists a (IsGoingToHaveLunch(a,b)))) -> (exists c (exists a (forall b (IsBelieve(c) and (IsDitching(a,b) or IsNewGirl(b))))))","(exists a (exists b (IsGoingToHaveLunch(a,b)))) -> (exists a (exists b (exists c (IsBelieve(c) and (IsDitching(a,b) or IsNewGirl(b))))))"
0,faulty generalization,"""You can never give anyone a break. If you do, they'll walk all over you.""",() -> (),() -> ()
1,,A white and black dog catching a Frisbee. It follows that the dog is playing with a toy thrown by a person.,"(forall a (IsCaught(a,b))) -> (exists c (IsPlaying(c) and (Threw(d,e) and IsTheSamePerson(d,e))))","(exists a (exists b (IsCaught(a,b)))) -> (exists d (exists e (exists c (IsPlaying(c) and (Threw(d,e) and IsTheSamePerson(d,e))))))"
1,,"A firefighter is putting wooden blocks under a crushed blue car. Therefore, the firefighter is putting something under the car.","(forall c (IsPutting(a,c) and IsUnder(b))) -> (exists d (exists a (IsPutting(a,d) and IsUnder(b))))","(exists a (exists b (exists c (IsPutting(a,c) and IsUnder(b))))) -> (exists a (exists d (exists b (IsPutting(a,d) and IsUnder(b)))))"
1,,"Hispanic woman wearing a red plaid shirt works on sewing an article of clothing. As a consequence, woman wearing a shirt sewing.",(forall c (exists b (IsHispanic(a) and IsWearingRedPlaidShirt(b) and WorksOnSewing(c))) & (forall e (forall b (  IsWearingRedPlaidShirt(b) ->  IsWearing(e)))) & (forall b (forall e ( IsWearing(e) ->   IsWearingRedPlaidShirt(b)))) & (forall f (forall c (  WorksOnSewing(c) ->   IsSewing(f)))) & (forall f (forall c (  IsSewing(f) ->   WorksOnSewing(c))))) -> (exists f (forall e (IsWearing(e) and IsSewing(f)))),(exists a (exists c (exists b (IsHispanic(a) and IsWearingRedPlaidShirt(b) and WorksOnSewing(c)))) & (forall h (forall g (  IsWearingRedPlaidShirt(g) ->  IsWearing(h)))) & (forall j (forall i ( IsWearing(i) ->   IsWearingRedPlaidShirt(j)))) & (forall l (forall k (  WorksOnSewing(k) ->   IsSewing(l)))) & (forall n (forall m (  IsSewing(m) ->   WorksOnSewing(n))))) -> (exists f (exists e (IsWearing(e) and IsSewing(f))))
1,,"A group of people walking down the street with one on the phone in a green hat. Thus, people are outside.",(forall b (IsOutside(b))) -> (exists d (exists c (IsOnPhone(c) and IsWearingGreenHat(d)))),(exists b (IsOutside(b))) -> (exists d (exists c (IsOnPhone(c) and IsWearingGreenHat(d))))
1,,Six children run towards a soccer ball on an athletic field. It follows that children run towards a soccer ball.,"(exists b (IsRunTowards(b,a))) -> (forall c (IsRunTowards(c,a)))","(exists a (exists b (IsRunTowards(b,a)))) -> (exists a (exists c (IsRunTowards(c,a))))"
1,,"A man with no shirt and purple pants crouches while tampering with a metallic object. Consequently, shirtless man tampers with metal thing.",(forall b (IsNoShirt(a) and IsTampering(b))) -> (exists d (IsTampering(d))),(exists a (exists b (IsNoShirt(a) and IsTampering(b)))) -> (exists d (IsTampering(d)))
1,,A smiling girl in glasses and a blue-gray scarf with a smiling girl in a black coat leaning on her shoulder. This implies that the girls are smiling.,(exists c (exists a (IsInGlasses(a) and (HasBlueGrayScarf(b) and Smiles(c)))) & (forall d (forall c (  Smiles(c) ->  IsSmiling(d)))) & (forall d (forall c ( IsSmiling(d) ->   Smiles(c))))) -> (forall d (IsSmiling(d))),(exists a (exists c (exists b (IsInGlasses(a) and (HasBlueGrayScarf(b) and Smiles(c))))) & (forall f (forall e (  Smiles(e) ->  IsSmiling(f)))) & (forall h (forall g ( IsSmiling(g) ->   Smiles(h))))) -> (exists d (IsSmiling(d)))
1,,"A man in a yellow tie is rubbing the back of his neck. Hence, a man is rubbing his neck.",(forall b (IsRubbing(b))) -> (exists d (IsInYellowTie(c) and IsRubbing(d))),(exists b (IsRubbing(b))) -> (exists d (exists c (IsInYellowTie(c) and IsRubbing(d))))
1,,"A baseball player gets ready to catch a fly ball near the outfield fence. Therefore, a person is playing baseball outdoors.",(forall a (IsGettingReady(a) and (IsABaseballPlayer(a) and IsCatchingFlyBall(a) and IsNearOutfieldFence(a))) & (forall a ( IsABaseballPlayer(a) ->  IsPlayingBaseball(a))) & (forall a ( IsPlayingBaseball(a) ->  IsABaseballPlayer(a))) & (forall a (  IsNearOutfieldFence(a) ->   IsOutdoors(a)))) -> (exists c (IsPlayingBaseball(a) and IsOutdoors(c))),(exists a (IsGettingReady(a) and (IsABaseballPlayer(a) and IsCatchingFlyBall(a) and IsNearOutfieldFence(a))) & (forall e ( IsABaseballPlayer(e) ->  IsPlayingBaseball(e))) & (forall f ( IsPlayingBaseball(f) ->  IsABaseballPlayer(f))) & (forall g (  IsNearOutfieldFence(g) ->   IsOutdoors(g)))) -> (exists a (exists c (IsPlayingBaseball(a) and IsOutdoors(c))))
1,,A bald man has hand on the shoulder of another man. It follows that a man is touching another person.,"(exists b (IsBald(a) and HasHandOnShoulder(b)) & (forall a (forall d (forall c ( IsBald(a) ->  IsTouching(c,d))))) & (forall d (forall c (forall b (  HasHandOnShoulder(b) ->  IsTouching(c,d))))) & (forall d (forall b (forall c ( IsTouching(c,d) ->   HasHandOnShoulder(b)))))) -> (forall d (forall c (IsTouching(c,d))))","(exists a (exists b (IsBald(a) and HasHandOnShoulder(b))) & (forall g (forall f (forall e ( IsBald(e) ->  IsTouching(f,g))))) & (forall j (forall i (forall h (  HasHandOnShoulder(h) ->  IsTouching(i,j))))) & (forall l (forall m (forall k ( IsTouching(k,l) ->   HasHandOnShoulder(m)))))) -> (exists d (exists c (IsTouching(c,d))))"
