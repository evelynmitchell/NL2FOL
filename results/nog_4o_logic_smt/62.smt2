(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun BuysStocks (BoundSet) Bool)
(declare-fun BetsOnHorseRacing (BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(declare-fun RisksMoney (BoundSet BoundSet) Bool)
(declare-fun HasLittleChanceOfMakingProfit (BoundSet BoundSet) Bool)
(assert (not (=> (exists ((b BoundSet)) (and (exists ((a BoundSet)) (( (and (BuysStocks a) (BetsOnHorseRacing b)))) (and (BetsOnHorseRacing b) (BuysStocks a)))) (exists ((b BoundSet)) (exists ((d BoundSet)) (exists ((a BoundSet)) (and (exists ((c BoundSet)) (( (and (BuysStocks a) (BetsOnHorseRacing b)))) (and (RisksMoney a c) (and (RisksMoney b c) (HasLittleChanceOfMakingProfit c d))))))))))
(check-sat)
(get-model)