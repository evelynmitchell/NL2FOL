(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsWalkingUnder (BoundSet BoundSet) Bool)
(declare-fun IsOpen (BoundSet) Bool)
(declare-fun IsIndoors (BoundSet) Bool)
(declare-fun IsSpilled (BoundSet) Bool)
(declare-fun IsInFrontOf (BoundSet BoundSet) Bool)
(declare-fun ForgotToKnockOnWood (BoundSet BoundSet) Bool)
(declare-fun IsLucky (BoundSet) Bool)
(declare-fun IsHavingBadDay (BoundSet BoundSet) Bool)
(declare-fun IsCausedByBadLuck (BoundSet BoundSet) Bool)
(assert (not (=> (exists ((a BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (exists ((c BoundSet)) (exists ((b BoundSet)) (exists ((d BoundSet)) (exists ((h BoundSet)) (exists ((g BoundSet)) (and (IsWalkingUnder a b) (and (IsOpen c) (and (IsIndoors d) (and (IsSpilled e) (and (IsInFrontOf e f) (and (ForgotToKnockOnWood a g) (IsLucky h))))))))))))))) (exists ((a BoundSet)) (exists ((i BoundSet)) (exists ((j BoundSet)) (and (IsHavingBadDay a i) (IsCausedByBadLuck i j))))))))
(check-sat)
(get-model)