(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsMale (BoundSet) Bool)
(declare-fun PlaysGuitar (BoundSet) Bool)
(declare-fun IsSinging (BoundSet) Bool)
(declare-fun IsInPoorlyLitRoom (BoundSet) Bool)
(declare-fun IsASong (BoundSet) Bool)
(declare-fun IsMan (BoundSet) Bool)
(declare-fun IsIndoors (BoundSet) Bool)
(assert (not (=> (exists ((b BoundSet)) (exists ((a BoundSet)) (and (IsMale a) (and (PlaysGuitar a) (and (IsSinging a) (and (IsInPoorlyLitRoom a) (IsASong b))))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (IsMan d) (and (IsSinging d) (IsIndoors e))))))))
(check-sat)
(get-model)