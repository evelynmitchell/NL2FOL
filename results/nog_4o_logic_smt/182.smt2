(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSmoking (BoundSet) Bool)
(declare-fun IsLeaningAgainst (BoundSet BoundSet) Bool)
(declare-fun HasMissingPersonFlier (BoundSet BoundSet) Bool)
(declare-fun IsAgainst (BoundSet BoundSet) Bool)
(declare-fun HasFlier (BoundSet BoundSet) Bool)
(assert (not (=> (exists ((b BoundSet)) (exists ((a BoundSet)) (exists ((c BoundSet)) (and (IsSmoking a) (and (IsLeaningAgainst a b) (HasMissingPersonFlier b c)))))) (exists ((d BoundSet)) (exists ((f BoundSet)) (exists ((e BoundSet)) (and (IsSmoking d) (and (IsAgainst d e) (HasFlier e f)))))))))
(check-sat)
(get-model)