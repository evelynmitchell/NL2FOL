(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsConcerned (BoundSet) Bool)
(declare-fun HasSkippedClass (BoundSet BoundSet) Bool)
(declare-fun IsUnemployed (BoundSet) Bool)
(declare-fun IsLivingAtHome (BoundSet BoundSet) Bool)
(declare-fun IsForRestOfLife (BoundSet BoundSet) Bool)
(assert (not (=> (exists ((b BoundSet)) (exists ((a BoundSet)) (exists ((c BoundSet)) (and (IsConcerned c) (HasSkippedClass a b))))) (exists ((b BoundSet)) (exists ((a BoundSet)) (exists ((e BoundSet)) (and (IsUnemployed a) (and (IsLivingAtHome a e) (IsForRestOfLife a b)))))))))
(check-sat)
(get-model)