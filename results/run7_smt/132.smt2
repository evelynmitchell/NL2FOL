(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsScreaming (BoundSet) Bool)
(declare-fun IsClutching (BoundSet) Bool)
(declare-fun IsUpset (BoundSet) Bool)
(declare-fun IsWalking (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (and (IsScreaming a) (IsClutching b)))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (IsScreaming e) (IsUpset f)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsUpset g) (IsScreaming h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsClutching i) (IsUpset j)))) (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (IsUpset k) (IsClutching l)))))))) (exists ((c BoundSet)) (exists ((d BoundSet)) (and (IsUpset c) (IsWalking d)))))))
(check-sat)
(get-model)