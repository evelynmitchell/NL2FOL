(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsInGlasses (BoundSet) Bool)
(declare-fun HasBlueGrayScarf (BoundSet) Bool)
(declare-fun Smiles (BoundSet) Bool)
(declare-fun IsSmiling (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((a BoundSet)) (and (IsInGlasses a) (and (HasBlueGrayScarf b) (Smiles c)))))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (Smiles e) (IsSmiling f)))) (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsSmiling g) (Smiles h)))))) (exists ((d BoundSet)) (IsSmiling d)))))
(check-sat)
(get-model)