(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsElderly (BoundSet) Bool)
(declare-fun IsThrough (BoundSet) Bool)
(declare-fun IsOld (BoundSet) Bool)
(declare-fun IsLookingAt (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (and (IsElderly a) (IsThrough b)))) (and (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (IsElderly e) (IsOld f)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsOld g) (IsElderly h)))) (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsThrough i) (IsLookingAt j))))))) (exists ((c BoundSet)) (exists ((d BoundSet)) (and (IsOld c) (IsLookingAt d)))))))
(check-sat)
(get-model)