(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsGivenTo (BoundSet BoundSet) Bool)
(declare-fun HasPassingGrade (BoundSet) Bool)
(declare-fun DeservesPassingGrade (BoundSet BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((c BoundSet)) (exists ((a BoundSet)) (and (IsGivenTo b c) (HasPassingGrade a))))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (IsGivenTo e f) (DeservesPassingGrade g h)))))) (and (forall ((k BoundSet)) (forall ((i BoundSet)) (forall ((j BoundSet)) (forall ((l BoundSet)) (=> (DeservesPassingGrade i j) (IsGivenTo k l)))))) (and (forall ((m BoundSet)) (forall ((n BoundSet)) (=> (HasPassingGrade m) (DeservesPassingGrade n m)))) (forall ((p BoundSet)) (forall ((o BoundSet)) (=> (DeservesPassingGrade o p) (HasPassingGrade p)))))))) (exists ((d BoundSet)) (exists ((a BoundSet)) (DeservesPassingGrade d a))))))
(check-sat)
(get-model)