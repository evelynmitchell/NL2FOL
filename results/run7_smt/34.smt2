(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsMyOpponent (BoundSet) Bool)
(declare-fun IsAttemptToRefute (BoundSet) Bool)
(declare-fun IsIllogical (BoundSet) Bool)
(declare-fun IsFallacious (BoundSet) Bool)
(declare-fun IsIncoherent (BoundSet) Bool)
(declare-fun ( (Bool) Bool)
(assert (not (=> (and (exists ((a BoundSet)) (and (IsMyOpponent a) (IsAttemptToRefute a))) (forall ((f BoundSet)) (=> (IsIllogical f) (IsAttemptToRefute f)))) (or (exists ((a BoundSet)) (( (and (IsFallacious a) (IsIncoherent a)))) (IsIllogical a)))))
(check-sat)
(get-model)