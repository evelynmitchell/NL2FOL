(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(declare-fun IsUbaTubaWhiteMen'sClub (BoundSet) Bool)
(declare-fun AreUpstandingCitizens (BoundSet) Bool)
(declare-fun IsTrueUbaTubaWhiteMen'sClubMembers (BoundSet) Bool)
(declare-fun IsInJail (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (and (IsUbaTubaWhiteMen'sClub a) (AreUpstandingCitizens b)))) (and (forall ((g BoundSet)) (forall ((h BoundSet)) (=> (IsUbaTubaWhiteMen'sClub g) (IsTrueUbaTubaWhiteMen'sClubMembers h)))) (and (forall ((i BoundSet)) (forall ((j BoundSet)) (=> (IsTrueUbaTubaWhiteMen'sClubMembers i) (IsUbaTubaWhiteMen'sClub j)))) (forall ((k BoundSet)) (forall ((l BoundSet)) (=> (IsTrueUbaTubaWhiteMen'sClubMembers k) (AreUpstandingCitizens l))))))) (exists ((d BoundSet)) (exists ((e BoundSet)) (and (IsTrueUbaTubaWhiteMen'sClubMembers d) (not (IsInJail e))))))))
(check-sat)
(get-model)