(set-logic ALL)
(set-option :produce-models true)
(declare-sort BoundSet 0)
(declare-sort UnboundSet 0)
(set-option :finite-model-find true)
(declare-fun IsSteadilyCompleting (BoundSet BoundSet) Bool)
(declare-fun IsWorkingHard (BoundSet) Bool)
(declare-fun IsInFactory (BoundSet) Bool)
(assert (not (=> (and (exists ((b BoundSet)) (exists ((a BoundSet)) (IsSteadilyCompleting a b))) (and (forall ((g BoundSet)) (forall ((e BoundSet)) (forall ((f BoundSet)) (=> (IsSteadilyCompleting e f) (IsWorkingHard g))))) (forall ((h BoundSet)) (forall ((j BoundSet)) (forall ((i BoundSet)) (=> (IsSteadilyCompleting h i) (IsInFactory j))))))) (exists ((c BoundSet)) (exists ((d BoundSet)) (and (IsWorkingHard c) (IsInFactory d)))))))
(check-sat)
(get-model)